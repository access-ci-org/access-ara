usage: vpkg_info [-h] [--verbose] [--context <context-list>] [--parent]
                 <pkgId|versPkgId> [<pkgId|versPkgId> ...]
vpkg_info: error: too few arguments
ERROR:  No package with id "Available"
[alphafold] {
  contexts: all
  actions: {
    ALPHAFOLD_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://github.com/google-deepmind/alphafold
  protein structure prediction tool developed by DeepMind
  prefix: /opt/shared/alphafold
  source file: /opt/shared/valet/2.1/etc/alphafold.vpkg_yaml
  default version: alphafold/2.3.2
  versions: {
    [alphafold/2.3.1:tacc] {
      contexts: all
      actions: {
        SINGULARITY_IMAGE=${VALET_PATH_PREFIX}/alphafold.sif (contexts: all)
      }
      dependencies: {
        singularity/default
      }
      TACC containerized 2.3.1 build with CUDA support
      prefix: /opt/shared/alphafold/2.3.1-tacc
    }
    [alphafold/2.3.2] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-python.sh
        } (contexts: all)
      }
      dependencies: {
        intel-oneapi/2023
      }
      virtualenv built from 2.3.2 source
      prefix: /opt/shared/alphafold/2.3.2
      standard paths: {
        bin: /opt/shared/alphafold/2.3.2/bin
        lib: /opt/shared/alphafold/2.3.2/lib
        man: /opt/shared/alphafold/2.3.2/share/man
        info: /opt/shared/alphafold/2.3.2/share/info
        include: /opt/shared/alphafold/2.3.2/include
        pkgConfig: /opt/shared/alphafold/2.3.2/lib/pkgconfig
      }
    }
  }
}

[amd-rocm] {
  contexts: all
  actions: {
    executable(source, succeedThenFail, success=0) {
      sh : /opt/shared/valet/2.1/libexec/amd-rocm.sh
    } (contexts: all)
    ROCMOPENCL=${VALET_PATH_PREFIX}/opencl (contexts: all)
    AMD_DASH_ROCM_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://www.amd.com/en/graphics/servers-solutions-rocm
  Open Software Platform for Accelerated Compute
  prefix: /opt/shared/amd-roc/rocm
  source file: /opt/shared/valet/2.1/etc/amd-rocm.vpkg_yaml
  default version: amd-rocm/5.1.0
  versions: {
    [amd-rocm/4.0.0] {
      contexts: all
      release 4.0.0 from amd.com
      prefix: /opt/shared/amd-roc/rocm/4.0.0
      standard paths: {
        bin: /opt/shared/amd-roc/rocm/4.0.0/bin
        lib: /opt/shared/amd-roc/rocm/4.0.0/lib, /opt/shared/amd-roc/rocm/4.0.0/lib64
        man: /opt/shared/amd-roc/rocm/4.0.0/share/man
        info: /opt/shared/amd-roc/rocm/4.0.0/share/info
        include: /opt/shared/amd-roc/rocm/4.0.0/include
        pkgConfig: /opt/shared/amd-roc/rocm/4.0.0/share/pkgconfig
      }
    }
    [amd-rocm/5.0.0] {
      contexts: all
      release 5.0.0 from amd.com
      prefix: /opt/shared/amd-roc/rocm/5.0.0
      standard paths: {
        bin: /opt/shared/amd-roc/rocm/5.0.0/bin
        lib: /opt/shared/amd-roc/rocm/5.0.0/lib, /opt/shared/amd-roc/rocm/5.0.0/lib64
        man: /opt/shared/amd-roc/rocm/5.0.0/share/man
        info: /opt/shared/amd-roc/rocm/5.0.0/share/info
        include: /opt/shared/amd-roc/rocm/5.0.0/include
        pkgConfig: /opt/shared/amd-roc/rocm/5.0.0/share/pkgconfig
      }
    }
    [amd-rocm/5.0.2] {
      contexts: all
      release 5.0.2 from amd.com
      prefix: /opt/shared/amd-roc/rocm/5.0.2
      standard paths: {
        bin: /opt/shared/amd-roc/rocm/5.0.2/bin
        lib: /opt/shared/amd-roc/rocm/5.0.2/lib, /opt/shared/amd-roc/rocm/5.0.2/lib64
        man: /opt/shared/amd-roc/rocm/5.0.2/share/man
        info: /opt/shared/amd-roc/rocm/5.0.2/share/info
        include: /opt/shared/amd-roc/rocm/5.0.2/include
        pkgConfig: /opt/shared/amd-roc/rocm/5.0.2/share/pkgconfig
      }
    }
    [amd-rocm/5.1.0] {
      contexts: all
      release 5.1.0 from amd.com
      prefix: /opt/shared/amd-roc/rocm/5.1.0
      standard paths: {
        bin: /opt/shared/amd-roc/rocm/5.1.0/bin
        lib: /opt/shared/amd-roc/rocm/5.1.0/lib, /opt/shared/amd-roc/rocm/5.1.0/lib64
        man: /opt/shared/amd-roc/rocm/5.1.0/share/man
        info: /opt/shared/amd-roc/rocm/5.1.0/share/info
        include: /opt/shared/amd-roc/rocm/5.1.0/include
        pkgConfig: /opt/shared/amd-roc/rocm/5.1.0/share/pkgconfig
      }
    }
    [amd-rocm/5.4.3] {
      contexts: all
      release 5.4.3 from amd.com
      prefix: /opt/shared/amd-roc/rocm/5.4.3
      standard paths: {
        bin: /opt/shared/amd-roc/rocm/5.4.3/bin
        lib: /opt/shared/amd-roc/rocm/5.4.3/lib
        man: /opt/shared/amd-roc/rocm/5.4.3/share/man
        info: /opt/shared/amd-roc/rocm/5.4.3/share/info
        include: /opt/shared/amd-roc/rocm/5.4.3/include
        pkgConfig: /opt/shared/amd-roc/rocm/5.4.3/share/pkgconfig
      }
    }
  }
}

[amd-uprof] {
  contexts: all
  actions: {
    AMD_DASH_UPROF_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://www.amd.com/en/developer/uprof.html
  AMD software profiling analysis tool for x86 applications on AMD "Zen"-based processors
  prefix: /opt/shared/amd-uprof
  source file: /opt/shared/valet/2.1/etc/amd-uprof.vpkg_yaml
  default version: amd-uprof/4.1.424
  versions: {
    [amd-uprof/4.1.424] {
      contexts: all
      official release for Linux
      prefix: /opt/shared/amd-uprof/4.1.424
      standard paths: {
        bin: /opt/shared/amd-uprof/4.1.424/bin
        lib: /opt/shared/amd-uprof/4.1.424/lib
        include: /opt/shared/amd-uprof/4.1.424/include
      }
    }
  }
}

[anaconda] {
  contexts: all
  actions: {
    CONDA_ENVS_PATH=${HOME}/.conda/envs:${VALET_PATH_PREFIX}/envs (contexts: all)
    ANACONDA_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.anaconda.com/
  Open Enterprise Python
  prefix: /opt/shared/anaconda
  source file: /opt/shared/valet/2.1/etc/anaconda.vpkg_yaml
  default version: anaconda/5.3.1:python2
  versions: {
    [anaconda/5.3.1:python2] {
      contexts: all
      Anaconda Python2
      prefix: /opt/shared/anaconda/5.3.1-python2
      standard paths: {
        bin: /opt/shared/anaconda/5.3.1-python2/bin
        lib: /opt/shared/anaconda/5.3.1-python2/lib
        man: /opt/shared/anaconda/5.3.1-python2/man, /opt/shared/anaconda/5.3.1-python2/share/man
        info: /opt/shared/anaconda/5.3.1-python2/share/info
        include: /opt/shared/anaconda/5.3.1-python2/include
        pkgConfig: /opt/shared/anaconda/5.3.1-python2/lib/pkgconfig
      }
    }
    [anaconda/5.3.1:python3] {
      contexts: all
      Anaconda Python3
      prefix: /opt/shared/anaconda/5.3.1-python3
      standard paths: {
        bin: /opt/shared/anaconda/5.3.1-python3/bin
        lib: /opt/shared/anaconda/5.3.1-python3/lib
        man: /opt/shared/anaconda/5.3.1-python3/man, /opt/shared/anaconda/5.3.1-python3/share/man
        info: /opt/shared/anaconda/5.3.1-python3/share/info
        include: /opt/shared/anaconda/5.3.1-python3/include
        pkgConfig: /opt/shared/anaconda/5.3.1-python3/lib/pkgconfig
      }
    }
    [anaconda/2020.11:python3] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/anaconda-activate-2020.sh
        } (contexts: all)
      }
      Anaconda Python3 (Python 2 deprecated)
      prefix: /opt/shared/anaconda/2020.11-python3
      standard paths: {
        bin: /opt/shared/anaconda/2020.11-python3/bin, /opt/shared/anaconda/2020.11-python3/sbin
        lib: /opt/shared/anaconda/2020.11-python3/lib
        man: /opt/shared/anaconda/2020.11-python3/man, /opt/shared/anaconda/2020.11-python3/share/man
        info: /opt/shared/anaconda/2020.11-python3/share/info
        include: /opt/shared/anaconda/2020.11-python3/include
        pkgConfig: /opt/shared/anaconda/2020.11-python3/lib/pkgconfig
      }
    }
    [anaconda/2022.05:python3] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/anaconda-activate-2020.sh
        } (contexts: all)
      }
      Anaconda Python3 (Python 2 deprecated)
      prefix: /opt/shared/anaconda/2022.05-python3
      standard paths: {
        bin: /opt/shared/anaconda/2022.05-python3/bin, /opt/shared/anaconda/2022.05-python3/sbin
        lib: /opt/shared/anaconda/2022.05-python3/lib
        man: /opt/shared/anaconda/2022.05-python3/man, /opt/shared/anaconda/2022.05-python3/share/man
        info: /opt/shared/anaconda/2022.05-python3/share/info
        include: /opt/shared/anaconda/2022.05-python3/include
        pkgConfig: /opt/shared/anaconda/2022.05-python3/lib/pkgconfig
      }
    }
    [anaconda/2023.03:python3] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/anaconda-activate-2020.sh
        } (contexts: all)
      }
      Anaconda Python3 (Python 2 deprecated)
      prefix: /opt/shared/anaconda/2023.03
      standard paths: {
        bin: /opt/shared/anaconda/2023.03/bin, /opt/shared/anaconda/2023.03/sbin
        lib: /opt/shared/anaconda/2023.03/lib
        man: /opt/shared/anaconda/2023.03/man, /opt/shared/anaconda/2023.03/share/man
        info: /opt/shared/anaconda/2023.03/share/info
        include: /opt/shared/anaconda/2023.03/include
        pkgConfig: /opt/shared/anaconda/2023.03/lib/pkgconfig
      }
    }
  }
}

[aocl] {
  contexts: all
  actions: {
    AOCL_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://developer.amd.com/amd-aocl/
  AMD Optimized CPU Libraries (BLIS, FFTW, ScaLAPACK, etc.)
  prefix: /opt/shared/aocl
  source file: /opt/shared/valet/2.1/etc/aocl.vpkg_yaml
  default version: aocl/2.2
  versions: {
    [aocl/2.2] {
      contexts: all
      version 2.2-5 for Linux GCC compilers
      prefix: /opt/shared/aocl/2.2
      standard paths: {
        lib: /opt/shared/aocl/2.2/lib
        include: /opt/shared/aocl/2.2/include
      }
    }
  }
}

[arpack] {
  contexts: all
  actions: {
    ARPACK_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://www.caam.rice.edu/software/ARPACK/
  A collection of Fortran77 subroutines designed to solve large scale eigenvalue problems
  prefix: /opt/shared/arpack
  source file: /opt/shared/valet/2.1/etc/arpack.vpkg_yaml
  default version: arpack/96
  versions: {
    [arpack/96] {
      contexts: all
      ARPACK 96 compiled with system compilers
      prefix: /opt/shared/arpack/96
      standard paths: {
        lib: /opt/shared/arpack/96/lib
      }
    }
    [arpack/96:intel-2020] {
      contexts: all
      actions: {
        CFLAGS=+[ ]-mkl=sequential (contexts: all)
        FFLAGS=+[ ]-mkl=sequential (contexts: all)
        LDFLAGS=+[ ]-mkl=sequential (contexts: all)
      }
      dependencies: {
        intel/2020
      }
      ARPACK 96 compiled with Intel 2020 compilers and MKL
      prefix: /opt/shared/arpack/96-intel-2020
      standard paths: {
        lib: /opt/shared/arpack/96-intel-2020/lib
      }
    }
  }
}

[atlas] {
  contexts: all
  actions: {
    ATLAS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.netlib.org/atlas
  ATLAS: Automatically Tuned Linear Algebra Software
  prefix: /opt/shared/atlas
  source file: /opt/shared/valet/2.1/etc/atlas.vpkg_yaml
  default version: atlas/3.10.3
  versions: {
    [atlas/3.10.3] {
      contexts: all
      Atlas compiled with system compilers
      prefix: /opt/shared/atlas/3.10.3
      standard paths: {
        lib: /opt/shared/atlas/3.10.3/lib
        include: /opt/shared/atlas/3.10.3/include
      }
    }
    [atlas/3.10.3:gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      Atlas compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/atlas/3.10.3-gcc-10.1.0
      standard paths: {
        lib: /opt/shared/atlas/3.10.3-gcc-10.1.0/lib
        include: /opt/shared/atlas/3.10.3-gcc-10.1.0/include
      }
    }
    [atlas/3.10.3:intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      Atlas compiled with Intel compilers
      prefix: /opt/shared/atlas/3.10.3-intel-2020
      standard paths: {
        lib: /opt/shared/atlas/3.10.3-intel-2020/lib
        include: /opt/shared/atlas/3.10.3-intel-2020/include
      }
    }
  }
}

[binutils] {
  contexts: all
  actions: {
    BINUTILS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://www.gnu.org/software/binutils/
  The GNU Binutils are a collection of binary tools
  prefix: /opt/shared/binutils
  source file: /opt/shared/valet/2.1/etc/binutils.vpkg_yaml
  default version: binutils/2.35.1
  versions: {
    [binutils/2.35] {
      contexts: all
      alias-to: binutils/2.35.1
    }
    [binutils/2.35.1] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/binutils/2.35.1
      standard paths: {
        bin: /opt/shared/binutils/2.35.1/bin
        lib: /opt/shared/binutils/2.35.1/lib
        man: /opt/shared/binutils/2.35.1/share/man
        info: /opt/shared/binutils/2.35.1/share/info
        include: /opt/shared/binutils/2.35.1/include
      }
    }
    [binutils/2.35.1:gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/binutils/2.35.1-gcc-10.1.0
      standard paths: {
        bin: /opt/shared/binutils/2.35.1-gcc-10.1.0/bin
        lib: /opt/shared/binutils/2.35.1-gcc-10.1.0/lib
        man: /opt/shared/binutils/2.35.1-gcc-10.1.0/share/man
        info: /opt/shared/binutils/2.35.1-gcc-10.1.0/share/info
        include: /opt/shared/binutils/2.35.1-gcc-10.1.0/include
      }
    }
  }
}

[blacs] {
  contexts: all
  actions: {
    BLACS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.netlib.org/blacs/
  Basic Linear Algebra Communication Subprograms
  prefix: /opt/shared/blacs
  source file: /opt/shared/valet/2.1/etc/blacs.vpkg_yaml
  default version: blacs/1.1
  versions: {
    [blacs/1.1] {
      contexts: all
      dependencies: {
        openmpi/4.0.5
      }
      BLACS compiled with MPI + system compilers
      prefix: /opt/shared/blacs/1.1
      standard paths: {
        bin: /opt/shared/blacs/1.1/bin
        lib: /opt/shared/blacs/1.1/lib
      }
    }
    [blacs/1.1:intel] {
      contexts: all
      dependencies: {
        openmpi/4.0.5:intel
      }
      BLACS compiled with MPI + Intel compilers
      prefix: /opt/shared/blacs/1.1-intel
    }
  }
}

[blis] {
  contexts: all
  actions: {
    BLIS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://github.com/amd/blis
  AMD optimized BLAS library
  prefix: /opt/shared/blis
  source file: /opt/shared/valet/2.1/etc/blis.vpkg_yaml
  default version: blis/3.0
  versions: {
    [blis/3.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      BLIS compiled with newer GCC for compatible AMD features
      prefix: /opt/shared/blis/3.0
      standard paths: {
        lib: /opt/shared/blis/3.0/lib
        include: /opt/shared/blis/3.0/include
      }
    }
  }
}

[boost] {
  contexts: all
  actions: {
    BOOST_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.boost.org/
  BOOST:  Peer-reviewed portable C++ source libraries
  prefix: /opt/shared/boost
  source file: /opt/shared/valet/2.1/etc/boost.vpkg_yaml
  default version: boost/1.75.0
  versions: {
    [boost/1.75.0] {
      contexts: all
      dependencies: {
        icu4c/68.1
        gcc/10.1.0
      }
      BOOST compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/boost/1.75.0
      standard paths: {
        lib: /opt/shared/boost/1.75.0/lib
        include: /opt/shared/boost/1.75.0/include
      }
    }
    [boost/1.75.0:openmpi-4.0.5] {
      contexts: all
      dependencies: {
        icu4c/68.1
        openmpi/4.0.5
        gcc/10.1.0
      }
      BOOST with MPI library, compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/boost/1.75.0-openmpi-4.0.5
      standard paths: {
        lib: /opt/shared/boost/1.75.0-openmpi-4.0.5/lib
        include: /opt/shared/boost/1.75.0-openmpi-4.0.5/include
      }
    }
  }
}

[charm] {
  contexts: all
  actions: {
    CHARM_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://charm.cs.uiuc.edu/software
  message-passing parallel language and runtime system
  prefix: /opt/shared/charm
  source file: /opt/shared/valet/2.1/etc/charm.vpkg_yaml
  default version: charm/6.8.2
  versions: {
    [charm/6.8.2] {
      contexts: all
      dependencies: {
        python/2.7.18
        openmpi/4.0.5
      }
      compiled with system compilers, Open MPI
      prefix: /opt/shared/charm/6.8.2
      standard paths: {
        bin: /opt/shared/charm/6.8.2/bin
        lib: /opt/shared/charm/6.8.2/lib, /opt/shared/charm/6.8.2/libso
        include: /opt/shared/charm/6.8.2/include
      }
    }
    [charm/6.8.2:intel-2020] {
      contexts: all
      dependencies: {
        python/2.7.18
        openmpi/4.0.5:intel-2020
      }
      compiled with Intel compilers, Open MPI
      prefix: /opt/shared/charm/6.8.2-intel-2020
      standard paths: {
        bin: /opt/shared/charm/6.8.2-intel-2020/bin
        lib: /opt/shared/charm/6.8.2-intel-2020/lib, /opt/shared/charm/6.8.2-intel-2020/libso
        include: /opt/shared/charm/6.8.2-intel-2020/include
      }
    }
    [charm/6.10.2:gcc,mpi] {
      contexts: all
      dependencies: {
        python/2.7.18
        openmpi/4.1.0:gcc-10.1.0
      }
      compiled with Open MPI 4.1, GCC 10.1
      prefix: /opt/shared/charm/6.10.2/mpi-gcc
      standard paths: {
        bin: /opt/shared/charm/6.10.2/mpi-gcc/bin
        lib: /opt/shared/charm/6.10.2/mpi-gcc/lib, /opt/shared/charm/6.10.2/mpi-gcc/lib64
        include: /opt/shared/charm/6.10.2/mpi-gcc/include
      }
    }
    [charm/6.10.2:gcc,multicore] {
      contexts: all
      dependencies: {
        python/2.7.18
        gcc/12.1
      }
      compiled with GCC 12.1, threaded
      prefix: /opt/shared/charm/6.10.2/ucx-gcc
      standard paths: {
        bin: /opt/shared/charm/6.10.2/ucx-gcc/bin
        lib: /opt/shared/charm/6.10.2/ucx-gcc/lib, /opt/shared/charm/6.10.2/ucx-gcc/lib64
        include: /opt/shared/charm/6.10.2/ucx-gcc/include
      }
    }
    [charm/6.10.2:gcc,ucx] {
      contexts: all
      dependencies: {
        python/2.7.18
        gcc/12.1
      }
      compiled with GCC 12.1, Myricom UCX
      prefix: /opt/shared/charm/6.10.2/ucx-gcc
      standard paths: {
        bin: /opt/shared/charm/6.10.2/ucx-gcc/bin
        lib: /opt/shared/charm/6.10.2/ucx-gcc/lib, /opt/shared/charm/6.10.2/ucx-gcc/lib64
        include: /opt/shared/charm/6.10.2/ucx-gcc/include
      }
    }
    [charm/6.10.2:intel,mpi] {
      contexts: all
      dependencies: {
        python/2.7.18
        openmpi/4.1.0:intel-2020
      }
      compiled with Open MPI 4.1, Intel 2020
      prefix: /opt/shared/charm/6.10.2/mpi-intel
      standard paths: {
        bin: /opt/shared/charm/6.10.2/mpi-intel/bin
        lib: /opt/shared/charm/6.10.2/mpi-intel/lib, /opt/shared/charm/6.10.2/mpi-intel/lib64
        include: /opt/shared/charm/6.10.2/mpi-intel/include
      }
    }
    [charm/6.10.2:intel,ucx] {
      contexts: all
      dependencies: {
        openmpi/4.1.0:intel-2020
        pmix/4
        python/2.7.18
      }
      compiled with Intel oneAPI 2022, Myricom UCX
      prefix: /opt/shared/charm/6.10.2/ucx-intel
      standard paths: {
        bin: /opt/shared/charm/6.10.2/ucx-intel/bin
        lib: /opt/shared/charm/6.10.2/ucx-intel/lib, /opt/shared/charm/6.10.2/ucx-intel/lib64
        include: /opt/shared/charm/6.10.2/ucx-intel/include
      }
    }
    [charm/6.10.2:multicore,intel] {
      contexts: all
      dependencies: {
        python/2.7.18
        intel-oneapi/2022
      }
      compiled with Intel oneAPI 2022, threaded
      prefix: /opt/shared/charm/6.10.2/ucx-intel
      standard paths: {
        bin: /opt/shared/charm/6.10.2/ucx-intel/bin
        lib: /opt/shared/charm/6.10.2/ucx-intel/lib, /opt/shared/charm/6.10.2/ucx-intel/lib64
        include: /opt/shared/charm/6.10.2/ucx-intel/include
      }
    }
  }
}

[cmake] {
  contexts: all
  actions: {
    CMAKE_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.cmake.org/
  CMake:  Cross-Platform Make
  prefix: /opt/shared/cmake
  source file: /opt/shared/valet/2.1/etc/cmake.vpkg_yaml
  default version: cmake/3.21.4
  versions: {
    [cmake/3.2.3] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/cmake/3.2.3
      standard paths: {
        bin: /opt/shared/cmake/3.2.3/bin
      }
    }
    [cmake/3.4.3] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/cmake/3.4.3
      standard paths: {
        bin: /opt/shared/cmake/3.4.3/bin
      }
    }
    [cmake/3.6.3] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/cmake/3.6.3
      standard paths: {
        bin: /opt/shared/cmake/3.6.3/bin
      }
    }
    [cmake/3.8.2] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/cmake/3.8.2
      standard paths: {
        bin: /opt/shared/cmake/3.8.2/bin
      }
    }
    [cmake/3.10.3] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/cmake/3.10.3
      standard paths: {
        bin: /opt/shared/cmake/3.10.3/bin
      }
    }
    [cmake/3.12.4] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/cmake/3.12.4
      standard paths: {
        bin: /opt/shared/cmake/3.12.4/bin
      }
    }
    [cmake/3.13.4] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/cmake/3.13.4
      standard paths: {
        bin: /opt/shared/cmake/3.13.4/bin
      }
    }
    [cmake/3.19.1] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/cmake/3.19.1
      standard paths: {
        bin: /opt/shared/cmake/3.19.1/bin
      }
    }
    [cmake/3.21.4] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/cmake/3.21.4
      standard paths: {
        bin: /opt/shared/cmake/3.21.4/bin
      }
    }
  }
}

[cryosparc] {
  contexts: all
  actions: {
    executable(source, succeedThenFail, success=0) {
      sh : /opt/shared/valet/2.1/libexec/cryosparc-license-check.sh
    } (contexts: all)
    CRYOSPARC_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://cryosparc.com
  state of the art scientific software platform for cryo-electron microscopy (cryo-EM) used in research and drug discovery pipelines
  prefix: /opt/shared/cryosparc
  source file: /opt/shared/valet/2.1/etc/cryosparc.vpkg_yaml
  default version: cryosparc/4.3.1
  versions: {
    [cryosparc/4.3.1] {
      contexts: all
      actions: {
        PATH+=[:]${VALET_PATH_PREFIX}/cryosparc_master/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cryosparc_worker/bin (contexts: all)
        CRYOSPARC_CLUSTER_DIR_DEFAULT=${VALET_PATH_PREFIX}/ConnectCluster (contexts: all)
      }
      dependencies: {
        cuda/11.6.2
      }
      modifications for DARWIN system
      prefix: /opt/shared/cryosparc/4.3.1
    }
  }
}

[cuda] {
  contexts: all
  actions: {
    CUDA_PATH=${VALET_PATH_PREFIX} (contexts: all)
    CUDA_HOME=${VALET_PATH_PREFIX} (contexts: all)
    CUDA_LIB_HOME=${VALET_PATH_PREFIX}/lib64 (contexts: all)
    LD_LIBRARY_PATH=+[:]${VALET_PATH_PREFIX}/lib64/stubs (contexts: development)
    NVCC=${VALET_PATH_PREFIX}/bin/nvcc (contexts: development)
    NVLINK=${VALET_PATH_PREFIX}/bin/nvlink (contexts: development)
    MANPATH+=[:]${VALET_PATH_PREFIX}/doc/man (contexts: all)
    LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/nvvm/lib64 (contexts: all)
    LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/nvvm/lib64 (contexts: development)
    LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/nvvm/lib64 (contexts: development)
    LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/extras/CUPTI/lib64 (contexts: all)
    LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/extras/CUPTI/lib64 (contexts: development)
    LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/extras/CUPTI/lib64 (contexts: development)
    PATH+=[:]${VALET_PATH_PREFIX}/nvvm/bin (contexts: all)
    CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/nvvm/include (contexts: development)
    CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/extras/CUPTI/include (contexts: development)
    CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/extras/Debugger/include (contexts: development)
    CUDA_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://developer.nvidia.com/cuda-toolkit-archive
  NVIDIA CUDA Toolkit for GPU-accelerated applications
  prefix: /opt/shared/cuda
  source file: /opt/shared/valet/2.1/etc/cuda.vpkg_yaml
  default version: cuda/11.3.1
  versions: {
    [cuda/10.2.89] {
      contexts: all
      alias-to: cuda/10.2.89-440.33.01
    }
    [cuda/10.2.89-440.33.01] {
      contexts: all
      CUDA Toolkit 10.2.89 (Driver 440.33.01)
      prefix: /opt/shared/cuda/10.2.89-440.33.01
      standard paths: {
        bin: /opt/shared/cuda/10.2.89-440.33.01/bin
        lib: /opt/shared/cuda/10.2.89-440.33.01/lib64
        include: /opt/shared/cuda/10.2.89-440.33.01/include
      }
    }
    [cuda/11.1.1] {
      contexts: all
      alias-to: cuda/11.1.1-455.32.00
    }
    [cuda/11.1.1-455.32.00] {
      contexts: all
      CUDA Toolkit 11.1.1 (Driver 455.32.00)
      prefix: /opt/shared/cuda/11.1.1-455.32.00
      standard paths: {
        bin: /opt/shared/cuda/11.1.1-455.32.00/bin
        lib: /opt/shared/cuda/11.1.1-455.32.00/lib64
        include: /opt/shared/cuda/11.1.1-455.32.00/include
      }
    }
    [cuda/11.3.1] {
      contexts: all
      alias-to: cuda/11.3.1-465.19.01
    }
    [cuda/11.3.1-465.19.01] {
      contexts: all
      CUDA Toolkit 11.3.1 (Driver 465.19.01)
      prefix: /opt/shared/cuda/11.3.1-465.19.01
      standard paths: {
        bin: /opt/shared/cuda/11.3.1-465.19.01/bin
        lib: /opt/shared/cuda/11.3.1-465.19.01/lib64
        include: /opt/shared/cuda/11.3.1-465.19.01/include
      }
    }
    [cuda/11.6.2] {
      contexts: all
      alias-to: cuda/11.6.2-510.47.03
    }
    [cuda/11.6.2-510.47.03] {
      contexts: all
      CUDA Toolkit 11.6.2 (Driver 510.47.03)
      prefix: /opt/shared/cuda/11.6.2-510.47.03
      standard paths: {
        bin: /opt/shared/cuda/11.6.2-510.47.03/bin
        lib: /opt/shared/cuda/11.6.2-510.47.03/lib64
        include: /opt/shared/cuda/11.6.2-510.47.03/include
      }
    }
    [cuda/12.3.0] {
      contexts: all
      alias-to: cuda/12.3.0-545.23.06
    }
    [cuda/12.3.0-545.23.06] {
      contexts: all
      CUDA Toolkit 12.3.0 (Driver 545.23.06)
      prefix: /opt/shared/cuda/12.3.0-545.23.06
      standard paths: {
        bin: /opt/shared/cuda/12.3.0-545.23.06/bin
        lib: /opt/shared/cuda/12.3.0-545.23.06/lib64
        include: /opt/shared/cuda/12.3.0-545.23.06/include
      }
    }
  }
}

[cudnn] {
  contexts: all
  actions: {
    CUDNN_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://developer.nvidia.com/cudnn
  GPU-accelerated library of primitives for deep neural networks
  prefix: /opt/shared/cudnn
  source file: /opt/shared/valet/2.1/etc/cudnn.vpkg_yaml
  default version: cudnn/8.0.5.39:cuda-11.1
  versions: {
    [cudnn/8.0.5.39:cuda-11.1] {
      contexts: all
      dependencies: {
        cuda/11.1.1
      }
      8.0.5 for RedHat 7.3, CUDA 11.1
      prefix: /opt/shared/cudnn/8.0.5.39-cuda-11.1
      standard paths: {
        lib: /opt/shared/cudnn/8.0.5.39-cuda-11.1/lib64
        include: /opt/shared/cudnn/8.0.5.39-cuda-11.1/include
      }
    }
  }
}

[eigen] {
  contexts: all
  actions: {
    EIGEN_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://eigen.tuxfamily.org/
  C++ template library for linear algebra
  prefix: /opt/shared/eigen
  source file: /opt/shared/valet/2.1/etc/eigen.vpkg_yaml
  default version: eigen/3.3.9
  versions: {
    [eigen/3.3.9] {
      contexts: all
      eigen for any compilers
      prefix: /opt/shared/eigen/3.3.9
      standard paths: {
        include: /opt/shared/eigen/3.3.9/include
        pkgConfig: /opt/shared/eigen/3.3.9/share/pkgconfig
      }
    }
    [eigen/3.3.9:intel_flags] {
      contexts: all
      actions: {
        CFLAGS=+[ ]-inline-foreceinline (contexts: all)
      }
      eigen with Intel optimized compiler flags
      prefix: /opt/shared/eigen/3.3.9
      standard paths: {
        include: /opt/shared/eigen/3.3.9/include
        pkgConfig: /opt/shared/eigen/3.3.9/share/pkgconfig
      }
    }
  }
}

[emacs] {
  contexts: all
  actions: {
    EMACS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.gnu.org/software/emacs
  GNU Emacs text editor
  prefix: /opt/shared/emacs
  source file: /opt/shared/valet/2.1/etc/emacs.vpkg_yaml
  default version: emacs/26.3
  versions: {
    [emacs/26.3] {
      contexts: all
      Emacs compiled with system compilers
      prefix: /opt/shared/emacs/26.3
      standard paths: {
        bin: /opt/shared/emacs/26.3/bin
        lib: /opt/shared/emacs/26.3/lib
        man: /opt/shared/emacs/26.3/share/man
        info: /opt/shared/emacs/26.3/share/info
        include: /opt/shared/emacs/26.3/include
      }
    }
  }
}

[fftw] {
  contexts: all
  actions: {
    FFTW_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.fftw.org/
  Library for computing discrete Fourier transform (DFT)
  prefix: /opt/shared/fftw
  source file: /opt/shared/valet/2.1/etc/fftw.vpkg_yaml
  default version: fftw/3.3.9
  versions: {
    [fftw/3.3.9] {
      contexts: all
      FFTW compiled with system compilers
      prefix: /opt/shared/fftw/3.3.9
      standard paths: {
        bin: /opt/shared/fftw/3.3.9/bin
        lib: /opt/shared/fftw/3.3.9/lib
        man: /opt/shared/fftw/3.3.9/share/man
        info: /opt/shared/fftw/3.3.9/share/info
        include: /opt/shared/fftw/3.3.9/include
        pkgConfig: /opt/shared/fftw/3.3.9/lib/pkgconfig
      }
    }
    [fftw/3.3.9:gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      FFTW compiled with GCC 10 compilers
      prefix: /opt/shared/fftw/3.3.9-gcc-10.1.0
      standard paths: {
        bin: /opt/shared/fftw/3.3.9-gcc-10.1.0/bin
        lib: /opt/shared/fftw/3.3.9-gcc-10.1.0/lib
        man: /opt/shared/fftw/3.3.9-gcc-10.1.0/share/man
        info: /opt/shared/fftw/3.3.9-gcc-10.1.0/share/info
        include: /opt/shared/fftw/3.3.9-gcc-10.1.0/include
        pkgConfig: /opt/shared/fftw/3.3.9-gcc-10.1.0/lib/pkgconfig
      }
    }
    [fftw/3.3.9:gcc-10.1.0,openmpi-4.0.5] {
      contexts: all
      dependencies: {
        openmpi/4.0.5:gcc-10.1.0
      }
      FFTW compiled with MPI 4 + GCC 10 compilers
      prefix: /opt/shared/fftw/3.3.9-gcc-10.1.0-openmpi-4.0.5
      standard paths: {
        bin: /opt/shared/fftw/3.3.9-gcc-10.1.0-openmpi-4.0.5/bin
        lib: /opt/shared/fftw/3.3.9-gcc-10.1.0-openmpi-4.0.5/lib
        man: /opt/shared/fftw/3.3.9-gcc-10.1.0-openmpi-4.0.5/share/man
        info: /opt/shared/fftw/3.3.9-gcc-10.1.0-openmpi-4.0.5/share/info
        include: /opt/shared/fftw/3.3.9-gcc-10.1.0-openmpi-4.0.5/include
        pkgConfig: /opt/shared/fftw/3.3.9-gcc-10.1.0-openmpi-4.0.5/lib/pkgconfig
      }
    }
    [fftw/3.3.9:intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      FFTW compiled with Intel compilers
      prefix: /opt/shared/fftw/3.3.9-intel-2020
      standard paths: {
        bin: /opt/shared/fftw/3.3.9-intel-2020/bin
        lib: /opt/shared/fftw/3.3.9-intel-2020/lib
        man: /opt/shared/fftw/3.3.9-intel-2020/share/man
        info: /opt/shared/fftw/3.3.9-intel-2020/share/info
        include: /opt/shared/fftw/3.3.9-intel-2020/include
        pkgConfig: /opt/shared/fftw/3.3.9-intel-2020/lib/pkgconfig
      }
    }
    [fftw/3.3.9:openmpi-4.0.5] {
      contexts: all
      dependencies: {
        openmpi/4.0.5
      }
      FFTW compiled with MPI 4 + system compilers
      prefix: /opt/shared/fftw/3.3.9-openmpi-4.0.5
      standard paths: {
        bin: /opt/shared/fftw/3.3.9-openmpi-4.0.5/bin
        lib: /opt/shared/fftw/3.3.9-openmpi-4.0.5/lib
        man: /opt/shared/fftw/3.3.9-openmpi-4.0.5/share/man
        info: /opt/shared/fftw/3.3.9-openmpi-4.0.5/share/info
        include: /opt/shared/fftw/3.3.9-openmpi-4.0.5/include
        pkgConfig: /opt/shared/fftw/3.3.9-openmpi-4.0.5/lib/pkgconfig
      }
    }
    [fftw/3.3.9:openmpi-4.0.5,intel-2020] {
      contexts: all
      dependencies: {
        openmpi/4.0.5:intel-2020
      }
      FFTW compiled with MPI 4 + Intel 2020 compilers
      prefix: /opt/shared/fftw/3.3.9-intel-2020-openmpi-4.0.5
      standard paths: {
        bin: /opt/shared/fftw/3.3.9-intel-2020-openmpi-4.0.5/bin
        lib: /opt/shared/fftw/3.3.9-intel-2020-openmpi-4.0.5/lib
        man: /opt/shared/fftw/3.3.9-intel-2020-openmpi-4.0.5/share/man
        info: /opt/shared/fftw/3.3.9-intel-2020-openmpi-4.0.5/share/info
        include: /opt/shared/fftw/3.3.9-intel-2020-openmpi-4.0.5/include
        pkgConfig: /opt/shared/fftw/3.3.9-intel-2020-openmpi-4.0.5/lib/pkgconfig
      }
    }
    [fftw/3.3.9:pgi-20] {
      contexts: all
      dependencies: {
        pgi/20
      }
      FFTW compiled with PGI compilers
      prefix: /opt/shared/fftw/3.3.9-pgi-20
      standard paths: {
        bin: /opt/shared/fftw/3.3.9-pgi-20/bin
        lib: /opt/shared/fftw/3.3.9-pgi-20/lib
        man: /opt/shared/fftw/3.3.9-pgi-20/share/man
        info: /opt/shared/fftw/3.3.9-pgi-20/share/info
        include: /opt/shared/fftw/3.3.9-pgi-20/include
        pkgConfig: /opt/shared/fftw/3.3.9-pgi-20/lib/pkgconfig
      }
    }
    [fftw/3.3.9:threads] {
      contexts: all
      FFTW compiled with OpenMP + system compilers
      prefix: /opt/shared/fftw/3.3.9-threads
      standard paths: {
        bin: /opt/shared/fftw/3.3.9-threads/bin
        lib: /opt/shared/fftw/3.3.9-threads/lib
        man: /opt/shared/fftw/3.3.9-threads/share/man
        info: /opt/shared/fftw/3.3.9-threads/share/info
        include: /opt/shared/fftw/3.3.9-threads/include
        pkgConfig: /opt/shared/fftw/3.3.9-threads/lib/pkgconfig
      }
    }
    [fftw/3.3.9:threads,gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      FFTW compiled with OpenMP + GCC 10 compilers
      prefix: /opt/shared/fftw/3.3.9-gcc-10.1.0-threads
      standard paths: {
        bin: /opt/shared/fftw/3.3.9-gcc-10.1.0-threads/bin
        lib: /opt/shared/fftw/3.3.9-gcc-10.1.0-threads/lib
        man: /opt/shared/fftw/3.3.9-gcc-10.1.0-threads/share/man
        info: /opt/shared/fftw/3.3.9-gcc-10.1.0-threads/share/info
        include: /opt/shared/fftw/3.3.9-gcc-10.1.0-threads/include
        pkgConfig: /opt/shared/fftw/3.3.9-gcc-10.1.0-threads/lib/pkgconfig
      }
    }
    [fftw/3.3.9:threads,intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      FFTW compiled with OpenMP + Intel 2020 compilers
      prefix: /opt/shared/fftw/3.3.9-intel-2020-threads
      standard paths: {
        bin: /opt/shared/fftw/3.3.9-intel-2020-threads/bin
        lib: /opt/shared/fftw/3.3.9-intel-2020-threads/lib
        man: /opt/shared/fftw/3.3.9-intel-2020-threads/share/man
        info: /opt/shared/fftw/3.3.9-intel-2020-threads/share/info
        include: /opt/shared/fftw/3.3.9-intel-2020-threads/include
        pkgConfig: /opt/shared/fftw/3.3.9-intel-2020-threads/lib/pkgconfig
      }
    }
    [fftw/3.3.9:threads,pgi-20] {
      contexts: all
      dependencies: {
        pgi/20
      }
      FFTW compiled with OpenMP + PGI compilers
      prefix: /opt/shared/fftw/3.3.9-pgi-20-threads
      standard paths: {
        bin: /opt/shared/fftw/3.3.9-pgi-20-threads/bin
        lib: /opt/shared/fftw/3.3.9-pgi-20-threads/lib
        man: /opt/shared/fftw/3.3.9-pgi-20-threads/share/man
        info: /opt/shared/fftw/3.3.9-pgi-20-threads/share/info
        include: /opt/shared/fftw/3.3.9-pgi-20-threads/include
        pkgConfig: /opt/shared/fftw/3.3.9-pgi-20-threads/lib/pkgconfig
      }
    }
    [fftw/3.3.10:nvidia-hpc-sdk-2022] {
      contexts: all
      dependencies: {
        nvidia-hpc-sdk/==2022
      }
      FFTW compiled with NVIDIA HPC SDK 2022
      prefix: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2022
      standard paths: {
        bin: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2022/bin
        lib: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2022/lib
        man: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2022/share/man
        info: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2022/share/info
        include: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2022/include
        pkgConfig: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2022/lib/pkgconfig
      }
    }
    [fftw/3.3.10:nvidia-hpc-sdk-2023] {
      contexts: all
      dependencies: {
        nvidia-hpc-sdk/==2023
      }
      FFTW compiled with NVIDIA HPC SDK 2023
      prefix: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2023
      standard paths: {
        bin: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2023/bin
        lib: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2023/lib
        man: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2023/share/man
        info: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2023/share/info
        include: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2023/include
        pkgConfig: /opt/shared/fftw/3.3.10-nvidia-hpc-sdk-2023/lib/pkgconfig
      }
    }
  }
}

[gaussian] {
  contexts: all
  actions: {
    GAUSSIAN_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  dependencies: {
    pre-condition(/opt/shared/gaussian is-readable) (contexts: all)
  }
  attributes: {
    funding.contact = Pat McMahon <pmcmahon@udel.edu>
    funding.source = Various faculty and departmental contributors
  }
  http://www.gaussian.com/
  Gaussian - Quantum Chemistry
  prefix: /opt/shared/gaussian
  source file: /opt/shared/valet/2.1/etc/gaussian.vpkg_yaml
  default version: gaussian/g16c01
  versions: {
    [gaussian/g16c01] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/g16.sh
        } (contexts: all)
      }
      dependencies: {
        pgi/17.10
      }
      attributes: {
        citation = Gaussian 16, Revision C.01, M. J. Frisch, G. W. Trucks, H. B. Schlegel, G. E. Scuseria, M. A. Robb, J. R. Cheeseman, G. Scalmani, V. Barone, G. A. Petersson, H. Nakatsuji, X. Li, M. Caricato, A. V. Marenich, J. Bloino, B. G. Janesko, R. Gomperts, B. Mennucci, H. P. Hratchian, J. V. Ortiz, A. F. Izmaylov, J. L. Sonnenberg, D. Williams-Young, F. Ding, F. Lipparini, F. Egidi, J. Goings, B. Peng, A. Petrone, T. Henderson, D. Ranasinghe, V. G. Zakrzewski, J. Gao, N. Rega, G. Zheng, W. Liang, M. Hada, M. Ehara, K. Toyota, R. Fukuda, J. Hasegawa, M. Ishida, T. Nakajima, Y. Honda, O. Kitao, H. Nakai, T. Vreven, K. Throssell, J. A. Montgomery, Jr., J. E. Peralta, F. Ogliaro, M. J. Bearpark, J. J. Heyd, E. N. Brothers, K. N. Kudin, V. N. Staroverov, T. A. Keith, R. Kobayashi, J. Normand, K. Raghavachari, A. P. Rendell, J. C. Burant, S. S. Iyengar, J. Tomasi, M. Cossi, J. M. Millam, M. Klene, C. Adamo, R. Cammi, J. W. Ochterski, R. L. Martin, K. Morokuma, O. Farkas, J. B. Foresman, and D. J. Fox, Gaussian, Inc., Wallingford CT, 2019.
      }
      Gaussian '16 (revision C01) - UD users only
      prefix: /opt/shared/gaussian/g16c01/std
    }
    [gaussian/g16c01:gpu] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/g16.sh
        } (contexts: all)
      }
      dependencies: {
        pgi/18.10
        cuda/11.1.1
      }
      attributes: {
        citation = Gaussian 16, Revision C.01, M. J. Frisch, G. W. Trucks, H. B. Schlegel, G. E. Scuseria, M. A. Robb, J. R. Cheeseman, G. Scalmani, V. Barone, G. A. Petersson, H. Nakatsuji, X. Li, M. Caricato, A. V. Marenich, J. Bloino, B. G. Janesko, R. Gomperts, B. Mennucci, H. P. Hratchian, J. V. Ortiz, A. F. Izmaylov, J. L. Sonnenberg, D. Williams-Young, F. Ding, F. Lipparini, F. Egidi, J. Goings, B. Peng, A. Petrone, T. Henderson, D. Ranasinghe, V. G. Zakrzewski, J. Gao, N. Rega, G. Zheng, W. Liang, M. Hada, M. Ehara, K. Toyota, R. Fukuda, J. Hasegawa, M. Ishida, T. Nakajima, Y. Honda, O. Kitao, H. Nakai, T. Vreven, K. Throssell, J. A. Montgomery, Jr., J. E. Peralta, F. Ogliaro, M. J. Bearpark, J. J. Heyd, E. N. Brothers, K. N. Kudin, V. N. Staroverov, T. A. Keith, R. Kobayashi, J. Normand, K. Raghavachari, A. P. Rendell, J. C. Burant, S. S. Iyengar, J. Tomasi, M. Cossi, J. M. Millam, M. Klene, C. Adamo, R. Cammi, J. W. Ochterski, R. L. Martin, K. Morokuma, O. Farkas, J. B. Foresman, and D. J. Fox, Gaussian, Inc., Wallingford CT, 2019.
      }
      Gaussian '16 (revision C01) with GPU acceleration - UD users only
      prefix: /opt/shared/gaussian/g16c01/gpu
    }
  }
}

[gcc] {
  contexts: all
  flags: no-development-env
  actions: {
    COMPILER=intel (contexts: development)
    CC=gcc (contexts: development)
    CXX=g++ (contexts: development)
    CXX11=g++ (contexts: development)
    CXX14=g++ (contexts: development)
    OBJC=gcc (contexts: development)
    OBJCXX=g++ (contexts: development)
    FC=gfortran (contexts: development)
    F77=gfortran (contexts: development)
    F90=gfortran (contexts: development)
    F95=gfortran (contexts: development)
    GCC_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://gcc.gnu.org/
  GCC Compiler Suite
  prefix: /opt/shared/gcc
  source file: /opt/shared/valet/2.1/etc/gcc.vpkg_yaml
  default version: gcc/system
  versions: {
    [gcc/4.8] {
      contexts: all
      alias-to: gcc/4.8.5
    }
    [gcc/4.8.5] {
      contexts: all
      CentOS system GCC with C, C++, Obj-C, Obj-C++, and Fortran
      prefix: /opt/shared/gcc/4.8.5
    }
    [gcc/7.3.0] {
      contexts: all
      actions: {
        CXX17=g++ (contexts: development)
      }
      GCC with C, C++, Obj-C, Obj-C++, Fortran, and GO
      prefix: /opt/shared/gcc/7.3.0
      standard paths: {
        bin: /opt/shared/gcc/7.3.0/bin
        lib: /opt/shared/gcc/7.3.0/lib, /opt/shared/gcc/7.3.0/lib64
        man: /opt/shared/gcc/7.3.0/share/man
        info: /opt/shared/gcc/7.3.0/share/info
        include: /opt/shared/gcc/7.3.0/include
      }
    }
    [gcc/7.3] {
      contexts: all
      alias-to: gcc/7.3.0
    }
    [gcc/10.1.0] {
      contexts: all
      actions: {
        CXX17=g++ (contexts: development)
      }
      GCC with C, C++, Obj-C, Obj-C++, Fortran, and GO
      prefix: /opt/shared/gcc/10.1.0
      standard paths: {
        bin: /opt/shared/gcc/10.1.0/bin
        lib: /opt/shared/gcc/10.1.0/lib, /opt/shared/gcc/10.1.0/lib64
        man: /opt/shared/gcc/10.1.0/share/man
        info: /opt/shared/gcc/10.1.0/share/info
        include: /opt/shared/gcc/10.1.0/include
      }
    }
    [gcc/10.1] {
      contexts: all
      alias-to: gcc/10.1.0
    }
    [gcc/11.2.0] {
      contexts: all
      actions: {
        CXX17=g++ (contexts: development)
      }
      GCC with C, C++, Obj-C, Obj-C++, Fortran, and GO
      prefix: /opt/shared/gcc/11.2.0
      standard paths: {
        bin: /opt/shared/gcc/11.2.0/bin
        lib: /opt/shared/gcc/11.2.0/lib, /opt/shared/gcc/11.2.0/lib64
        man: /opt/shared/gcc/11.2.0/share/man
        info: /opt/shared/gcc/11.2.0/share/info
        include: /opt/shared/gcc/11.2.0/include
      }
    }
    [gcc/11.2] {
      contexts: all
      alias-to: gcc/11.2.0
    }
    [gcc/12.1] {
      contexts: all
      alias-to: gcc/12.1.0
    }
    [gcc/12.1.0] {
      contexts: all
      actions: {
        CXX17=g++ (contexts: development)
      }
      GCC with C, C++, Obj-C, Obj-C++, Fortran, and GO
      prefix: /opt/shared/gcc/12.1.0
      standard paths: {
        bin: /opt/shared/gcc/12.1.0/bin
        lib: /opt/shared/gcc/12.1.0/lib, /opt/shared/gcc/12.1.0/lib64
        man: /opt/shared/gcc/12.1.0/share/man
        info: /opt/shared/gcc/12.1.0/share/info
        include: /opt/shared/gcc/12.1.0/include
      }
    }
    [gcc/12.2] {
      contexts: all
      alias-to: gcc/12.2.0
    }
    [gcc/12.2.0] {
      contexts: all
      actions: {
        CXX17=g++ (contexts: development)
      }
      GCC with C, C++, Obj-C, Obj-C++, Fortran, and GO
      prefix: /opt/shared/gcc/12.2.0
      standard paths: {
        bin: /opt/shared/gcc/12.2.0/bin
        lib: /opt/shared/gcc/12.2.0/lib, /opt/shared/gcc/12.2.0/lib64
        man: /opt/shared/gcc/12.2.0/share/man
        info: /opt/shared/gcc/12.2.0/share/info
        include: /opt/shared/gcc/12.2.0/include
      }
    }
    [gcc/12.2.0:openacc] {
      contexts: all
      actions: {
        CXX17=g++ (contexts: development)
      }
      dependencies: {
        binutils/2.35
      }
      GCC with C, C++, Obj-C, Obj-C++, Fortran, OpenACC (no specific offload)
      prefix: /opt/shared/gcc/12.2.0-openacc
      standard paths: {
        bin: /opt/shared/gcc/12.2.0-openacc/bin
        lib: /opt/shared/gcc/12.2.0-openacc/lib, /opt/shared/gcc/12.2.0-openacc/lib64
        man: /opt/shared/gcc/12.2.0-openacc/share/man
        info: /opt/shared/gcc/12.2.0-openacc/share/info
        include: /opt/shared/gcc/12.2.0-openacc/include
      }
    }
    [gcc/12.2.0:openacc,amd] {
      contexts: all
      actions: {
        CXX17=g++ (contexts: development)
      }
      dependencies: {
        binutils/2.35
        amd-rocm/=>4
      }
      GCC with C, C++, Obj-C, Obj-C++, Fortran, OpenACC (AMD offload)
      prefix: /opt/shared/gcc/12.2.0-openacc
      standard paths: {
        bin: /opt/shared/gcc/12.2.0-openacc/bin
        lib: /opt/shared/gcc/12.2.0-openacc/lib, /opt/shared/gcc/12.2.0-openacc/lib64
        man: /opt/shared/gcc/12.2.0-openacc/share/man
        info: /opt/shared/gcc/12.2.0-openacc/share/info
        include: /opt/shared/gcc/12.2.0-openacc/include
      }
    }
    [gcc/12.2.0:openacc,nvidia] {
      contexts: all
      actions: {
        CXX17=g++ (contexts: development)
      }
      dependencies: {
        binutils/2.35
        cuda/=>9
      }
      GCC with C, C++, Obj-C, Obj-C++, Fortran, OpenACC (NVIDIA offload)
      prefix: /opt/shared/gcc/12.2.0-openacc
      standard paths: {
        bin: /opt/shared/gcc/12.2.0-openacc/bin
        lib: /opt/shared/gcc/12.2.0-openacc/lib, /opt/shared/gcc/12.2.0-openacc/lib64
        man: /opt/shared/gcc/12.2.0-openacc/share/man
        info: /opt/shared/gcc/12.2.0-openacc/share/info
        include: /opt/shared/gcc/12.2.0-openacc/include
      }
    }
    [gcc/system] {
      contexts: all
      alias-to: gcc/4.8.5
    }
  }
}

[gdal] {
  contexts: all
  actions: {
    GDAL_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.gdal.org/
  Geospatial Data Abstraction Library
  prefix: /opt/shared/gdal
  source file: /opt/shared/valet/2.1/etc/gdal.vpkg_yaml
  default version: gdal/3.2.0
  versions: {
    [gdal/3.2.0] {
      contexts: all
      GDAL compiled with system compilers
      prefix: /opt/shared/gdal/3.2.0
      standard paths: {
        bin: /opt/shared/gdal/3.2.0/bin
        lib: /opt/shared/gdal/3.2.0/lib
        include: /opt/shared/gdal/3.2.0/include
        pkgConfig: /opt/shared/gdal/3.2.0/lib/pkgconfig
      }
    }
    [gdal/3.2.0:intel-2020] {
      contexts: all
      dependencies: {
        intel/2020
      }
      GDAL compiled with Intel compilers
      prefix: /opt/shared/gdal/3.2.0-intel-2020
    }
    [gdal/3.2.0:openmpi] {
      contexts: all
      dependencies: {
        openmpi/4.0.5
      }
      GDAL compiled with MPI + system compilers
      prefix: /opt/shared/gdal/3.2.0-openmpi
      standard paths: {
        bin: /opt/shared/gdal/3.2.0-openmpi/bin
        lib: /opt/shared/gdal/3.2.0-openmpi/lib
        include: /opt/shared/gdal/3.2.0-openmpi/include
        pkgConfig: /opt/shared/gdal/3.2.0-openmpi/lib/pkgconfig
      }
    }
  }
}

[gdb] {
  contexts: all
  actions: {
    GDB_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  GNU Project Debugger
  prefix: /opt/shared/gdb
  source file: /opt/shared/valet/2.1/etc/gdb.vpkg_yaml
  default version: gdb/13.1
  versions: {
    [gdb/13.1] {
      contexts: all
      built with system GCC
      prefix: /opt/shared/gdb/13.1
      standard paths: {
        bin: /opt/shared/gdb/13.1/bin
        lib: /opt/shared/gdb/13.1/lib
        man: /opt/shared/gdb/13.1/share/man
        info: /opt/shared/gdb/13.1/share/info
        include: /opt/shared/gdb/13.1/include
      }
    }
  }
}

[geomview] {
  contexts: all
  actions: {
    GEOMVIEW_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.geomview.org/
  Interactive 3D viewing program
  prefix: /opt/shared/geomview
  source file: /opt/shared/valet/2.1/etc/geomview.vpkg_yaml
  default version: geomview/1.9.5
  versions: {
    [geomview/1.9.5] {
      contexts: all
      GeomView compiled with system compilers
      prefix: /opt/shared/geomview/1.9.5
      standard paths: {
        bin: /opt/shared/geomview/1.9.5/bin
        lib: /opt/shared/geomview/1.9.5/lib
        man: /opt/shared/geomview/1.9.5/share/man
        info: /opt/shared/geomview/1.9.5/share/info
        include: /opt/shared/geomview/1.9.5/include
      }
    }
  }
}

[geos] {
  contexts: all
  actions: {
    GEOS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://trac.osgeo.org/geos/
  Geometry Engine, Open Source
  prefix: /opt/shared/geos
  source file: /opt/shared/valet/2.1/etc/geos.vpkg_yaml
  default version: geos/3.9.1
  versions: {
    [geos/3.9.1] {
      contexts: all
      GEOS compiled with system compilers
      prefix: /opt/shared/geos/3.9.1
      standard paths: {
        bin: /opt/shared/geos/3.9.1/bin
        lib: /opt/shared/geos/3.9.1/lib
        include: /opt/shared/geos/3.9.1/include
        pkgConfig: /opt/shared/geos/3.9.1/lib/pkgconfig
      }
    }
  }
}

[git] {
  contexts: all
  actions: {
    GIT_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://git-scm.com
  distributed version control system designed to handle everything from small to very large projects with speed and efficiency
  prefix: /opt/shared/git
  source file: /opt/shared/valet/2.1/etc/git.vpkg_yaml
  default version: git/2.34.1
  versions: {
    [git/2.34.1] {
      contexts: all
      built from source with system compilers
      prefix: /opt/shared/git/2.34.1
      standard paths: {
        bin: /opt/shared/git/2.34.1/bin
      }
    }
  }
}

[git-lfs] {
  contexts: all
  actions: {
    GIT_DASH_LFS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://github.com/git-lfs/git-lfs
  Git large-file support
  prefix: /opt/shared/git-lfs
  source file: /opt/shared/valet/2.1/etc/git-lfs.vpkg_yaml
  default version: git-lfs/3.4.1
  versions: {
    [git-lfs/3.4.1] {
      contexts: all
      official EL/7 RPM
      prefix: /opt/shared/git-lfs/3.4.1
      standard paths: {
        bin: /opt/shared/git-lfs/3.4.1/bin
        man: /opt/shared/git-lfs/3.4.1/share/man
      }
    }
  }
}

[glpk] {
  contexts: all
  actions: {
    GLPK_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.gnu.org/software/glpk/
  GNU Linear Programming Kit
  prefix: /opt/shared/glpk
  source file: /opt/shared/valet/2.1/etc/glpk.vpkg_yaml
  default version: glpk/4.65
  versions: {
    [glpk/4.65] {
      contexts: all
      dependencies: {
        gmp/6.2.1
      }
      GLPK compiled with system compilers
      prefix: /opt/shared/glpk/4.65
      standard paths: {
        bin: /opt/shared/glpk/4.65/bin
        lib: /opt/shared/glpk/4.65/lib
        include: /opt/shared/glpk/4.65/include
      }
    }
    [glpk/4.65:intel-2020] {
      contexts: all
      dependencies: {
        gmp/6.2.1:intel-2020
      }
      GLPK compiled with Intel 2020 compilers
      prefix: /opt/shared/glpk/4.65-intel-2020
      standard paths: {
        bin: /opt/shared/glpk/4.65-intel-2020/bin
        lib: /opt/shared/glpk/4.65-intel-2020/lib
        include: /opt/shared/glpk/4.65-intel-2020/include
      }
    }
  }
}

[gmp] {
  contexts: all
  actions: {
    GMP_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://gmplib.org/
  GNU Multiple Precision Arithmetic Library
  prefix: /opt/shared/gmp
  source file: /opt/shared/valet/2.1/etc/gmp.vpkg_yaml
  default version: gmp/6.2.1
  versions: {
    [gmp/6.2.1] {
      contexts: all
      GMP compiled with system compilers
      prefix: /opt/shared/gmp/6.2.1
      standard paths: {
        lib: /opt/shared/gmp/6.2.1/lib
        info: /opt/shared/gmp/6.2.1/share/info
        include: /opt/shared/gmp/6.2.1/include
        pkgConfig: /opt/shared/gmp/6.2.1/lib/pkgconfig
      }
    }
    [gmp/6.2.1:intel-2020] {
      contexts: all
      dependencies: {
        intel/2020
      }
      GMP compiled with Intel 2020 compilers
      prefix: /opt/shared/gmp/6.2.1-intel-2020
      standard paths: {
        lib: /opt/shared/gmp/6.2.1-intel-2020/lib
        info: /opt/shared/gmp/6.2.1-intel-2020/share/info
        include: /opt/shared/gmp/6.2.1-intel-2020/include
        pkgConfig: /opt/shared/gmp/6.2.1-intel-2020/lib/pkgconfig
      }
    }
  }
}

[gnuplot] {
  contexts: all
  actions: {
    GNUPLOT_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.gnuplot.info/
  Gnuplot: portable command-line driven graphing utility
  prefix: /opt/shared/gnuplot
  source file: /opt/shared/valet/2.1/etc/gnuplot.vpkg_yaml
  default version: gnuplot/5.4.5
  versions: {
    [gnuplot/5.4.5] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/gnuplot/5.4.5
      standard paths: {
        bin: /opt/shared/gnuplot/5.4.5/bin
        lib: /opt/shared/gnuplot/5.4.5/lib
        man: /opt/shared/gnuplot/5.4.5/share/man
        include: /opt/shared/gnuplot/5.4.5/include
        pkgConfig: /opt/shared/gnuplot/5.4.5/lib/pkgconfig
      }
    }
  }
}

[go] {
  contexts: all
  actions: {
    GO_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://golang.org/
  an open source programming language that makes it easy to build simple, reliable, and efficient software
  prefix: /opt/shared/go
  source file: /opt/shared/valet/2.1/etc/go.vpkg_yaml
  default version: go/1.20
  versions: {
    [go/1.16] {
      contexts: all
      alias-to: go/1.16.9
    }
    [go/1.16.9] {
      contexts: all
      dependencies: {
        binutils/2.35
      }
      official release for Linux
      prefix: /opt/shared/go/1.16.9
      standard paths: {
        bin: /opt/shared/go/1.16.9/bin
        lib: /opt/shared/go/1.16.9/lib
      }
    }
    [go/1.17] {
      contexts: all
      alias-to: go/1.17.5
    }
    [go/1.17.2] {
      contexts: all
      dependencies: {
        binutils/2.35
      }
      official release for Linux
      prefix: /opt/shared/go/1.17.2
      standard paths: {
        bin: /opt/shared/go/1.17.2/bin
        lib: /opt/shared/go/1.17.2/lib
      }
    }
    [go/1.17.5] {
      contexts: all
      dependencies: {
        binutils/2.35
      }
      official release for Linux
      prefix: /opt/shared/go/1.17.5
      standard paths: {
        bin: /opt/shared/go/1.17.5/bin
        lib: /opt/shared/go/1.17.5/lib
      }
    }
    [go/1.20] {
      contexts: all
      alias-to: go/1.20.2
    }
    [go/1.20.2] {
      contexts: all
      dependencies: {
        binutils/2.35
      }
      official release for Linux
      prefix: /opt/shared/go/1.20.2
      standard paths: {
        bin: /opt/shared/go/1.20.2/bin
        lib: /opt/shared/go/1.20.2/lib
      }
    }
  }
}

[golang] {
  contexts: all
  actions: {
    GOLANG_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://golang.org
  An open source programming language
  prefix: /opt/shared/golang
  source file: /opt/shared/valet/2.1/etc/golang.vpkg_yaml
  default version: golang/1.16.2
  versions: {
    [golang/1.16.2] {
      contexts: all
      official build for Linux AMD64
      prefix: /opt/shared/golang/1.16.2
      standard paths: {
        bin: /opt/shared/golang/1.16.2/bin
        lib: /opt/shared/golang/1.16.2/lib
      }
    }
  }
}

[gromacs] {
  contexts: all
  actions: {
    GROMACS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.gromacs.org/
  Gromacs: Molecular Dynamics
  prefix: /opt/shared/gromacs
  source file: /opt/shared/valet/2.1/etc/gromacs.vpkg_yaml
  default version: gromacs/2023.0:single,mpi
  versions: {
    [gromacs/2022.5:double,mpi] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:intel-oneapi-2023
      }
      Intel oneAPI - MPI parallelism, double precision
      prefix: /opt/shared/gromacs/2022.5-intel/double-mpi
      standard paths: {
        bin: /opt/shared/gromacs/2022.5-intel/double-mpi/bin
        lib: /opt/shared/gromacs/2022.5-intel/double-mpi/lib64
        include: /opt/shared/gromacs/2022.5-intel/double-mpi/include
      }
    }
    [gromacs/2022.5:double,thread] {
      contexts: all
      dependencies: {
        intel-oneapi/==2023
      }
      Intel oneAPI - thread parallelism, double precision
      prefix: /opt/shared/gromacs/2022.5-intel/double-thread
      standard paths: {
        bin: /opt/shared/gromacs/2022.5-intel/double-thread/bin
        lib: /opt/shared/gromacs/2022.5-intel/double-thread/lib64
        include: /opt/shared/gromacs/2022.5-intel/double-thread/include
      }
    }
    [gromacs/2022.5:single,mpi] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:intel-oneapi-2023
      }
      Intel oneAPI - MPI parallelism, single precision
      prefix: /opt/shared/gromacs/2022.5-intel/single-mpi
      standard paths: {
        bin: /opt/shared/gromacs/2022.5-intel/single-mpi/bin
        lib: /opt/shared/gromacs/2022.5-intel/single-mpi/lib64
        include: /opt/shared/gromacs/2022.5-intel/single-mpi/include
      }
    }
    [gromacs/2022.5:single,thread] {
      contexts: all
      dependencies: {
        intel-oneapi/==2023
      }
      Intel oneAPI - thread parallelism, single precision
      prefix: /opt/shared/gromacs/2022.5-intel/single-thread
      standard paths: {
        bin: /opt/shared/gromacs/2022.5-intel/single-thread/bin
        lib: /opt/shared/gromacs/2022.5-intel/single-thread/lib64
        include: /opt/shared/gromacs/2022.5-intel/single-thread/include
      }
    }
    [gromacs/2023.0:double,mpi] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:intel-oneapi-2023
      }
      Intel oneAPI - MPI parallelism, double precision
      prefix: /opt/shared/gromacs/2023.0-intel/double-mpi
      standard paths: {
        bin: /opt/shared/gromacs/2023.0-intel/double-mpi/bin
        lib: /opt/shared/gromacs/2023.0-intel/double-mpi/lib64
        include: /opt/shared/gromacs/2023.0-intel/double-mpi/include
      }
    }
    [gromacs/2023.0:double,thread] {
      contexts: all
      dependencies: {
        intel-oneapi/==2023
      }
      Intel oneAPI - thread parallelism, double precision
      prefix: /opt/shared/gromacs/2023.0-intel/double-thread
      standard paths: {
        bin: /opt/shared/gromacs/2023.0-intel/double-thread/bin
        lib: /opt/shared/gromacs/2023.0-intel/double-thread/lib64
        include: /opt/shared/gromacs/2023.0-intel/double-thread/include
      }
    }
    [gromacs/2023.0:single,mpi] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:intel-oneapi-2023
      }
      Intel oneAPI - MPI parallelism, single precision
      prefix: /opt/shared/gromacs/2023.0-intel/single-mpi
      standard paths: {
        bin: /opt/shared/gromacs/2023.0-intel/single-mpi/bin
        lib: /opt/shared/gromacs/2023.0-intel/single-mpi/lib64
        include: /opt/shared/gromacs/2023.0-intel/single-mpi/include
      }
    }
    [gromacs/2023.0:single,thread] {
      contexts: all
      dependencies: {
        intel-oneapi/==2023
      }
      Intel oneAPI - thread parallelism, single precision
      prefix: /opt/shared/gromacs/2023.0-intel/single-thread
      standard paths: {
        bin: /opt/shared/gromacs/2023.0-intel/single-thread/bin
        lib: /opt/shared/gromacs/2023.0-intel/single-thread/lib64
        include: /opt/shared/gromacs/2023.0-intel/single-thread/include
      }
    }
    [gromacs/2023.2:single,cuda,mpi] {
      contexts: all
      dependencies: {
        intel-mkl/2020
        openmpi/4.1.0:gcc-10.1.0
        cuda/11.6.2
      }
      GCC + MKL - MPI parallelism, single precision, CUDA offload
      prefix: /opt/shared/gromacs/2023.2-gcc-cuda/single-mpi
      standard paths: {
        bin: /opt/shared/gromacs/2023.2-gcc-cuda/single-mpi/bin
        lib: /opt/shared/gromacs/2023.2-gcc-cuda/single-mpi/lib64
        man: /opt/shared/gromacs/2023.2-gcc-cuda/single-mpi/share/man
        include: /opt/shared/gromacs/2023.2-gcc-cuda/single-mpi/include
      }
    }
    [gromacs/2023.2:single,cuda,thread] {
      contexts: all
      dependencies: {
        intel-mkl/2020
        gcc/10.1.0
        cuda/11.6.2
      }
      GCC + MKL - thread parallelism, single precision, CUDA offload
      prefix: /opt/shared/gromacs/2023.2-gcc-cuda/single-thread
      standard paths: {
        bin: /opt/shared/gromacs/2023.2-gcc-cuda/single-thread/bin
        lib: /opt/shared/gromacs/2023.2-gcc-cuda/single-thread/lib64
        man: /opt/shared/gromacs/2023.2-gcc-cuda/single-thread/share/man
        include: /opt/shared/gromacs/2023.2-gcc-cuda/single-thread/include
      }
    }
    [gromacs/2023.2:sycl,single,mpi] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:intel-oneapi-2023
      }
      Intel oneAPI - MPI parallelism, single precision, SYCL offload
      prefix: /opt/shared/gromacs/2023.2-intel-sycl/single-mpi
      standard paths: {
        bin: /opt/shared/gromacs/2023.2-intel-sycl/single-mpi/bin
        lib: /opt/shared/gromacs/2023.2-intel-sycl/single-mpi/lib64
        man: /opt/shared/gromacs/2023.2-intel-sycl/single-mpi/share/man
        include: /opt/shared/gromacs/2023.2-intel-sycl/single-mpi/include
      }
    }
    [gromacs/2023.2:sycl,single,thread] {
      contexts: all
      dependencies: {
        intel-oneapi/==2023
      }
      Intel oneAPI - thread parallelism, single precision, SYCL offload
      prefix: /opt/shared/gromacs/2023.2-intel-sycl/single-thread
      standard paths: {
        bin: /opt/shared/gromacs/2023.2-intel-sycl/single-thread/bin
        lib: /opt/shared/gromacs/2023.2-intel-sycl/single-thread/lib64
        man: /opt/shared/gromacs/2023.2-intel-sycl/single-thread/share/man
        include: /opt/shared/gromacs/2023.2-intel-sycl/single-thread/include
      }
    }
  }
}

[gsl] {
  contexts: all
  actions: {
    GSL_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.gnu.org/software/gsl/
  GNU Scientific Library
  prefix: /opt/shared/gsl
  source file: /opt/shared/valet/2.1/etc/gsl.vpkg_yaml
  default version: gsl/2.6
  versions: {
    [gsl/2.6] {
      contexts: all
      GSL compiled with system compilers
      prefix: /opt/shared/gsl/2.6
      standard paths: {
        bin: /opt/shared/gsl/2.6/bin
        lib: /opt/shared/gsl/2.6/lib
        man: /opt/shared/gsl/2.6/share/man
        info: /opt/shared/gsl/2.6/share/info
        include: /opt/shared/gsl/2.6/include
        pkgConfig: /opt/shared/gsl/2.6/lib/pkgconfig
      }
    }
    [gsl/2.6:intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      GSL compiled with Intel compilers
      prefix: /opt/shared/gsl/2.6-intel-2020
      standard paths: {
        bin: /opt/shared/gsl/2.6-intel-2020/bin
        lib: /opt/shared/gsl/2.6-intel-2020/lib
        man: /opt/shared/gsl/2.6-intel-2020/share/man
        info: /opt/shared/gsl/2.6-intel-2020/share/info
        include: /opt/shared/gsl/2.6-intel-2020/include
        pkgConfig: /opt/shared/gsl/2.6-intel-2020/lib/pkgconfig
      }
    }
  }
}

[hdf4] {
  contexts: all
  actions: {
    HDF4_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.hdfgroup.org/products/hdf4/
  HDF4: Data Model, Library, & File Format
  prefix: /opt/shared/hdf4
  source file: /opt/shared/valet/2.1/etc/hdf4.vpkg_yaml
  default version: hdf4/4.2.13
  versions: {
    [hdf4/4.2.13] {
      contexts: all
      dependencies: {
        szip/2.1.1
      }
      HDF4 compiled with system compilers
      prefix: /opt/shared/hdf4/4.2.13
      standard paths: {
        bin: /opt/shared/hdf4/4.2.13/bin
        lib: /opt/shared/hdf4/4.2.13/lib
        man: /opt/shared/hdf4/4.2.13/share/man
        include: /opt/shared/hdf4/4.2.13/include
      }
    }
    [hdf4/4.2.16] {
      contexts: all
      dependencies: {
        szip/2.1.1
      }
      HDF4 compiled with system compilers
      prefix: /opt/shared/hdf4/4.2.16
      standard paths: {
        bin: /opt/shared/hdf4/4.2.16/bin
        lib: /opt/shared/hdf4/4.2.16/lib
        man: /opt/shared/hdf4/4.2.16/share/man
        include: /opt/shared/hdf4/4.2.16/include
      }
    }
  }
}

[hdf5] {
  contexts: all
  actions: {
    HDF5_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.hdfgroup.org/products/hdf5/
  HDF5: Data Model, Library, & File Format
  prefix: /opt/shared/hdf5
  source file: /opt/shared/valet/2.1/etc/hdf5.vpkg_yaml
  default version: hdf5/1.10.7
  versions: {
    [hdf5/1.10.7] {
      contexts: all
      HDF5 compiled with system compilers
      prefix: /opt/shared/hdf5/1.10.7
      standard paths: {
        bin: /opt/shared/hdf5/1.10.7/bin
        lib: /opt/shared/hdf5/1.10.7/lib
        include: /opt/shared/hdf5/1.10.7/include
      }
    }
    [hdf5/1.10.7:intel-2020] {
      contexts: all
      dependencies: {
        intel/2020
      }
      HDF5 compiled with Intel 2020 compilers
      prefix: /opt/shared/hdf5/1.10.7-intel-2020
      standard paths: {
        bin: /opt/shared/hdf5/1.10.7-intel-2020/bin
        lib: /opt/shared/hdf5/1.10.7-intel-2020/lib
        include: /opt/shared/hdf5/1.10.7-intel-2020/include
      }
    }
    [hdf5/1.10.7:openmpi] {
      contexts: all
      dependencies: {
        openmpi/4.0.5
      }
      HDF5 compiled with MPI-IO + system compilers
      prefix: /opt/shared/hdf5/1.10.7-openmpi
      standard paths: {
        bin: /opt/shared/hdf5/1.10.7-openmpi/bin
        lib: /opt/shared/hdf5/1.10.7-openmpi/lib
        include: /opt/shared/hdf5/1.10.7-openmpi/include
      }
    }
    [hdf5/1.10.7:openmpi,intel-2020] {
      contexts: all
      dependencies: {
        openmpi/4.0.5:intel-2020
      }
      HDF5 with MPI-IO + Intel 2020 compilers
      prefix: /opt/shared/hdf5/1.10.7-intel-2020-openmpi
      standard paths: {
        bin: /opt/shared/hdf5/1.10.7-intel-2020-openmpi/bin
        lib: /opt/shared/hdf5/1.10.7-intel-2020-openmpi/lib
        include: /opt/shared/hdf5/1.10.7-intel-2020-openmpi/include
      }
    }
    [hdf5/1.10.9] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/hdf5/1.10.9
      standard paths: {
        bin: /opt/shared/hdf5/1.10.9/bin
        lib: /opt/shared/hdf5/1.10.9/lib
        include: /opt/shared/hdf5/1.10.9/include
      }
    }
    [hdf5/1.10.9:gcc-12.2] {
      contexts: all
      dependencies: {
        gcc/12.2
      }
      compiled with GCC 12.2 compilers
      prefix: /opt/shared/hdf5/1.10.9-gcc-12.2
      standard paths: {
        bin: /opt/shared/hdf5/1.10.9-gcc-12.2/bin
        lib: /opt/shared/hdf5/1.10.9-gcc-12.2/lib
        include: /opt/shared/hdf5/1.10.9-gcc-12.2/include
      }
    }
    [hdf5/1.10.9:intel-2020] {
      contexts: all
      dependencies: {
        intel/2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/hdf5/1.10.9-intel-2020
      standard paths: {
        bin: /opt/shared/hdf5/1.10.9-intel-2020/bin
        lib: /opt/shared/hdf5/1.10.9-intel-2020/lib
        include: /opt/shared/hdf5/1.10.9-intel-2020/include
      }
    }
    [hdf5/1.10.9:intel-oneapi-2022] {
      contexts: all
      dependencies: {
        intel-oneapi/2022
      }
      compiled with Intel oneAPI 2022 compilers
      prefix: /opt/shared/hdf5/1.10.9-intel-oneapi-2022
      standard paths: {
        bin: /opt/shared/hdf5/1.10.9-intel-oneapi-2022/bin
        lib: /opt/shared/hdf5/1.10.9-intel-oneapi-2022/lib
        include: /opt/shared/hdf5/1.10.9-intel-oneapi-2022/include
      }
    }
    [hdf5/1.10.9:intel-oneapi-2022,openmpi] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:intel-oneapi-2022
      }
      MPI-IO + Intel oneAPI 2022 compilers
      prefix: /opt/shared/hdf5/1.10.9-intel-oneapi-2022-openmpi
      standard paths: {
        bin: /opt/shared/hdf5/1.10.9-intel-oneapi-2022-openmpi/bin
        lib: /opt/shared/hdf5/1.10.9-intel-oneapi-2022-openmpi/lib
        include: /opt/shared/hdf5/1.10.9-intel-oneapi-2022-openmpi/include
      }
    }
    [hdf5/1.10.9:intel-oneapi-2023] {
      contexts: all
      dependencies: {
        intel-oneapi/2023
      }
      compiled with Intel oneAPI 2023 compilers
      prefix: /opt/shared/hdf5/1.10.9-intel-oneapi-2023
      standard paths: {
        bin: /opt/shared/hdf5/1.10.9-intel-oneapi-2023/bin
        lib: /opt/shared/hdf5/1.10.9-intel-oneapi-2023/lib
        include: /opt/shared/hdf5/1.10.9-intel-oneapi-2023/include
      }
    }
    [hdf5/1.10.9:intel-oneapi-2023,openmpi] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:intel-oneapi-2023
      }
      MPI-IO + Intel oneAPI 2023 compilers
      prefix: /opt/shared/hdf5/1.10.9-intel-oneapi-2023-openmpi
      standard paths: {
        bin: /opt/shared/hdf5/1.10.9-intel-oneapi-2023-openmpi/bin
        lib: /opt/shared/hdf5/1.10.9-intel-oneapi-2023-openmpi/lib
        include: /opt/shared/hdf5/1.10.9-intel-oneapi-2023-openmpi/include
      }
    }
    [hdf5/1.10.9:openmpi] {
      contexts: all
      dependencies: {
        openmpi/4.1.5
      }
      MPI-IO + system compilers
      prefix: /opt/shared/hdf5/1.10.9-openmpi
      standard paths: {
        bin: /opt/shared/hdf5/1.10.9-openmpi/bin
        lib: /opt/shared/hdf5/1.10.9-openmpi/lib
        include: /opt/shared/hdf5/1.10.9-openmpi/include
      }
    }
    [hdf5/1.10.9:openmpi,gcc-12.2] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:gcc-12.2
      }
      MPI-IO + GCC 12.2 compilers
      prefix: /opt/shared/hdf5/1.10.9-gcc-12.2-openmpi
      standard paths: {
        bin: /opt/shared/hdf5/1.10.9-gcc-12.2-openmpi/bin
        lib: /opt/shared/hdf5/1.10.9-gcc-12.2-openmpi/lib
        include: /opt/shared/hdf5/1.10.9-gcc-12.2-openmpi/include
      }
    }
    [hdf5/1.10.9:openmpi,intel-2020] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:intel-2020
      }
      MPI-IO + Intel 2020 compilers
      prefix: /opt/shared/hdf5/1.10.9-intel-2020-openmpi
      standard paths: {
        bin: /opt/shared/hdf5/1.10.9-intel-2020-openmpi/bin
        lib: /opt/shared/hdf5/1.10.9-intel-2020-openmpi/lib
        include: /opt/shared/hdf5/1.10.9-intel-2020-openmpi/include
      }
    }
    [hdf5/1.12.0] {
      contexts: all
      HDF5 compiled with system compilers
      prefix: /opt/shared/hdf5/1.12.0
      standard paths: {
        bin: /opt/shared/hdf5/1.12.0/bin
        lib: /opt/shared/hdf5/1.12.0/lib
        include: /opt/shared/hdf5/1.12.0/include
      }
    }
    [hdf5/1.12.0:intel-2020] {
      contexts: all
      dependencies: {
        intel/2020
      }
      HDF5 compiled with Intel 2020 compilers
      prefix: /opt/shared/hdf5/1.12.0-intel-2020
      standard paths: {
        bin: /opt/shared/hdf5/1.12.0-intel-2020/bin
        lib: /opt/shared/hdf5/1.12.0-intel-2020/lib
        include: /opt/shared/hdf5/1.12.0-intel-2020/include
      }
    }
    [hdf5/1.12.0:openmpi,intel-2020] {
      contexts: all
      dependencies: {
        openmpi/4.0.5:intel-2020
      }
      HDF5 with MPI-IO + Intel 2020 compilers
      prefix: /opt/shared/hdf5/1.12.0-intel-2020-openmpi
      standard paths: {
        bin: /opt/shared/hdf5/1.12.0-intel-2020-openmpi/bin
        lib: /opt/shared/hdf5/1.12.0-intel-2020-openmpi/lib
        include: /opt/shared/hdf5/1.12.0-intel-2020-openmpi/include
      }
    }
  }
}

[hpcx] {
  contexts: all
  actions: {
    HPCX_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://developer.nvidia.com/networking/hpc-x
  Mellanox HPC-X toolkit
  prefix: /opt/shared/hpcx
  source file: /opt/shared/valet/2.1/etc/hpcx.vpkg_yaml
  default version: hpcx/2.8.1:mt
  versions: {
    [hpcx/2.8.1] {
      contexts: all
      actions: {
        HPCX_DIR=${VALET_PATH_PREFIX} (contexts: all)
        HPCX_HOME=${VALET_PATH_PREFIX} (contexts: all)
        HPCX_UCX_DIR=${VALET_PATH_PREFIX}/ucx (contexts: all)
        HPCX_SHARP_DIR=${VALET_PATH_PREFIX}/sharp (contexts: all)
        HPCX_HCOLL_DIR=${VALET_PATH_PREFIX}/hcoll (contexts: all)
        HPCX_NCCL_RDMA_SHARP_PLUGIN_DIR=${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin (contexts: all)
        HPCX_CLUSTERKIT_DIR=${VALET_PATH_PREFIX}/clusterkit (contexts: all)
        HPCX_MPI_DIR=${VALET_PATH_PREFIX}/ompi (contexts: all)
        HPCX_OSHMEM_DIR=${VALET_PATH_PREFIX}/ompi (contexts: all)
        HPCX_IPM_DIR=${VALET_PATH_PREFIX}/ompi/tests/ipm-2.0.6 (contexts: all)
        HPCX_IPM_LIB=${VALET_PATH_PREFIX}/ompi/tests/ipm-2.0.6/lib/libipm.so (contexts: all)
        HPCX_MPI_TESTS_DIR=${VALET_PATH_PREFIX}/ompi/tests (contexts: all)
        HPCX_OSU_DIR=${VALET_PATH_PREFIX}/ompi/tests/osu-micro-benchmarks-5.6.2 (contexts: all)
        HPCX_OSU_CUDA_DIR=${VALET_PATH_PREFIX}/ompi/tests/osu-micro-benchmarks-5.6.2-cuda (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ucx/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/hcoll/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ompi/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ompi/tests/imb (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/clusterkit/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ucx/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/lib/ucx (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ucx/lib/ucx (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/lib/ucx (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/hcoll/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sharp/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sharp/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sharp/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ompi/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/ucx/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/hcoll/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/sharp/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/ompi/include (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/share/man (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/ucx/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/sharp/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib/pkgconfig (contexts: all)
        OPAL_PREFIX=${VALET_PATH_PREFIX}/ompi (contexts: all)
        PMIX_INSTALL_PREFIX=${VALET_PATH_PREFIX}/ompi (contexts: all)
        OMPI_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        MPI_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        OSHMEM_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        SHMEM_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
      }
      v2.8.1 for RedHat 7.8 and OFED 5.1
      prefix: /opt/shared/hpcx/2.8.1
    }
    [hpcx/2.8.1:debug] {
      contexts: all
      actions: {
        HPCX_DIR=${VALET_PATH_PREFIX} (contexts: all)
        HPCX_HOME=${VALET_PATH_PREFIX} (contexts: all)
        HPCX_UCX_DIR=${VALET_PATH_PREFIX}/ucx/debug (contexts: all)
        HPCX_SHARP_DIR=${VALET_PATH_PREFIX}/sharp/debug (contexts: all)
        HPCX_HCOLL_DIR=${VALET_PATH_PREFIX}/hcoll/debug (contexts: all)
        HPCX_NCCL_RDMA_SHARP_PLUGIN_DIR=${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin (contexts: all)
        HPCX_CLUSTERKIT_DIR=${VALET_PATH_PREFIX}/clusterkit (contexts: all)
        HPCX_MPI_DIR=${VALET_PATH_PREFIX}/ompi (contexts: all)
        HPCX_OSHMEM_DIR=${VALET_PATH_PREFIX}/ompi (contexts: all)
        HPCX_IPM_DIR=${VALET_PATH_PREFIX}/ompi/tests/ipm-2.0.6 (contexts: all)
        HPCX_IPM_LIB=${VALET_PATH_PREFIX}/ompi/tests/ipm-2.0.6/lib/libipm.so (contexts: all)
        HPCX_MPI_TESTS_DIR=${VALET_PATH_PREFIX}/ompi/tests (contexts: all)
        HPCX_OSU_DIR=${VALET_PATH_PREFIX}/ompi/tests/osu-micro-benchmarks-5.6.2 (contexts: all)
        HPCX_OSU_CUDA_DIR=${VALET_PATH_PREFIX}/ompi/tests/osu-micro-benchmarks-5.6.2-cuda (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ucx/debug/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/hcoll/debug/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ompi/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ompi/tests/imb (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/clusterkit/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/debug/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ucx/debug/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/debug/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/debug/lib/ucx (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ucx/debug/lib/ucx (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/debug/lib/ucx (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/debug/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/hcoll/debug/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/debug/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sharp/debug/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sharp/debug/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sharp/debug/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ompi/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/ucx/debug/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/hcoll/debug/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/sharp/debug/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/ompi/include (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/share/man (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/ucx/debug/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/debug/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/sharp/debug/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib/pkgconfig (contexts: all)
        OPAL_PREFIX=${VALET_PATH_PREFIX}/ompi (contexts: all)
        PMIX_INSTALL_PREFIX=${VALET_PATH_PREFIX}/ompi (contexts: all)
        OMPI_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        MPI_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        OSHMEM_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        SHMEM_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
      }
      debugging v2.8.1 for RedHat 7.8 and OFED 5.1
      prefix: /opt/shared/hpcx/2.8.1-debug
    }
    [hpcx/2.8.1:mt] {
      contexts: all
      actions: {
        HPCX_DIR=${VALET_PATH_PREFIX} (contexts: all)
        HPCX_HOME=${VALET_PATH_PREFIX} (contexts: all)
        HPCX_UCX_DIR=${VALET_PATH_PREFIX}/ucx/mt (contexts: all)
        HPCX_SHARP_DIR=${VALET_PATH_PREFIX}/sharp (contexts: all)
        HPCX_HCOLL_DIR=${VALET_PATH_PREFIX}/hcoll (contexts: all)
        HPCX_NCCL_RDMA_SHARP_PLUGIN_DIR=${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin (contexts: all)
        HPCX_CLUSTERKIT_DIR=${VALET_PATH_PREFIX}/clusterkit (contexts: all)
        HPCX_MPI_DIR=${VALET_PATH_PREFIX}/ompi (contexts: all)
        HPCX_OSHMEM_DIR=${VALET_PATH_PREFIX}/ompi (contexts: all)
        HPCX_IPM_DIR=${VALET_PATH_PREFIX}/ompi/tests/ipm-2.0.6 (contexts: all)
        HPCX_IPM_LIB=${VALET_PATH_PREFIX}/ompi/tests/ipm-2.0.6/lib/libipm.so (contexts: all)
        HPCX_MPI_TESTS_DIR=${VALET_PATH_PREFIX}/ompi/tests (contexts: all)
        HPCX_OSU_DIR=${VALET_PATH_PREFIX}/ompi/tests/osu-micro-benchmarks-5.6.2 (contexts: all)
        HPCX_OSU_CUDA_DIR=${VALET_PATH_PREFIX}/ompi/tests/osu-micro-benchmarks-5.6.2-cuda (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ucx/mt/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/hcoll/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ompi/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ompi/tests/imb (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/clusterkit/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/mt/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ucx/mt/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/mt/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/mt/lib/ucx (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ucx/mt/lib/ucx (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/mt/lib/ucx (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/hcoll/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sharp/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sharp/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sharp/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ompi/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/ucx/mt/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/hcoll/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/sharp/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/ompi/include (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/share/man (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/ucx/mt/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/sharp/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib/pkgconfig (contexts: all)
        OPAL_PREFIX=${VALET_PATH_PREFIX}/ompi (contexts: all)
        PMIX_INSTALL_PREFIX=${VALET_PATH_PREFIX}/ompi (contexts: all)
        OMPI_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        MPI_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        OSHMEM_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        SHMEM_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
      }
      multithreaded v2.8.1 for RedHat 7.8 and OFED 5.1
      prefix: /opt/shared/hpcx/2.8.1-mt
    }
    [hpcx/2.8.1:prof] {
      contexts: all
      actions: {
        HPCX_DIR=${VALET_PATH_PREFIX} (contexts: all)
        HPCX_HOME=${VALET_PATH_PREFIX} (contexts: all)
        HPCX_UCX_DIR=${VALET_PATH_PREFIX}/ucx/prof (contexts: all)
        HPCX_SHARP_DIR=${VALET_PATH_PREFIX}/sharp (contexts: all)
        HPCX_HCOLL_DIR=${VALET_PATH_PREFIX}/hcoll (contexts: all)
        HPCX_NCCL_RDMA_SHARP_PLUGIN_DIR=${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin (contexts: all)
        HPCX_CLUSTERKIT_DIR=${VALET_PATH_PREFIX}/clusterkit (contexts: all)
        HPCX_MPI_DIR=${VALET_PATH_PREFIX}/ompi (contexts: all)
        HPCX_OSHMEM_DIR=${VALET_PATH_PREFIX}/ompi (contexts: all)
        HPCX_IPM_DIR=${VALET_PATH_PREFIX}/ompi/tests/ipm-2.0.6 (contexts: all)
        HPCX_IPM_LIB=${VALET_PATH_PREFIX}/ompi/tests/ipm-2.0.6/lib/libipm.so (contexts: all)
        HPCX_MPI_TESTS_DIR=${VALET_PATH_PREFIX}/ompi/tests (contexts: all)
        HPCX_OSU_DIR=${VALET_PATH_PREFIX}/ompi/tests/osu-micro-benchmarks-5.6.2 (contexts: all)
        HPCX_OSU_CUDA_DIR=${VALET_PATH_PREFIX}/ompi/tests/osu-micro-benchmarks-5.6.2-cuda (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ucx/prof/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/hcoll/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ompi/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/ompi/tests/imb (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/clusterkit/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/prof/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ucx/prof/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/prof/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/prof/lib/ucx (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ucx/prof/lib/ucx (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ucx/prof/lib/ucx (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/hcoll/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sharp/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sharp/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sharp/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/ompi/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/nccl_rdma_sharp_plugin/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/ucx/prof/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/hcoll/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/sharp/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/ompi/include (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/share/man (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/ucx/prof/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/hcoll/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/sharp/lib/pkgconfig (contexts: all)
        PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/ompi/lib/pkgconfig (contexts: all)
        OPAL_PREFIX=${VALET_PATH_PREFIX}/ompi (contexts: all)
        PMIX_INSTALL_PREFIX=${VALET_PATH_PREFIX}/ompi (contexts: all)
        OMPI_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        MPI_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        OSHMEM_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
        SHMEM_HOME=${VALET_PATH_PREFIX}/ompi (contexts: all)
      }
      profiling v2.8.1 for RedHat 7.8 and OFED 5.1
      prefix: /opt/shared/hpcx/2.8.1-prof
    }
  }
}

[hwloc] {
  contexts: all
  actions: {
    HWLOC_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://www.open-mpi.org/projects/hwloc/
  A portable abstraction of the hierarchical topology of modern architectures
  prefix: /opt/shared/hwloc
  source file: /opt/shared/valet/2.1/etc/hwloc.vpkg_yaml
  default version: hwloc/2.3.0
  versions: {
    [hwloc/2.3.0] {
      contexts: all
      compiled with system GCC
      prefix: /opt/shared/hwloc/2.3.0
      standard paths: {
        bin: /opt/shared/hwloc/2.3.0/bin, /opt/shared/hwloc/2.3.0/sbin
        lib: /opt/shared/hwloc/2.3.0/lib
        man: /opt/shared/hwloc/2.3.0/share/man
        include: /opt/shared/hwloc/2.3.0/include
        pkgConfig: /opt/shared/hwloc/2.3.0/lib/pkgconfig
      }
    }
  }
}

[icu4c] {
  contexts: all
  actions: {
    ICU4C_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://site.icu-project.org/
  ICU4C:  International Components for Unicode (C/C++)
  prefix: /opt/shared/icu4c
  source file: /opt/shared/valet/2.1/etc/icu4c.vpkg_yaml
  default version: icu4c/68.1
  versions: {
    [icu4c/68.1] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      ICU4C compiled with GCC 10.1.0
      prefix: /opt/shared/icu4c/68.1
      standard paths: {
        bin: /opt/shared/icu4c/68.1/bin, /opt/shared/icu4c/68.1/sbin
        lib: /opt/shared/icu4c/68.1/lib
        man: /opt/shared/icu4c/68.1/share/man
        include: /opt/shared/icu4c/68.1/include
        pkgConfig: /opt/shared/icu4c/68.1/lib/pkgconfig
      }
    }
  }
}

[idl] {
  contexts: all
  flags: no-development-env,no-standard-paths
  actions: {
    IDL_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://www.harrisgeospatial.com/Software-Technology/IDL
  IDL scientific programming language
  prefix: /opt/shared/idl
  source file: /opt/shared/valet/2.1/etc/idl.vpkg_yaml
  default version: idl/8.7
  versions: {
    [idl/8.7] {
      contexts: all
      alias-to: idl/8.7.2
    }
    [idl/8.7.2] {
      contexts: all
      actions: {
        PATH+=[:]${VALET_PATH_PREFIX}/idl87/bin (contexts: all)
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/idl.sh
        } (contexts: all)
      }
      vendor install package
      prefix: /opt/shared/idl/8.7.2
    }
  }
}

[intel] {
  contexts: all
  flags: no-development-env,no-standard-paths
  actions: {
    COMPILER=intel (contexts: development)
    CC=icc (contexts: development)
    CXX=icpc (contexts: development)
    FC=ifort (contexts: development)
    F77=ifort (contexts: development)
    INTEL_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://software.intel.com/en-us/intel-compilers
  Intel Compiler Suite
  prefix: /opt/shared/intel
  source file: /opt/shared/valet/2.1/etc/intel.vpkg_yaml
  default version: intel/2020
  versions: {
    [intel/2018] {
      contexts: all
      alias-to: intel/2018u4
    }
    [intel/2018:intel-mpi] {
      contexts: all
      alias-to: intel/2018u4:intel-mpi
    }
    [intel/2018u4] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-64bit.sh
        } (contexts: all)
      }
      Version 2018, Update 4 (2018.5.274)
      prefix: /opt/shared/intel/2018u4
      standard paths: {
        bin: /opt/shared/intel/2018u4/bin
        lib: /opt/shared/intel/2018u4/lib
        man: /opt/shared/intel/2018u4/man
        include: /opt/shared/intel/2018u4/include
      }
    }
    [intel/2018u4:intel-mpi] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-64bit.sh
        } (contexts: all)
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/intel/2018u4/compilers_and_libraries/linux/mpi/intel64/bin/mpivars.sh
        } (contexts: all)
      }
      Version 2018, Update 4 (2018.5.274) with Intel MPI Runtime
      prefix: /opt/shared/intel/2018u4
      standard paths: {
        bin: /opt/shared/intel/2018u4/bin
        lib: /opt/shared/intel/2018u4/lib
        man: /opt/shared/intel/2018u4/man
        include: /opt/shared/intel/2018u4/include
      }
    }
    [intel/2019] {
      contexts: all
      alias-to: intel/2019u6
    }
    [intel/2019:intel-mpi] {
      contexts: all
      alias-to: intel/2019u6:intel-mpi
    }
    [intel/2019u6] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-64bit.sh
        } (contexts: all)
      }
      Version 2019, Update 6 (2019.6.324)
      prefix: /opt/shared/intel/2019u6
      standard paths: {
        bin: /opt/shared/intel/2019u6/bin
        lib: /opt/shared/intel/2019u6/lib
        man: /opt/shared/intel/2019u6/man
        include: /opt/shared/intel/2019u6/include
      }
    }
    [intel/2019u6:intel-mpi] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-64bit.sh
        } (contexts: all)
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/intel/2019u6/compilers_and_libraries/linux/mpi/intel64/bin/mpivars.sh
        } (contexts: all)
      }
      Version 2019, Update 6 (2019.6.324) with Intel MPI Runtime
      prefix: /opt/shared/intel/2019u6
      standard paths: {
        bin: /opt/shared/intel/2019u6/bin
        lib: /opt/shared/intel/2019u6/lib
        man: /opt/shared/intel/2019u6/man
        include: /opt/shared/intel/2019u6/include
      }
    }
    [intel/2020] {
      contexts: all
      alias-to: intel/2020u4
    }
    [intel/2020:intel-mpi] {
      contexts: all
      alias-to: intel/2020u4:intel-mpi
    }
    [intel/2020u4] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-64bit.sh
        } (contexts: all)
      }
      Version 2020, Update 4 (2020.4.304)
      prefix: /opt/shared/intel/2020u4
      standard paths: {
        bin: /opt/shared/intel/2020u4/bin
        lib: /opt/shared/intel/2020u4/lib
        man: /opt/shared/intel/2020u4/man
        include: /opt/shared/intel/2020u4/include
      }
    }
    [intel/2020u4:intel-mpi] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-64bit.sh
        } (contexts: all)
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/intel/2020u4/compilers_and_libraries/linux/mpi/intel64/bin/mpivars.sh
        } (contexts: all)
      }
      Version 2020, Update 4 (2020.4.303) with Intel MPI Runtime
      prefix: /opt/shared/intel/2020u4
      standard paths: {
        bin: /opt/shared/intel/2020u4/bin
        lib: /opt/shared/intel/2020u4/lib
        man: /opt/shared/intel/2020u4/man
        include: /opt/shared/intel/2020u4/include
      }
    }
  }
}

[intel-mkl] {
  contexts: all
  flags: no-standard-paths
  actions: {
    executable(source, succeedThenFail, success=0) {
      sh : /opt/shared/valet/2.1/libexec/intel-mkl.sh
    } (contexts: all)
    INTEL_DASH_MKL_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://software.intel.com/en-us/intel-compilers
  Intel Compiler Suite, Math Kernel Library component
  prefix: /opt/shared/intel
  source file: /opt/shared/valet/2.1/etc/intel-mkl.vpkg_yaml
  default version: intel-mkl/2020
  versions: {
    [intel-mkl/2018] {
      contexts: all
      alias-to: intel-mkl/2018u4
    }
    [intel-mkl/2018u4] {
      contexts: all
      bundled with Version 2018, Update 4
      prefix: /opt/shared/intel/2018u4/mkl
      standard paths: {
        bin: /opt/shared/intel/2018u4/mkl/bin
        lib: /opt/shared/intel/2018u4/mkl/lib
        include: /opt/shared/intel/2018u4/mkl/include
      }
    }
    [intel-mkl/2019] {
      contexts: all
      alias-to: intel-mkl/2019u6
    }
    [intel-mkl/2019u6] {
      contexts: all
      bundled with Version 2019, Update 6
      prefix: /opt/shared/intel/2019u6/mkl
      standard paths: {
        bin: /opt/shared/intel/2019u6/mkl/bin
        lib: /opt/shared/intel/2019u6/mkl/lib
        include: /opt/shared/intel/2019u6/mkl/include
      }
    }
    [intel-mkl/2020] {
      contexts: all
      alias-to: intel-mkl/2020u4
    }
    [intel-mkl/2020u4] {
      contexts: all
      bundled with Version 2020, Update 4
      prefix: /opt/shared/intel/2020u4/mkl
      standard paths: {
        bin: /opt/shared/intel/2020u4/mkl/bin
        lib: /opt/shared/intel/2020u4/mkl/lib
        include: /opt/shared/intel/2020u4/mkl/include
      }
    }
  }
}

[intel-oneapi] {
  contexts: all
  flags: no-development-env,no-standard-paths
  actions: {
    INTEL_LICENSE_FILE=/opt/shared/intel-oneapi/server.lic (contexts: all)
    COMPILER=intel (contexts: development)
    CC=icc (contexts: development)
    CXX=icpc (contexts: development)
    FC=ifort (contexts: development)
    F77=ifort (contexts: development)
    LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/level-zero/lib64 (contexts: all)
    INTEL_DASH_ONEAPI_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://software.intel.com/en-us/intel-compilers
  Intel oneAPI development tools
  prefix: /opt/shared/intel-oneapi
  source file: /opt/shared/valet/2.1/etc/intel-oneapi.vpkg_yaml
  default version: intel-oneapi/2022
  versions: {
    [intel-oneapi/2022] {
      contexts: all
      alias-to: intel-oneapi/2022.3.0.8767
    }
    [intel-oneapi/2022.1.1.97] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-oneAPI.sh
        } (contexts: all)
      }
      dependencies: {
        gcc/=>=7
      }
      HPCToolkit 2022.1.1.97 (Base 2022.1.1.119) installed 2022-01-03
      prefix: /opt/shared/intel-oneapi/2022.1.1.97
    }
    [intel-oneapi/2022.2.0.262] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-oneAPI.sh
        } (contexts: all)
      }
      dependencies: {
        gcc/=>=7
      }
      HPCToolkit 2022.2.0.191 (Base 2022.2.0.262) installed 2022-06-23
      prefix: /opt/shared/intel-oneapi/2022.2.0.262
    }
    [intel-oneapi/2022.3.0.8767] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-oneAPI.sh
        } (contexts: all)
        __INTEL_PRE_CFLAGS=+[ ]-diag-disable=10441 (contexts: all)
      }
      dependencies: {
        gcc/=>=7
      }
      HPCToolkit 2022.3.0.8751 (Base 2022.3.0.8767) installed 2022-10-17
      prefix: /opt/shared/intel-oneapi/2022.3.0.8767
    }
    [intel-oneapi/2023] {
      contexts: all
      alias-to: intel-oneapi/2023.0.0.25537
    }
    [intel-oneapi/2023.0.0.25537] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-oneAPI.sh
        } (contexts: all)
        __INTEL_PRE_CFLAGS=+[ ]-diag-disable=10441 (contexts: all)
      }
      dependencies: {
        binutils/2.35
        gcc/=>=7
      }
      attributes: {
        toolkits = ['AIKit 2023.0.0.26100', 'BaseKit 2023.0.0.25537', 'HPCKit 2023.0.0.25400', 'IoTKit 2023.0.0.25397', 'pythoni39_oneapi 2023.0.0.25636', 'RenderKit 2023.0.0.25403']
      }
      HPCToolkit 2023.0.0.25400 (Base 2023.0.0.25537) installed 2023-03-03
      prefix: /opt/shared/intel-oneapi/2023.0.0.25537
    }
  }
}

[intel-oneapi-mkl] {
  contexts: all
  flags: no-standard-paths
  actions: {
    executable(source, succeedThenFail, success=0) {
      sh : /opt/shared/valet/2.1/libexec/intel-oneAPI-mkl.sh
    } (contexts: all)
    INTEL_DASH_ONEAPI_DASH_MKL_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://software.intel.com/en-us/intel-compilers
  Intel oneAPI, Math Kernel Library component
  prefix: /opt/shared/intel-oneapi
  source file: /opt/shared/valet/2.1/etc/intel-oneapi-mkl.vpkg_yaml
  default version: intel-oneapi-mkl/2023
  versions: {
    [intel-oneapi-mkl/2022] {
      contexts: all
      alias-to: intel-oneapi-mkl/2022.3.0.8767
    }
    [intel-oneapi-mkl/2022.1.1.97] {
      contexts: all
      bundled with 2022.1.1.97
      prefix: /opt/shared/intel-oneapi/2022.1.1.97
    }
    [intel-oneapi-mkl/2022.2.0.262] {
      contexts: all
      bunded with 2022.2.0.262
      prefix: /opt/shared/intel-oneapi/2022.2.0.262
    }
    [intel-oneapi-mkl/2022.3.0.8767] {
      contexts: all
      bunded with 2022.3.0.8767
      prefix: /opt/shared/intel-oneapi/2022.3.0.8767
    }
    [intel-oneapi-mkl/2023] {
      contexts: all
      alias-to: intel-oneapi-mkl/2023.0.0.25537
    }
    [intel-oneapi-mkl/2023.0.0.25537] {
      contexts: all
      bundled with 2023.0.0.25537
      prefix: /opt/shared/intel-oneapi/2023.0.0.25537
    }
  }
}

[intel-python] {
  contexts: all
  flags: no-development-env,no-standard-paths
  actions: {
    executable(source, succeedThenFail, success=0) {
      sh : /opt/shared/valet/2.1/libexec/intel-python.sh
    } (contexts: all)
    SHADOW_PREFIX=${VALET_PATH_PREFIX} (contexts: all)
    INTEL_DASH_PYTHON_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://software.intel.com/en-us/distribution-for-python
  Intel Distribution for Python
  prefix: /opt/shared/intel-python
  source file: /opt/shared/valet/2.1/etc/intel-python.vpkg_yaml
  default version: intel-python/2022
  versions: {
    [intel-python/2021] {
      contexts: all
      alias-to: intel-python/2021.4.0
    }
    [intel-python/2021.1.1] {
      contexts: all
      2021 update 1 (Python 3.7)
      prefix: /opt/shared/intel-python/2021.1.1
    }
    [intel-python/2021.1.1:unaltered] {
      contexts: all
      2021 update 1 (Python 3.7) ORIGINAL INSTALL
      prefix: /opt/shared/intel-python/2021.1.1-unaltered
    }
    [intel-python/2021.4.0] {
      contexts: all
      2021 update 4 (Python 3.7)
      prefix: /opt/shared/intel-python/2021.4.0
    }
    [intel-python/2022] {
      contexts: all
      alias-to: intel-python/2022.1.0
    }
    [intel-python/2022.1.0] {
      contexts: all
      2022 update 1 (Python 3.9)
      prefix: /opt/shared/intel-python/2022.1.0
    }
  }
}

[jdk] {
  contexts: all
  actions: {
    JDK_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://openjdk.java.net/projects/jdk/
  OpenJDK Java Development Kit
  prefix: /opt/shared/jdk
  source file: /opt/shared/valet/2.1/etc/jdk.vpkg_yaml
  default version: jdk/15.0.1
  versions: {
    [jdk/8u262] {
      contexts: all
      OpenJDK Java SE Platform
      prefix: /opt/shared/jdk/8u262
      standard paths: {
        bin: /opt/shared/jdk/8u262/bin
        lib: /opt/shared/jdk/8u262/lib
        man: /opt/shared/jdk/8u262/man
        include: /opt/shared/jdk/8u262/include
      }
    }
    [jdk/9.0.4] {
      contexts: all
      OpenJDK Java SE Platform
      prefix: /opt/shared/jdk/9.0.4
      standard paths: {
        bin: /opt/shared/jdk/9.0.4/bin
        lib: /opt/shared/jdk/9.0.4/lib
        man: /opt/shared/jdk/9.0.4/man
        include: /opt/shared/jdk/9.0.4/include
      }
    }
    [jdk/10.0.2] {
      contexts: all
      OpenJDK Java SE Platform
      prefix: /opt/shared/jdk/10.0.2
      standard paths: {
        bin: /opt/shared/jdk/10.0.2/bin
        lib: /opt/shared/jdk/10.0.2/lib
        man: /opt/shared/jdk/10.0.2/man
        include: /opt/shared/jdk/10.0.2/include
      }
    }
    [jdk/11.0.2] {
      contexts: all
      OpenJDK Java SE Platform
      prefix: /opt/shared/jdk/11.0.2
      standard paths: {
        bin: /opt/shared/jdk/11.0.2/bin
        lib: /opt/shared/jdk/11.0.2/lib
        include: /opt/shared/jdk/11.0.2/include
      }
    }
    [jdk/12.0.2] {
      contexts: all
      OpenJDK Java SE Platform
      prefix: /opt/shared/jdk/12.0.2
      standard paths: {
        bin: /opt/shared/jdk/12.0.2/bin
        lib: /opt/shared/jdk/12.0.2/lib
        include: /opt/shared/jdk/12.0.2/include
      }
    }
    [jdk/13.0.2] {
      contexts: all
      OpenJDK Java SE Platform
      prefix: /opt/shared/jdk/13.0.2
      standard paths: {
        bin: /opt/shared/jdk/13.0.2/bin
        lib: /opt/shared/jdk/13.0.2/lib
        include: /opt/shared/jdk/13.0.2/include
      }
    }
    [jdk/14.0.2] {
      contexts: all
      OpenJDK Java SE Platform
      prefix: /opt/shared/jdk/14.0.2
      standard paths: {
        bin: /opt/shared/jdk/14.0.2/bin
        lib: /opt/shared/jdk/14.0.2/lib
        include: /opt/shared/jdk/14.0.2/include
      }
    }
    [jdk/15.0.1] {
      contexts: all
      OpenJDK Java SE Platform
      prefix: /opt/shared/jdk/15.0.1
      standard paths: {
        bin: /opt/shared/jdk/15.0.1/bin
        lib: /opt/shared/jdk/15.0.1/lib
        include: /opt/shared/jdk/15.0.1/include
      }
    }
  }
}

[julia] {
  contexts: all
  actions: {
    JULIA_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://julialang.org/
  The Julia Programming Language
  prefix: /opt/shared/julia
  source file: /opt/shared/valet/2.1/etc/julia.vpkg_yaml
  default version: julia/1.7.3
  versions: {
    [julia/1.7.3] {
      contexts: all
      actions: {
        JULIA_VERSION_LONG=1.7.3 (contexts: all)
        JULIA_VERSION_SHORT=1.7 (contexts: all)
      }
      dependencies: {
        gcc/12.1
      }
      compiled with GCC 12.1 compilers
      prefix: /opt/shared/julia/1.7.3
      standard paths: {
        bin: /opt/shared/julia/1.7.3/bin
        lib: /opt/shared/julia/1.7.3/lib
        man: /opt/shared/julia/1.7.3/share/man
        include: /opt/shared/julia/1.7.3/include
      }
    }
  }
}

[kcachegrind] {
  contexts: all
  actions: {
    KCACHEGRIND_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://invent.kde.org/sdk/kcachegrind
  GUI to profilers such as Valgrind
  prefix: /opt/shared/kcachegrind
  source file: /opt/shared/valet/2.1/etc/kcachegrind.vpkg_yaml
  default version: kcachegrind/4.10.5
  versions: {
    [kcachegrind/4.10.5] {
      contexts: all
      official CentOS 7.x RPM
      prefix: /opt/shared/kcachegrind/4.10.5
      standard paths: {
        bin: /opt/shared/kcachegrind/4.10.5/bin
      }
    }
  }
}

[lammps] {
  contexts: all
  actions: {
    LAMMPS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://www.lammps.org
  Large-scale Atomic/Molecular Massively Parallel Simulator
  prefix: /opt/shared/lammps
  source file: /opt/shared/valet/2.1/etc/lammps.vpkg_yaml
  default version: lammps/29Oct2020
  versions: {
    [lammps/29Oct2020] {
      contexts: all
      actions: {
        PYTHONPATH+=[:]${VALET_PATH_PREFIX}/lib/python2.7/site-packages (contexts: all)
      }
      dependencies: {
        openmpi/4.1.0:intel-2020
        python/2.7.18
      }
      compiled with Intel compilers, MKL, Open MPI, and Python 2.7
      prefix: /opt/shared/lammps/29Oct2020
      standard paths: {
        bin: /opt/shared/lammps/29Oct2020/bin
        lib: /opt/shared/lammps/29Oct2020/lib
      }
    }
  }
}

[lapack] {
  contexts: all
  actions: {
    LAPACK_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.netlib.org/lapack/
  LAPACK - Linear Algebra PACKage
  prefix: /opt/shared/lapack
  source file: /opt/shared/valet/2.1/etc/lapack.vpkg_yaml
  default version: lapack/3.9.0
  versions: {
    [lapack/3.9.0] {
      contexts: all
      LAPACK compiled with system compilers
      prefix: /opt/shared/lapack/3.9.0
      standard paths: {
        lib: /opt/shared/lapack/3.9.0/lib64
        include: /opt/shared/lapack/3.9.0/include
      }
    }
    [lapack/3.9.0:gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      LAPACK compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/lapack/3.9.0-gcc-10.1.0
      standard paths: {
        lib: /opt/shared/lapack/3.9.0-gcc-10.1.0/lib64
        include: /opt/shared/lapack/3.9.0-gcc-10.1.0/include
      }
    }
    [lapack/3.9.0:intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      LAPACK compiled with Intel 2020 compilers
      prefix: /opt/shared/lapack/3.9.0-intel-2020
      standard paths: {
        lib: /opt/shared/lapack/3.9.0-intel-2020/lib64
        include: /opt/shared/lapack/3.9.0-intel-2020/include
      }
    }
  }
}

[libfabric] {
  contexts: all
  actions: {
    LIBFABRIC_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://ofiwg.github.io/libfabric/
  Libfabric is a core component of the OpenFabrics Interfaces (OFI) framework
  prefix: /opt/shared/libfabric
  source file: /opt/shared/valet/2.1/etc/libfabric.vpkg_yaml
  default version: libfabric/1.11
  versions: {
    [libfabric/1.11] {
      contexts: all
      alias-to: libfabric/1.11.2
    }
    [libfabric/1.11.2] {
      contexts: all
      hook_debug,perf,tcp,udp,verbs,sockets,rstream,shm,rxd,mrail,rxm
      prefix: /opt/shared/libfabric/1.11.2
      standard paths: {
        bin: /opt/shared/libfabric/1.11.2/bin
        lib: /opt/shared/libfabric/1.11.2/lib
        man: /opt/shared/libfabric/1.11.2/share/man
        include: /opt/shared/libfabric/1.11.2/include
        pkgConfig: /opt/shared/libfabric/1.11.2/lib/pkgconfig
      }
    }
  }
}

[librs] {
  contexts: all
  actions: {
    RS_INC_DIR=${VALET_PATH_PREFIX}/include (contexts: development)
    RS_LIB_DIR=${VALET_PATH_PREFIX}/lib (contexts: development)
    MPFI_INC_DIR=${VALET_PATH_PREFIX}/include (contexts: development)
    MPFI_LIB_DIR=${VALET_PATH_PREFIX}/lib (contexts: development)
    LIBRS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://vegas.loria.fr/rs/
  root isolation
  prefix: /opt/shared/librs
  source file: /opt/shared/valet/2.1/etc/librs.vpkg_yaml
  default version: librs/3.1.0
  versions: {
    [librs/3.1.0] {
      contexts: all
      librs prebuild binary package
      prefix: /opt/shared/librs/3.1.0
      standard paths: {
        bin: /opt/shared/librs/3.1.0/bin
        lib: /opt/shared/librs/3.1.0/lib
        include: /opt/shared/librs/3.1.0/include
      }
    }
  }
}

[llvm] {
  contexts: all
  actions: {
    COMPILER=llvm (contexts: development)
    CC=clang (contexts: development)
    CXX=clang++ (contexts: development)
    OBJC=clang (contexts: development)
    OBJCXX=clang++ (contexts: development)
    LLVM_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.llvm.org/
  LLVM compiler and run-time
  prefix: /opt/shared/llvm
  source file: /opt/shared/valet/2.1/etc/llvm.vpkg_yaml
  default version: llvm/17.0.6
  versions: {
    [llvm/17] {
      contexts: all
      alias-to: llvm/17.0.6
    }
    [llvm/17.0.6] {
      contexts: all
      dependencies: {
        gcc/12.2.0
      }
      LLVM Run-time/C/C++/Obj-C/Obj-C++ built on GCC/12.2.0
      prefix: /opt/shared/llvm/17.0.6
      standard paths: {
        bin: /opt/shared/llvm/17.0.6/bin
        lib: /opt/shared/llvm/17.0.6/lib
        man: /opt/shared/llvm/17.0.6/share/man
        include: /opt/shared/llvm/17.0.6/include
      }
    }
  }
}

[lzip] {
  contexts: all
  actions: {
    LZIP_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://www.nongnu.org/lzip/lzip.html
  LZMA compressor with a user interface similar to gzip
  prefix: /opt/shared/lzip
  source file: /opt/shared/valet/2.1/etc/lzip.vpkg_yaml
  default version: lzip/1.21
  versions: {
    [lzip/1.21] {
      contexts: all
      lzip compiled with system compilers
      prefix: /opt/shared/lzip/1.21
      standard paths: {
        bin: /opt/shared/lzip/1.21/bin
        man: /opt/shared/lzip/1.21/share/man
        info: /opt/shared/lzip/1.21/share/info
      }
    }
  }
}

[mathematica] {
  contexts: all
  actions: {
    PATH+=[:]${VALET_PATH_PREFIX}/Executables (contexts: all)
    MATHEMATICA_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.wolfram.com/mathematica/
  Mathematica - Technical Computing Software
  prefix: /opt/shared/mathematica
  source file: /opt/shared/valet/2.1/etc/mathematica.vpkg_yaml
  default version: mathematica/13.3.0
  versions: {
    [mathematica/12.3.0] {
      contexts: all
      dependencies: {
        gcc/11.2
      }
      version 12.3.0 for Linux
      prefix: /opt/shared/mathematica/12.3.0
    }
    [mathematica/12.3.0:cuda] {
      contexts: all
      dependencies: {
        gcc/11.2
        cuda/11.6.2
      }
      version 12.3.0 for Linux w/ default CUDA libraries
      prefix: /opt/shared/mathematica/12.3.0
    }
    [mathematica/13.0.0] {
      contexts: all
      dependencies: {
        gcc/11.2
      }
      version 13.0.0 for Linux
      prefix: /opt/shared/mathematica/13.0.0
    }
    [mathematica/13.0.0:cuda] {
      contexts: all
      dependencies: {
        gcc/11.2
        cuda/11.6.2
      }
      version 13.0.0 for Linux w/ default CUDA libraries
      prefix: /opt/shared/mathematica/13.0.0
    }
    [mathematica/13.1.0] {
      contexts: all
      dependencies: {
        gcc/12.1
      }
      version 13.1.0 for Linux
      prefix: /opt/shared/mathematica/13.1.0
    }
    [mathematica/13.1.0:cuda] {
      contexts: all
      dependencies: {
        gcc/12.1
        cuda/11.6.2
      }
      version 13.1.0 for Linux w/ default CUDA libraries
      prefix: /opt/shared/mathematica/13.1.0
    }
    [mathematica/13.3.0] {
      contexts: all
      dependencies: {
        gcc/12.1
      }
      version 13.3.0 for Linux
      prefix: /opt/shared/mathematica/13.3.0
    }
    [mathematica/13.3.0:cuda] {
      contexts: all
      dependencies: {
        gcc/12.1
        cuda/11.6.2
      }
      version 13.3.0 for Linux w/ default CUDA libraries
      prefix: /opt/shared/mathematica/13.3.0
    }
  }
}

[matlab] {
  contexts: all
  actions: {
    MATLABROOT=${VALET_PATH_PREFIX} (contexts: all)
    MATLAB_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.mathworks.com/products/matlab/
  Matlab - The Language Of Technical Computing
  prefix: /opt/shared/matlab
  source file: /opt/shared/valet/2.1/etc/matlab.vpkg_yaml
  default version: matlab/2020b
  versions: {
    [matlab/2013a] {
      contexts: all
      Version R2013a
      prefix: /opt/shared/matlab/2013a
      standard paths: {
        bin: /opt/shared/matlab/2013a/bin
      }
    }
    [matlab/2013a:container] {
      contexts: all
      flags: no-standard-paths
      actions: {
        PATH+=[:]${VALET_PATH_PREFIX}/container/bin (contexts: all)
        SINGULARITY_IMAGE=${VALET_PATH_PREFIX}/container/matlab.sif (contexts: all)
      }
      dependencies: {
        singularity/3.7.1
      }
      Version R2013a (run in a CentOS 6.10 container)
      prefix: /opt/shared/matlab/2013a
      standard paths: {
        bin: /opt/shared/matlab/2013a/bin
      }
    }
    [matlab/2018b] {
      contexts: all
      Version R2018b
      prefix: /opt/shared/matlab/2018b
      standard paths: {
        bin: /opt/shared/matlab/2018b/bin
      }
    }
    [matlab/2019b] {
      contexts: all
      Version R2019b
      prefix: /opt/shared/matlab/2019b
      standard paths: {
        bin: /opt/shared/matlab/2019b/bin
      }
    }
    [matlab/2020b] {
      contexts: all
      Version R2020b
      prefix: /opt/shared/matlab/2020b
      standard paths: {
        bin: /opt/shared/matlab/2020b/bin
      }
    }
    [matlab/2021a] {
      contexts: all
      Version R2021a
      prefix: /opt/shared/matlab/2021a
      standard paths: {
        bin: /opt/shared/matlab/2021a/bin
      }
    }
    [matlab/2021a:container] {
      contexts: all
      flags: no-standard-paths
      actions: {
        PATH+=[:]${VALET_PATH_PREFIX}/container/bin (contexts: all)
        SINGULARITY_IMAGE=${VALET_PATH_PREFIX}/container/matlab.sif (contexts: all)
      }
      dependencies: {
        singularity/3.7.1
      }
      Version R2021a (run in a CentOS 7.9 container)
      prefix: /opt/shared/matlab/2021a
      standard paths: {
        bin: /opt/shared/matlab/2021a/bin
      }
    }
    [matlab/2023b] {
      contexts: all
      Version R2023b
      prefix: /opt/shared/matlab/2023b
      standard paths: {
        bin: /opt/shared/matlab/2023b/bin
      }
    }
    [matlab/2023b:container] {
      contexts: all
      flags: no-standard-paths
      actions: {
        PATH+=[:]${VALET_PATH_PREFIX}/container/bin (contexts: all)
        SINGULARITY_IMAGE=${VALET_PATH_PREFIX}/container/matlab.sif (contexts: all)
      }
      dependencies: {
        singularity/3.11.1
      }
      Version R2023b (run in a CentOS 7.9 container)
      prefix: /opt/shared/matlab/2023b
      standard paths: {
        bin: /opt/shared/matlab/2023b/bin
      }
    }
  }
}

[mcr] {
  contexts: all
  actions: {
    MCR_ROOT=${VALET_PATH_PREFIX} (contexts: all)
    MCR_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.mathworks.com/help/toolbox/compiler/
  Matlab Compiler Runtime
  prefix: /opt/shared/matlab
  source file: /opt/shared/valet/2.1/etc/mcr.vpkg_yaml
  default version: mcr/2020b
  versions: {
    [mcr/2013a] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 8.1 (r2013a)
      prefix: /opt/shared/matlab/2013a
      standard paths: {
        bin: /opt/shared/matlab/2013a/bin
      }
    }
    [mcr/2013a:nojvm] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 8.1 (r2013a, no Java VM)
      prefix: /opt/shared/matlab/2013a-nojvm
    }
    [mcr/2018b] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 9.5 (r2018b)
      prefix: /opt/shared/matlab/2018b
      standard paths: {
        bin: /opt/shared/matlab/2018b/bin
      }
    }
    [mcr/2018b:nojvm] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 9.5 (r2018b, no Java VM)
      prefix: /opt/shared/matlab/2018b
      standard paths: {
        bin: /opt/shared/matlab/2018b/bin
      }
    }
    [mcr/2019b] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 9.7 (r2019b)
      prefix: /opt/shared/matlab/2019b
      standard paths: {
        bin: /opt/shared/matlab/2019b/bin
      }
    }
    [mcr/2019b:nojvm] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 9.7 (r2019b, no Java VM)
      prefix: /opt/shared/matlab/2019b
      standard paths: {
        bin: /opt/shared/matlab/2019b/bin
      }
    }
    [mcr/2020b] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 9.9 (r2020b)
      prefix: /opt/shared/matlab/2020b
      standard paths: {
        bin: /opt/shared/matlab/2020b/bin
      }
    }
    [mcr/2020b:nojvm] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 9.9 (r2020b, no Java VM)
      prefix: /opt/shared/matlab/2020b
      standard paths: {
        bin: /opt/shared/matlab/2020b/bin
      }
    }
    [mcr/2021a] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 9.11 (r2021a)
      prefix: /opt/shared/matlab/2021a
      standard paths: {
        bin: /opt/shared/matlab/2021a/bin
      }
    }
    [mcr/2021a:nojvm] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 9.11 (r2021a, no Java VM)
      prefix: /opt/shared/matlab/2021a
      standard paths: {
        bin: /opt/shared/matlab/2021a/bin
      }
    }
    [mcr/2023b] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/server (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/java/jre/glnxa64/jre/lib/amd64/jli (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 23.2 (r2023b)
      prefix: /opt/shared/matlab/2023b
      standard paths: {
        bin: /opt/shared/matlab/2023b/bin
      }
    }
    [mcr/2023b:nojvm] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/sys/os/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/bin/glnxa64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/runtime/glnxa64 (contexts: development)
      }
      Matlab Compiler Runtime 23.2 (r2023b, no Java VM)
      prefix: /opt/shared/matlab/2023b
      standard paths: {
        bin: /opt/shared/matlab/2023b/bin
      }
    }
  }
}

[meson] {
  contexts: all
  actions: {
    MESON_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://github.com/mesonbuild/meson
  the best possible next-generation build system (according to Meson)
  prefix: /opt/shared/meson
  source file: /opt/shared/valet/2.1/etc/meson.vpkg_yaml
  default version: meson/1.0.1
  versions: {
    [meson/1.0.1] {
      contexts: all
      embedded Python 3.7.16 installation, ninja 1.11.1
      prefix: /opt/shared/meson/1.0.1
      standard paths: {
        bin: /opt/shared/meson/1.0.1/bin
      }
    }
  }
}

[mpfr] {
  contexts: all
  actions: {
    MPFR_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.mpfr.org/
  The GNU MPFR Library
  prefix: /opt/shared/mpfr
  source file: /opt/shared/valet/2.1/etc/mpfr.vpkg_yaml
  default version: mpfr/4.1.0
  versions: {
    [mpfr/4.1.0] {
      contexts: all
      MPFR compiled with system compilers
      prefix: /opt/shared/mpfr/4.1.0
      standard paths: {
        lib: /opt/shared/mpfr/4.1.0/lib
        info: /opt/shared/mpfr/4.1.0/share/info
        include: /opt/shared/mpfr/4.1.0/include
        pkgConfig: /opt/shared/mpfr/4.1.0/lib/pkgconfig
      }
    }
    [mpfr/4.1.0:gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      MPFR compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/mpfr/4.1.0-gcc-10.1.0
      standard paths: {
        lib: /opt/shared/mpfr/4.1.0-gcc-10.1.0/lib
        info: /opt/shared/mpfr/4.1.0-gcc-10.1.0/share/info
        include: /opt/shared/mpfr/4.1.0-gcc-10.1.0/include
        pkgConfig: /opt/shared/mpfr/4.1.0-gcc-10.1.0/lib/pkgconfig
      }
    }
    [mpfr/4.1.0:intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      MPFR compiled with Intel compilers
      prefix: /opt/shared/mpfr/4.1.0-intel-2020
      standard paths: {
        lib: /opt/shared/mpfr/4.1.0-intel-2020/lib
        info: /opt/shared/mpfr/4.1.0-intel-2020/share/info
        include: /opt/shared/mpfr/4.1.0-intel-2020/include
        pkgConfig: /opt/shared/mpfr/4.1.0-intel-2020/lib/pkgconfig
      }
    }
    [mpfr/4.1.0:pgi-20] {
      contexts: all
      dependencies: {
        pgi/==20
      }
      MPFR compiled with PGI compilers
      prefix: /opt/shared/mpfr/4.1.0-pgi-20
      standard paths: {
        lib: /opt/shared/mpfr/4.1.0-pgi-20/lib
        info: /opt/shared/mpfr/4.1.0-pgi-20/share/info
        include: /opt/shared/mpfr/4.1.0-pgi-20/include
        pkgConfig: /opt/shared/mpfr/4.1.0-pgi-20/lib/pkgconfig
      }
    }
  }
}

[namd] {
  contexts: all
  actions: {
    NAMD_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.ks.uiuc.edu/Research/namd/
  Scalable Molecular Dynamics
  prefix: /opt/shared/namd
  source file: /opt/shared/valet/2.1/etc/namd.vpkg_yaml
  default version: namd/2.14
  versions: {
    [namd/2.14] {
      contexts: all
      dependencies: {
        charm/6.8.2:intel-2020
      }
      compiled with CHARM++ 6.8.2, Intel compilers
      prefix: /opt/shared/namd/2.14
      standard paths: {
        bin: /opt/shared/namd/2.14/bin
      }
    }
    [namd/2.14:nvidia] {
      contexts: all
      dependencies: {
        gcc/10.1
        charm/6.10.2:intel,ucx
        cuda/11.6.2
      }
      compiled with CHARM++ 6.10.2, Intel compilers, CUDA 11.6
      prefix: /opt/shared/namd/2.14-nvidia
      standard paths: {
        bin: /opt/shared/namd/2.14-nvidia/bin
      }
    }
  }
}

[netcdf] {
  contexts: all
  actions: {
    NETCDF_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.unidata.ucar.edu/software/netcdf/
  NetCDF: C Libs for self-describing, machine-independent formats
  prefix: /opt/shared/netcdf
  source file: /opt/shared/valet/2.1/etc/netcdf.vpkg_yaml
  default version: netcdf/4.7.4
  versions: {
    [netcdf/4.7.4] {
      contexts: all
      dependencies: {
        hdf4/4.2.13
        hdf5/1.10.7
      }
      compiled with system compilers
      prefix: /opt/shared/netcdf/4.7.4
      standard paths: {
        bin: /opt/shared/netcdf/4.7.4/bin
        lib: /opt/shared/netcdf/4.7.4/lib
        man: /opt/shared/netcdf/4.7.4/share/man
        include: /opt/shared/netcdf/4.7.4/include
        pkgConfig: /opt/shared/netcdf/4.7.4/lib/pkgconfig
      }
    }
    [netcdf/4.7.4:intel-2020] {
      contexts: all
      dependencies: {
        hdf4/4.2.13
        hdf5/1.10.7:intel-2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/netcdf/4.7.4-intel-2020
      standard paths: {
        bin: /opt/shared/netcdf/4.7.4-intel-2020/bin
        lib: /opt/shared/netcdf/4.7.4-intel-2020/lib
        man: /opt/shared/netcdf/4.7.4-intel-2020/share/man
        include: /opt/shared/netcdf/4.7.4-intel-2020/include
        pkgConfig: /opt/shared/netcdf/4.7.4-intel-2020/lib/pkgconfig
      }
    }
    [netcdf/4.7.4:openmpi] {
      contexts: all
      dependencies: {
        hdf4/4.2.13
        hdf5/1.10.7:openmpi
      }
      MPI-IO + system compilers
      prefix: /opt/shared/netcdf/4.7.4-openmpi
      standard paths: {
        bin: /opt/shared/netcdf/4.7.4-openmpi/bin
        lib: /opt/shared/netcdf/4.7.4-openmpi/lib
        man: /opt/shared/netcdf/4.7.4-openmpi/share/man
        include: /opt/shared/netcdf/4.7.4-openmpi/include
        pkgConfig: /opt/shared/netcdf/4.7.4-openmpi/lib/pkgconfig
      }
    }
    [netcdf/4.7.4:openmpi,intel-2020] {
      contexts: all
      dependencies: {
        hdf4/4.2.13
        hdf5/1.10.7:openmpi,intel-2020
      }
      MPI-IO + Intel 2020 compilers
      prefix: /opt/shared/netcdf/4.7.4-intel-2020-openmpi
      standard paths: {
        bin: /opt/shared/netcdf/4.7.4-intel-2020-openmpi/bin
        lib: /opt/shared/netcdf/4.7.4-intel-2020-openmpi/lib
        man: /opt/shared/netcdf/4.7.4-intel-2020-openmpi/share/man
        include: /opt/shared/netcdf/4.7.4-intel-2020-openmpi/include
        pkgConfig: /opt/shared/netcdf/4.7.4-intel-2020-openmpi/lib/pkgconfig
      }
    }
    [netcdf/4.9.1] {
      contexts: all
      dependencies: {
        hdf4/4.2.16
        hdf5/1.10.9
      }
      compiled with system compilers
      prefix: /opt/shared/netcdf/4.9.1
      standard paths: {
        bin: /opt/shared/netcdf/4.9.1/bin
        lib: /opt/shared/netcdf/4.9.1/lib64
        man: /opt/shared/netcdf/4.9.1/share/man
        include: /opt/shared/netcdf/4.9.1/include
      }
    }
    [netcdf/4.9.1:gcc-12.2] {
      contexts: all
      dependencies: {
        hdf4/4.2.16
        hdf5/1.10.9:gcc-12.2
      }
      compiled with GCC 12.2 compilers
      prefix: /opt/shared/netcdf/4.9.1-gcc-12.2
      standard paths: {
        bin: /opt/shared/netcdf/4.9.1-gcc-12.2/bin
        lib: /opt/shared/netcdf/4.9.1-gcc-12.2/lib64
        man: /opt/shared/netcdf/4.9.1-gcc-12.2/share/man
        include: /opt/shared/netcdf/4.9.1-gcc-12.2/include
      }
    }
    [netcdf/4.9.1:intel-2020] {
      contexts: all
      dependencies: {
        hdf4/4.2.16
        hdf5/1.10.9:intel-2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/netcdf/4.9.1-intel-2020
      standard paths: {
        bin: /opt/shared/netcdf/4.9.1-intel-2020/bin
        lib: /opt/shared/netcdf/4.9.1-intel-2020/lib, /opt/shared/netcdf/4.9.1-intel-2020/lib64
        man: /opt/shared/netcdf/4.9.1-intel-2020/share/man
        include: /opt/shared/netcdf/4.9.1-intel-2020/include
      }
    }
    [netcdf/4.9.1:intel-oneapi-2022] {
      contexts: all
      dependencies: {
        hdf4/4.2.16
        hdf5/1.10.9:intel-oneapi-2022
      }
      compiled with Intel oneAPI 2022 compilers
      prefix: /opt/shared/netcdf/4.9.1-intel-oneapi-2022
      standard paths: {
        bin: /opt/shared/netcdf/4.9.1-intel-oneapi-2022/bin
        lib: /opt/shared/netcdf/4.9.1-intel-oneapi-2022/lib64
        man: /opt/shared/netcdf/4.9.1-intel-oneapi-2022/share/man
        include: /opt/shared/netcdf/4.9.1-intel-oneapi-2022/include
      }
    }
    [netcdf/4.9.1:intel-oneapi-2022,openmpi] {
      contexts: all
      dependencies: {
        hdf4/4.2.16
        hdf5/1.10.9:intel-oneapi-2022,openmpi
        pnetcdf/1.12.3:intel-oneapi-2022,openmpi
      }
      MPI-IO + Intel oneAPI 2022 compilers
      prefix: /opt/shared/netcdf/4.9.1-intel-oneapi-2022-openmpi
      standard paths: {
        bin: /opt/shared/netcdf/4.9.1-intel-oneapi-2022-openmpi/bin
        lib: /opt/shared/netcdf/4.9.1-intel-oneapi-2022-openmpi/lib64
        man: /opt/shared/netcdf/4.9.1-intel-oneapi-2022-openmpi/share/man
        include: /opt/shared/netcdf/4.9.1-intel-oneapi-2022-openmpi/include
      }
    }
    [netcdf/4.9.1:intel-oneapi-2023] {
      contexts: all
      dependencies: {
        hdf4/4.2.16
        hdf5/1.10.9:intel-oneapi-2022
      }
      compiled with Intel oneAPI 2023 compilers
      prefix: /opt/shared/netcdf/4.9.1-intel-oneapi-2023
      standard paths: {
        bin: /opt/shared/netcdf/4.9.1-intel-oneapi-2023/bin
        lib: /opt/shared/netcdf/4.9.1-intel-oneapi-2023/lib64
        man: /opt/shared/netcdf/4.9.1-intel-oneapi-2023/share/man
        include: /opt/shared/netcdf/4.9.1-intel-oneapi-2023/include
      }
    }
    [netcdf/4.9.1:intel-oneapi-2023,openmpi] {
      contexts: all
      dependencies: {
        hdf4/4.2.16
        hdf5/1.10.9:intel-oneapi-2023,openmpi
        pnetcdf/1.12.3:intel-oneapi-2023,openmpi
      }
      MPI-IO + Intel oneAPI 2023 compilers
      prefix: /opt/shared/netcdf/4.9.1-intel-oneapi-2023-openmpi
      standard paths: {
        bin: /opt/shared/netcdf/4.9.1-intel-oneapi-2023-openmpi/bin
        lib: /opt/shared/netcdf/4.9.1-intel-oneapi-2023-openmpi/lib64
        man: /opt/shared/netcdf/4.9.1-intel-oneapi-2023-openmpi/share/man
        include: /opt/shared/netcdf/4.9.1-intel-oneapi-2023-openmpi/include
      }
    }
    [netcdf/4.9.1:openmpi] {
      contexts: all
      dependencies: {
        hdf4/4.2.16
        hdf5/1.10.9:openmpi
        pnetcdf/1.12.3:openmpi
      }
      MPI-IO + system compilers
      prefix: /opt/shared/netcdf/4.9.1-openmpi
      standard paths: {
        bin: /opt/shared/netcdf/4.9.1-openmpi/bin
        lib: /opt/shared/netcdf/4.9.1-openmpi/lib64
        man: /opt/shared/netcdf/4.9.1-openmpi/share/man
        include: /opt/shared/netcdf/4.9.1-openmpi/include
      }
    }
    [netcdf/4.9.1:openmpi,gcc-12.2] {
      contexts: all
      dependencies: {
        hdf4/4.2.16
        hdf5/1.10.9:openmpi,gcc-12.2
        pnetcdf/1.12.3:openmpi,gcc-12.2
      }
      MPI-IO + GCC 12.2 compilers
      prefix: /opt/shared/netcdf/4.9.1-gcc-12.2-openmpi
      standard paths: {
        bin: /opt/shared/netcdf/4.9.1-gcc-12.2-openmpi/bin
        lib: /opt/shared/netcdf/4.9.1-gcc-12.2-openmpi/lib64
        man: /opt/shared/netcdf/4.9.1-gcc-12.2-openmpi/share/man
        include: /opt/shared/netcdf/4.9.1-gcc-12.2-openmpi/include
      }
    }
    [netcdf/4.9.1:openmpi,intel-2020] {
      contexts: all
      dependencies: {
        hdf4/4.2.16
        hdf5/1.10.9:openmpi,intel-2020
        pnetcdf/1.12.3:openmpi,intel-2020
      }
      MPI-IO + Intel 2020 compilers
      prefix: /opt/shared/netcdf/4.9.1-intel-2020-openmpi
      standard paths: {
        bin: /opt/shared/netcdf/4.9.1-intel-2020-openmpi/bin
        lib: /opt/shared/netcdf/4.9.1-intel-2020-openmpi/lib64
        man: /opt/shared/netcdf/4.9.1-intel-2020-openmpi/share/man
        include: /opt/shared/netcdf/4.9.1-intel-2020-openmpi/include
      }
    }
  }
}

[netcdf-cxx4] {
  contexts: all
  actions: {
    NETCDF_DASH_CXX4_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.unidata.ucar.edu/software/netcdf/
  NetCDF: C++ Libs for self-describing, machine-independent formats
  prefix: /opt/shared/netcdf-cxx4
  source file: /opt/shared/valet/2.1/etc/netcdf-cxx4.vpkg_yaml
  default version: netcdf-cxx4/4.3.1
  versions: {
    [netcdf-cxx4/4.3.1] {
      contexts: all
      dependencies: {
        netcdf/4.9.1
      }
      compiled with system compilers
      prefix: /opt/shared/netcdf-cxx4/4.3.1
      standard paths: {
        bin: /opt/shared/netcdf-cxx4/4.3.1/bin
        lib: /opt/shared/netcdf-cxx4/4.3.1/lib, /opt/shared/netcdf-cxx4/4.3.1/lib64
        include: /opt/shared/netcdf-cxx4/4.3.1/include
        pkgConfig: /opt/shared/netcdf-cxx4/4.3.1/lib/pkgconfig
      }
    }
    [netcdf-cxx4/4.3.1:gcc-12.1.0] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:gcc-12.1.0
      }
      compiled with GCC 12 compilers
      prefix: /opt/shared/netcdf-cxx4/4.3.1-gcc-12.1.0
    }
    [netcdf-cxx4/4.3.1:intel-2020] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:intel-2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/netcdf-cxx4/4.3.1-intel-2020
      standard paths: {
        bin: /opt/shared/netcdf-cxx4/4.3.1-intel-2020/bin
        lib: /opt/shared/netcdf-cxx4/4.3.1-intel-2020/lib, /opt/shared/netcdf-cxx4/4.3.1-intel-2020/lib64
        include: /opt/shared/netcdf-cxx4/4.3.1-intel-2020/include
        pkgConfig: /opt/shared/netcdf-cxx4/4.3.1-intel-2020/lib/pkgconfig
      }
    }
    [netcdf-cxx4/4.3.1:intel-oneapi-2022] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:intel-oneapi-2022
      }
      compiled with Intel oneAPI 2022 compilers
      prefix: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2022
      standard paths: {
        bin: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2022/bin
        lib: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2022/lib64
        include: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2022/include
      }
    }
    [netcdf-cxx4/4.3.1:intel-oneapi-2022,openmpi] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:intel-oneapi-2022,openmpi
      }
      compiled with Open MPI and Intel oneAPI 2022 compilers
      prefix: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2022-openmpi
      standard paths: {
        bin: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2022-openmpi/bin
        lib: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2022-openmpi/lib64
        include: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2022-openmpi/include
      }
    }
    [netcdf-cxx4/4.3.1:intel-oneapi-2023] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:intel-oneapi-2023
      }
      compiled with Intel oneAPI 2023 compilers
      prefix: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2023
      standard paths: {
        bin: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2023/bin
        lib: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2023/lib64
        include: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2023/include
      }
    }
    [netcdf-cxx4/4.3.1:intel-oneapi-2023,openmpi] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:intel-oneapi-2023,openmpi
      }
      compiled with Open MPI and Intel oneAPI 2023 compilers
      prefix: /opt/shared/netcdf-cxx4/4.3.1-intel-oneapi-2023-openmpi
    }
    [netcdf-cxx4/4.3.1:openmpi] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:openmpi
      }
      compiled with Open MPI and system compilers
      prefix: /opt/shared/netcdf-cxx4/4.3.1-openmpi
      standard paths: {
        bin: /opt/shared/netcdf-cxx4/4.3.1-openmpi/bin
        lib: /opt/shared/netcdf-cxx4/4.3.1-openmpi/lib64
        include: /opt/shared/netcdf-cxx4/4.3.1-openmpi/include
      }
    }
    [netcdf-cxx4/4.3.1:openmpi,gcc-12.1.0] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:openmpi,gcc-12.1.0
      }
      compiled with Open MPI and GCC 12 compilers
      prefix: /opt/shared/netcdf-cxx4/4.3.1-gcc-12.1.0-openmpi
    }
    [netcdf-cxx4/4.3.1:openmpi,intel-2020] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:openmpi,intel-2020
      }
      compiled with Open MPI and Intel 2020 compilers
      prefix: /opt/shared/netcdf-cxx4/4.3.1-intel-2020-openmpi
      standard paths: {
        bin: /opt/shared/netcdf-cxx4/4.3.1-intel-2020-openmpi/bin
        lib: /opt/shared/netcdf-cxx4/4.3.1-intel-2020-openmpi/lib64
        include: /opt/shared/netcdf-cxx4/4.3.1-intel-2020-openmpi/include
      }
    }
  }
}

[netcdf-fortran] {
  contexts: all
  actions: {
    NETCDF_DASH_FORTRAN_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.unidata.ucar.edu/software/netcdf/
  NetCDF: Fortran Libs for self-describing, machine-independent formats
  prefix: /opt/shared/netcdf-fortran
  source file: /opt/shared/valet/2.1/etc/netcdf-fortran.vpkg_yaml
  default version: netcdf-fortran/4.5.3
  versions: {
    [netcdf-fortran/4.5.3] {
      contexts: all
      dependencies: {
        netcdf/4.7.4
      }
      compiled with system compilers
      prefix: /opt/shared/netcdf-fortran/4.5.3
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.3/bin
        lib: /opt/shared/netcdf-fortran/4.5.3/lib
        man: /opt/shared/netcdf-fortran/4.5.3/share/man
        include: /opt/shared/netcdf-fortran/4.5.3/include
        pkgConfig: /opt/shared/netcdf-fortran/4.5.3/lib/pkgconfig
      }
    }
    [netcdf-fortran/4.5.3:intel-2020] {
      contexts: all
      dependencies: {
        netcdf/4.7.4:intel-2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/netcdf-fortran/4.5.3-intel-2020
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.3-intel-2020/bin
        lib: /opt/shared/netcdf-fortran/4.5.3-intel-2020/lib
        man: /opt/shared/netcdf-fortran/4.5.3-intel-2020/share/man
        include: /opt/shared/netcdf-fortran/4.5.3-intel-2020/include
        pkgConfig: /opt/shared/netcdf-fortran/4.5.3-intel-2020/lib/pkgconfig
      }
    }
    [netcdf-fortran/4.5.4] {
      contexts: all
      dependencies: {
        netcdf/4.9.1
      }
      compiled with system compilers
      prefix: /opt/shared/netcdf-fortran/4.5.4
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.4/bin
        lib: /opt/shared/netcdf-fortran/4.5.4/lib, /opt/shared/netcdf-fortran/4.5.4/lib64
        man: /opt/shared/netcdf-fortran/4.5.4/share/man
        include: /opt/shared/netcdf-fortran/4.5.4/include
      }
    }
    [netcdf-fortran/4.5.4:gcc-12.2] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:gcc-12.2
      }
      compiled with GCC 12.2 compilers
      prefix: /opt/shared/netcdf-fortran/4.5.4-gcc-12.2
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.4-gcc-12.2/bin
        lib: /opt/shared/netcdf-fortran/4.5.4-gcc-12.2/lib, /opt/shared/netcdf-fortran/4.5.4-gcc-12.2/lib64
        man: /opt/shared/netcdf-fortran/4.5.4-gcc-12.2/share/man
        include: /opt/shared/netcdf-fortran/4.5.4-gcc-12.2/include
      }
    }
    [netcdf-fortran/4.5.4:intel-2020] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:intel-2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/netcdf-fortran/4.5.4-intel-2020
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.4-intel-2020/bin
        lib: /opt/shared/netcdf-fortran/4.5.4-intel-2020/lib, /opt/shared/netcdf-fortran/4.5.4-intel-2020/lib64
        man: /opt/shared/netcdf-fortran/4.5.4-intel-2020/share/man
        include: /opt/shared/netcdf-fortran/4.5.4-intel-2020/include
      }
    }
    [netcdf-fortran/4.5.4:intel-oneapi-2022] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:intel-oneapi-2022
      }
      compiled with Intel oneAPI 2022 compilers
      prefix: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022/bin
        lib: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022/lib, /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022/lib64
        man: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022/share/man
        include: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022/include
      }
    }
    [netcdf-fortran/4.5.4:intel-oneapi-2022,openmpi] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:intel-oneapi-2022,openmpi
      }
      compiled with Open MPI and Intel oneAPI 2022 compilers
      prefix: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022-openmpi
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022-openmpi/bin
        lib: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022-openmpi/lib, /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022-openmpi/lib64
        man: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022-openmpi/share/man
        include: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2022-openmpi/include
      }
    }
    [netcdf-fortran/4.5.4:intel-oneapi-2023] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:intel-oneapi-2023
      }
      compiled with Intel oneAPI 2023 compilers
      prefix: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023/bin
        lib: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023/lib, /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023/lib64
        man: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023/share/man
        include: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023/include
      }
    }
    [netcdf-fortran/4.5.4:intel-oneapi-2023,openmpi] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:intel-oneapi-2023,openmpi
      }
      compiled with Open MPI and Intel oneAPI 2023 compilers
      prefix: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023-openmpi
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023-openmpi/bin
        lib: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023-openmpi/lib, /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023-openmpi/lib64
        man: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023-openmpi/share/man
        include: /opt/shared/netcdf-fortran/4.5.4-intel-oneapi-2023-openmpi/include
      }
    }
    [netcdf-fortran/4.5.4:openmpi] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:openmpi
      }
      compiled with Open MPI and system compilers
      prefix: /opt/shared/netcdf-fortran/4.5.4-openmpi
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.4-openmpi/bin
        lib: /opt/shared/netcdf-fortran/4.5.4-openmpi/lib, /opt/shared/netcdf-fortran/4.5.4-openmpi/lib64
        man: /opt/shared/netcdf-fortran/4.5.4-openmpi/share/man
        include: /opt/shared/netcdf-fortran/4.5.4-openmpi/include
      }
    }
    [netcdf-fortran/4.5.4:openmpi,gcc-12.2] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:openmpi,gcc-12.2
      }
      compiled with Open MPI and GCC 12.2 compilers
      prefix: /opt/shared/netcdf-fortran/4.5.4-gcc-12.2-openmpi
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.4-gcc-12.2-openmpi/bin
        lib: /opt/shared/netcdf-fortran/4.5.4-gcc-12.2-openmpi/lib, /opt/shared/netcdf-fortran/4.5.4-gcc-12.2-openmpi/lib64
        man: /opt/shared/netcdf-fortran/4.5.4-gcc-12.2-openmpi/share/man
        include: /opt/shared/netcdf-fortran/4.5.4-gcc-12.2-openmpi/include
      }
    }
    [netcdf-fortran/4.5.4:openmpi,intel-2020] {
      contexts: all
      dependencies: {
        netcdf/4.9.1:openmpi,intel-2020
      }
      compiled with Open MPI and Intel 2020 compilers
      prefix: /opt/shared/netcdf-fortran/4.5.4-intel-2020-openmpi
      standard paths: {
        bin: /opt/shared/netcdf-fortran/4.5.4-intel-2020-openmpi/bin
        lib: /opt/shared/netcdf-fortran/4.5.4-intel-2020-openmpi/lib, /opt/shared/netcdf-fortran/4.5.4-intel-2020-openmpi/lib64
        man: /opt/shared/netcdf-fortran/4.5.4-intel-2020-openmpi/share/man
        include: /opt/shared/netcdf-fortran/4.5.4-intel-2020-openmpi/include
      }
    }
  }
}

[ninja] {
  contexts: all
  actions: {
    NINJA_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://ninja-build.org
  a small build system with a focus on speed
  prefix: /opt/shared/ninja
  source file: /opt/shared/valet/2.1/etc/ninja.vpkg_yaml
  default version: ninja/1
  versions: {
    [ninja/1] {
      contexts: all
      alias-to: ninja/1.11
    }
    [ninja/1.11] {
      contexts: all
      alias-to: ninja/1.11.1
    }
    [ninja/1.11.1] {
      contexts: all
      build with system compilers
      prefix: /opt/shared/ninja/1.11.1
      standard paths: {
        bin: /opt/shared/ninja/1.11.1/bin
        man: /opt/shared/ninja/1.11.1/share/man
      }
    }
  }
}

[ntl] {
  contexts: all
  actions: {
    NTL_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.shoup.net/ntl/
  Library for doing Number Theory
  prefix: /opt/shared/ntl
  source file: /opt/shared/valet/2.1/etc/ntl.vpkg_yaml
  default version: ntl/11.4.3
  versions: {
    [ntl/11.4.3] {
      contexts: all
      NTL compiled with system compilers
      prefix: /opt/shared/ntl/11.4.3
      standard paths: {
        lib: /opt/shared/ntl/11.4.3/lib
        include: /opt/shared/ntl/11.4.3/include
      }
    }
  }
}

[nvidia-hpc-sdk] {
  contexts: all
  actions: {
    NVHPC=${VALET_PATH_PREFIX} (contexts: all)
    NVHPC_COMPILERS_PREFIX=${VALET_PATH_PREFIX}/compilers (contexts: all)
    NVHPC_CUDA_PREFIX=${VALET_PATH_PREFIX}/cuda (contexts: all)
    NVHPC_MATH_LIBS_PREFIX=${VALET_PATH_PREFIX}/math_libs (contexts: all)
    NVHPC_COMM_LIBS_PREFIX=${VALET_PATH_PREFIX}/comm_libs (contexts: all)
    NVIDIA_DASH_HPC_DASH_SDK_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://developer.nvidia.com/hpc-sdk
  A Comprehensive Suite of Compilers, Libraries and Tools for HPC
  prefix: /opt/shared/nvidia-hpc-sdk
  source file: /opt/shared/valet/2.1/etc/nvidia-hpc-sdk.vpkg_yaml
  default version: nvidia-hpc-sdk/2022.221
  versions: {
    [nvidia-hpc-sdk/2021.219] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/21.9 (contexts: all)
        OPAL_PREFIX=${VALET_PATH_PREFIX}/comm_libs/mpi (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        MANPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/11.2
      }
      release 2021.219 (21.9) for Linux, bundled compilers and Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2021.219
    }
    [nvidia-hpc-sdk/2021.219:byoc] {
      contexts: all
      actions: {
        CPATH+=[:]${VALET_PATH_PREFIX}/cuda/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/cuda/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
      }
      release 2021.219 (21.9) for Linux, byoc (bring your own compiler)
      prefix: /opt/shared/nvidia-hpc-sdk/2021.219
    }
    [nvidia-hpc-sdk/2021.219:nompi] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/21.9 (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/11.2
      }
      release 2021.219 (21.9) for Linux, bundled compilers without Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2021.219
    }
    [nvidia-hpc-sdk/2022.221] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/22.1 (contexts: all)
        OPAL_PREFIX=${VALET_PATH_PREFIX}/comm_libs/mpi (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        MANPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/11.2
      }
      release 2022.221 (22.1) for Linux, bundled compilers and Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2022.221
    }
    [nvidia-hpc-sdk/2022.221:byoc] {
      contexts: all
      actions: {
        CPATH+=[:]${VALET_PATH_PREFIX}/cuda/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/cuda/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
      }
      release 2022.221 (22.1) for Linux, byoc (bring your own compiler)
      prefix: /opt/shared/nvidia-hpc-sdk/2022.221
    }
    [nvidia-hpc-sdk/2022.221:nompi] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/22.1 (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/11.2
      }
      release 2022.221 (22.1) for Linux, bundled compilers without Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2022.221
    }
    [nvidia-hpc-sdk/2022.225] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/22.5 (contexts: all)
        OPAL_PREFIX=${VALET_PATH_PREFIX}/comm_libs/mpi (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        MANPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/11.2
      }
      release 2022.225 (22.5) for Linux, bundled compilers and Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2022.225
    }
    [nvidia-hpc-sdk/2022.225:byoc] {
      contexts: all
      actions: {
        CPATH+=[:]${VALET_PATH_PREFIX}/cuda/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/cuda/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
      }
      release 2022.225 (22.5) for Linux, byoc (bring your own compiler)
      prefix: /opt/shared/nvidia-hpc-sdk/2022.225
    }
    [nvidia-hpc-sdk/2022.225:nompi] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/22.5 (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/11.2
      }
      release 2022.225 (22.5) for Linux, bundled compilers without Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2022.225
    }
    [nvidia-hpc-sdk/2022.2211] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/22.11 (contexts: all)
        OPAL_PREFIX=${VALET_PATH_PREFIX}/comm_libs/mpi (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        MANPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/12.2
      }
      release 2022.2211 (22.11) for Linux, bundled compilers and Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2022.2211
    }
    [nvidia-hpc-sdk/2022.2211:byoc] {
      contexts: all
      actions: {
        CPATH+=[:]${VALET_PATH_PREFIX}/cuda/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/cuda/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
      }
      release 2022.2211 (22.11) for Linux, byoc (bring your own compiler)
      prefix: /opt/shared/nvidia-hpc-sdk/2022.2211
    }
    [nvidia-hpc-sdk/2022.2211:nompi] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/22.11 (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/12.2
      }
      release 2022.2211 (22.11) for Linux, bundled compilers without Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2022.2211
    }
    [nvidia-hpc-sdk/2023.231] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/23.1 (contexts: all)
        OPAL_PREFIX=${VALET_PATH_PREFIX}/comm_libs/mpi (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        MANPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/12.2
      }
      release 2023.231 (23.1) for Linux, bundled compilers and Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2023.231
    }
    [nvidia-hpc-sdk/2023.231:byoc] {
      contexts: all
      actions: {
        CPATH+=[:]${VALET_PATH_PREFIX}/cuda/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/cuda/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
      }
      release 2023.231 (23.1) for Linux, byoc (bring your own compiler)
      prefix: /opt/shared/nvidia-hpc-sdk/2023.231
    }
    [nvidia-hpc-sdk/2023.231:nompi] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/23.1 (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/12.2
      }
      release 2023.231 (23.1) for Linux, bundled compilers without Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2023.231
    }
    [nvidia-hpc-sdk/2023.235] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/23.5 (contexts: all)
        OPAL_PREFIX=${VALET_PATH_PREFIX}/comm_libs/mpi (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        MANPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/12.2
      }
      release 2023.235 (23.5) for Linux, bundled compilers and Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2023.235
    }
    [nvidia-hpc-sdk/2023.235:byoc] {
      contexts: all
      actions: {
        CPATH+=[:]${VALET_PATH_PREFIX}/cuda/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/cuda/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
      }
      release 2023.235 (23.5) for Linux, byoc (bring your own compiler)
      prefix: /opt/shared/nvidia-hpc-sdk/2023.235
    }
    [nvidia-hpc-sdk/2023.235:nompi] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/23.5 (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/12.2
      }
      release 2023.235 (23.5) for Linux, bundled compilers without Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2023.235
    }
    [nvidia-hpc-sdk/2023.237] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/23.7 (contexts: all)
        OPAL_PREFIX=${VALET_PATH_PREFIX}/comm_libs/mpi (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/mpi/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        MANPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/mpi/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/12.2
      }
      release 2023.237 (23.7) for Linux, bundled compilers and Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2023.237
    }
    [nvidia-hpc-sdk/2023.237:byoc] {
      contexts: all
      actions: {
        CPATH+=[:]${VALET_PATH_PREFIX}/cuda/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/cuda/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
      }
      release 2023.237 (23.7) for Linux, byoc (bring your own compiler)
      prefix: /opt/shared/nvidia-hpc-sdk/2023.237
    }
    [nvidia-hpc-sdk/2023.237:nompi] {
      contexts: all
      actions: {
        NVHPC_ROOT=${VALET_PATH_PREFIX}/Linux_x86_64/23.7 (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/math_libs/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: all)
        CPATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/cuda/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/bin (contexts: all)
        PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/bin (contexts: all)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/cuda/extras/CUPTI/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/extras/qd/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/compilers/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/math_libs/lib64 (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nccl/lib (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/comm_libs/nvshmem/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/math_libs/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nccl/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/comm_libs/nvshmem/include (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/compilers/extras/qd/include/qd (contexts: development)
        MANPATH+=[:]${VALET_PATH_PREFIX}/compilers/man (contexts: all)
        CC=nvc (contexts: all)
        CXX=nvc++ (contexts: all)
        FC=nvfortran (contexts: all)
        F90=nvfortran (contexts: all)
        F77=nvfortran (contexts: all)
        CPP=cpp (contexts: all)
      }
      dependencies: {
        gcc/12.2
      }
      release 2023.237 (23.7) for Linux, bundled compilers without Open MPI
      prefix: /opt/shared/nvidia-hpc-sdk/2023.237
    }
  }
}

[openblas] {
  contexts: all
  actions: {
    OPENBLAS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.openblas.net/
  OpenBLAS is an optimized BLAS library based on GotoBLAS2
  prefix: /opt/shared/openblas
  source file: /opt/shared/valet/2.1/etc/openblas.vpkg_yaml
  default version: openblas/0.3.13
  versions: {
    [openblas/0.3.13] {
      contexts: all
      OpenBLAS compiled with system compilers
      prefix: /opt/shared/openblas/0.3.13
      standard paths: {
        bin: /opt/shared/openblas/0.3.13/bin
        lib: /opt/shared/openblas/0.3.13/lib
        include: /opt/shared/openblas/0.3.13/include
        pkgConfig: /opt/shared/openblas/0.3.13/lib/pkgconfig
      }
    }
    [openblas/0.3.23:nvidia-hpc-sdk-2022] {
      contexts: all
      dependencies: {
        nvidia-hpc-sdk/==2022
      }
      OpenBLAS compiled with NVIDIA HPC SDK
      prefix: /opt/shared/openblas/0.3.23-nvidia-hpc-sdk-2022
      standard paths: {
        bin: /opt/shared/openblas/0.3.23-nvidia-hpc-sdk-2022/bin
        lib: /opt/shared/openblas/0.3.23-nvidia-hpc-sdk-2022/lib
        include: /opt/shared/openblas/0.3.23-nvidia-hpc-sdk-2022/include
        pkgConfig: /opt/shared/openblas/0.3.23-nvidia-hpc-sdk-2022/lib/pkgconfig
      }
    }
    [openblas/0.3.23:nvidia-hpc-sdk-2023] {
      contexts: all
      dependencies: {
        nvidia-hpc-sdk/==2023
      }
      OpenBLAS compiled with NVIDIA HPC SDK
      prefix: /opt/shared/openblas/0.3.23-nvidia-hpc-sdk-2023
      standard paths: {
        bin: /opt/shared/openblas/0.3.23-nvidia-hpc-sdk-2023/bin
        lib: /opt/shared/openblas/0.3.23-nvidia-hpc-sdk-2023/lib
        include: /opt/shared/openblas/0.3.23-nvidia-hpc-sdk-2023/include
        pkgConfig: /opt/shared/openblas/0.3.23-nvidia-hpc-sdk-2023/lib/pkgconfig
      }
    }
  }
}

[opencv] {
  contexts: all
  actions: {
    OPENCV_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://opencv.org
  an open-source library that includes several hundreds of computer vision algorithms
  prefix: /opt/shared/opencv
  source file: /opt/shared/valet/2.1/etc/opencv.vpkg_yaml
  default version: opencv/4.7.0
  versions: {
    [opencv/4.7.0] {
      contexts: all
      attributes: {
        modules = ['calib3d', 'core', 'dnn', 'features2d', 'flann', 'gapi', 'highgui', 'imgcodecs', 'imgproc', 'ml', 'objdetect', 'photo', 'stitching', 'ts', 'video', 'videoio']
      }
      compiled with system compilers, baseline options
      prefix: /opt/shared/opencv/4.7.0
      standard paths: {
        bin: /opt/shared/opencv/4.7.0/bin
        lib: /opt/shared/opencv/4.7.0/lib64
        include: /opt/shared/opencv/4.7.0/include
      }
    }
    [opencv/4.7.0:intel-oneapi-2023] {
      contexts: all
      dependencies: {
        intel-oneapi/2023
      }
      attributes: {
        modules = ['calib3d', 'core', 'dnn', 'features2d', 'flann', 'gapi', 'highgui', 'imgcodecs', 'imgproc', 'ml', 'objdetect', 'photo', 'stitching', 'ts', 'video', 'videoio']
      }
      compiled with GCC 12, Intel MKL, baseline options
      prefix: /opt/shared/opencv/4.7.0-intel-oneapi-2023
      standard paths: {
        bin: /opt/shared/opencv/4.7.0-intel-oneapi-2023/bin
        lib: /opt/shared/opencv/4.7.0-intel-oneapi-2023/lib64
        include: /opt/shared/opencv/4.7.0-intel-oneapi-2023/include
      }
    }
  }
}

[openmpi] {
  contexts: all
  flags: no-development-env
  actions: {
    MPICC=mpicc (contexts: development)
    MPICXX=mpic++ (contexts: development)
    MPIFC=mpifort (contexts: development)
    MPIF77=mpif77 (contexts: development)
    MPIF90=mpif90 (contexts: development)
    PKG_CONFIG_PATH+=[:]${VALET_PATH_PREFIX}/lib/pkgconfig (contexts: all)
    OPENMPI_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.open-mpi.org/
  Open MPI: Message-Passing Interface
  prefix: /opt/shared/openmpi
  source file: /opt/shared/valet/2.1/etc/openmpi.vpkg_yaml
  default version: openmpi/4.1.0
  versions: {
    [openmpi/1.8.8] {
      contexts: all
      compiled with system GCC compilers
      prefix: /opt/shared/openmpi/1.8.8
      standard paths: {
        bin: /opt/shared/openmpi/1.8.8/bin
        lib: /opt/shared/openmpi/1.8.8/lib
        man: /opt/shared/openmpi/1.8.8/share/man
        include: /opt/shared/openmpi/1.8.8/include
        pkgConfig: /opt/shared/openmpi/1.8.8/lib/pkgconfig
      }
    }
    [openmpi/1.8.8:gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/openmpi/1.8.8-gcc-10.1.0
      standard paths: {
        bin: /opt/shared/openmpi/1.8.8-gcc-10.1.0/bin
        lib: /opt/shared/openmpi/1.8.8-gcc-10.1.0/lib
        man: /opt/shared/openmpi/1.8.8-gcc-10.1.0/share/man
        include: /opt/shared/openmpi/1.8.8-gcc-10.1.0/include
        pkgConfig: /opt/shared/openmpi/1.8.8-gcc-10.1.0/lib/pkgconfig
      }
    }
    [openmpi/1.8.8:intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/openmpi/1.8.8-intel-2020
      standard paths: {
        bin: /opt/shared/openmpi/1.8.8-intel-2020/bin
        lib: /opt/shared/openmpi/1.8.8-intel-2020/lib
        man: /opt/shared/openmpi/1.8.8-intel-2020/share/man
        include: /opt/shared/openmpi/1.8.8-intel-2020/include
        pkgConfig: /opt/shared/openmpi/1.8.8-intel-2020/lib/pkgconfig
      }
    }
    [openmpi/1.10.7] {
      contexts: all
      compiled with system GCC compilers
      prefix: /opt/shared/openmpi/1.10.7
      standard paths: {
        bin: /opt/shared/openmpi/1.10.7/bin
        lib: /opt/shared/openmpi/1.10.7/lib
        man: /opt/shared/openmpi/1.10.7/share/man
        include: /opt/shared/openmpi/1.10.7/include
        pkgConfig: /opt/shared/openmpi/1.10.7/lib/pkgconfig
      }
    }
    [openmpi/1.10.7:gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/openmpi/1.10.7-gcc-10.1.0
      standard paths: {
        bin: /opt/shared/openmpi/1.10.7-gcc-10.1.0/bin
        lib: /opt/shared/openmpi/1.10.7-gcc-10.1.0/lib
        man: /opt/shared/openmpi/1.10.7-gcc-10.1.0/share/man
        include: /opt/shared/openmpi/1.10.7-gcc-10.1.0/include
        pkgConfig: /opt/shared/openmpi/1.10.7-gcc-10.1.0/lib/pkgconfig
      }
    }
    [openmpi/1.10.7:intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/openmpi/1.10.7-intel-2020
      standard paths: {
        bin: /opt/shared/openmpi/1.10.7-intel-2020/bin
        lib: /opt/shared/openmpi/1.10.7-intel-2020/lib
        man: /opt/shared/openmpi/1.10.7-intel-2020/share/man
        include: /opt/shared/openmpi/1.10.7-intel-2020/include
        pkgConfig: /opt/shared/openmpi/1.10.7-intel-2020/lib/pkgconfig
      }
    }
    [openmpi/2.1.6] {
      contexts: all
      compiled with system GCC compilers
      prefix: /opt/shared/openmpi/2.1.6
      standard paths: {
        bin: /opt/shared/openmpi/2.1.6/bin
        lib: /opt/shared/openmpi/2.1.6/lib
        man: /opt/shared/openmpi/2.1.6/share/man
        include: /opt/shared/openmpi/2.1.6/include
        pkgConfig: /opt/shared/openmpi/2.1.6/lib/pkgconfig
      }
    }
    [openmpi/2.1.6:gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/openmpi/2.1.6-gcc-10.1.0
      standard paths: {
        bin: /opt/shared/openmpi/2.1.6-gcc-10.1.0/bin
        lib: /opt/shared/openmpi/2.1.6-gcc-10.1.0/lib
        man: /opt/shared/openmpi/2.1.6-gcc-10.1.0/share/man
        include: /opt/shared/openmpi/2.1.6-gcc-10.1.0/include
        pkgConfig: /opt/shared/openmpi/2.1.6-gcc-10.1.0/lib/pkgconfig
      }
    }
    [openmpi/2.1.6:intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/openmpi/2.1.6-intel-2020
      standard paths: {
        bin: /opt/shared/openmpi/2.1.6-intel-2020/bin
        lib: /opt/shared/openmpi/2.1.6-intel-2020/lib
        man: /opt/shared/openmpi/2.1.6-intel-2020/share/man
        include: /opt/shared/openmpi/2.1.6-intel-2020/include
        pkgConfig: /opt/shared/openmpi/2.1.6-intel-2020/lib/pkgconfig
      }
    }
    [openmpi/3.1.6] {
      contexts: all
      compiled with system GCC compilers
      prefix: /opt/shared/openmpi/3.1.6
      standard paths: {
        bin: /opt/shared/openmpi/3.1.6/bin
        lib: /opt/shared/openmpi/3.1.6/lib
        man: /opt/shared/openmpi/3.1.6/share/man
        include: /opt/shared/openmpi/3.1.6/include
        pkgConfig: /opt/shared/openmpi/3.1.6/lib/pkgconfig
      }
    }
    [openmpi/3.1.6:gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/openmpi/3.1.6-gcc-10.1.0
      standard paths: {
        bin: /opt/shared/openmpi/3.1.6-gcc-10.1.0/bin
        lib: /opt/shared/openmpi/3.1.6-gcc-10.1.0/lib
        man: /opt/shared/openmpi/3.1.6-gcc-10.1.0/share/man
        include: /opt/shared/openmpi/3.1.6-gcc-10.1.0/include
        pkgConfig: /opt/shared/openmpi/3.1.6-gcc-10.1.0/lib/pkgconfig
      }
    }
    [openmpi/3.1.6:intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/openmpi/3.1.6-intel-2020
      standard paths: {
        bin: /opt/shared/openmpi/3.1.6-intel-2020/bin
        lib: /opt/shared/openmpi/3.1.6-intel-2020/lib
        man: /opt/shared/openmpi/3.1.6-intel-2020/share/man
        include: /opt/shared/openmpi/3.1.6-intel-2020/include
        pkgConfig: /opt/shared/openmpi/3.1.6-intel-2020/lib/pkgconfig
      }
    }
    [openmpi/3.1.6:nvidia-hpc-sdk-2023] {
      contexts: all
      dependencies: {
        nvidia-hpc-sdk/2023.237:nompi
        ucx/1.13.1
      }
      compiled with NVIDIA HPC SDK 2023, UCX 1.13.1
      prefix: /opt/shared/openmpi/3.1.6-nvidia-hpc-sdk-2023
      standard paths: {
        bin: /opt/shared/openmpi/3.1.6-nvidia-hpc-sdk-2023/bin
        lib: /opt/shared/openmpi/3.1.6-nvidia-hpc-sdk-2023/lib
        man: /opt/shared/openmpi/3.1.6-nvidia-hpc-sdk-2023/share/man
        include: /opt/shared/openmpi/3.1.6-nvidia-hpc-sdk-2023/include
        pkgConfig: /opt/shared/openmpi/3.1.6-nvidia-hpc-sdk-2023/lib/pkgconfig
      }
    }
    [openmpi/4.0.5] {
      contexts: all
      compiled with system GCC compilers
      prefix: /opt/shared/openmpi/4.0.5
      standard paths: {
        bin: /opt/shared/openmpi/4.0.5/bin
        lib: /opt/shared/openmpi/4.0.5/lib
        man: /opt/shared/openmpi/4.0.5/share/man
        include: /opt/shared/openmpi/4.0.5/include
        pkgConfig: /opt/shared/openmpi/4.0.5/lib/pkgconfig
      }
    }
    [openmpi/4.0.5:gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/openmpi/4.0.5-gcc-10.1.0
      standard paths: {
        bin: /opt/shared/openmpi/4.0.5-gcc-10.1.0/bin
        lib: /opt/shared/openmpi/4.0.5-gcc-10.1.0/lib
        man: /opt/shared/openmpi/4.0.5-gcc-10.1.0/share/man
        include: /opt/shared/openmpi/4.0.5-gcc-10.1.0/include
        pkgConfig: /opt/shared/openmpi/4.0.5-gcc-10.1.0/lib/pkgconfig
      }
    }
    [openmpi/4.0.5:intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/openmpi/4.0.5-intel-2020
      standard paths: {
        bin: /opt/shared/openmpi/4.0.5-intel-2020/bin
        lib: /opt/shared/openmpi/4.0.5-intel-2020/lib
        man: /opt/shared/openmpi/4.0.5-intel-2020/share/man
        include: /opt/shared/openmpi/4.0.5-intel-2020/include
        pkgConfig: /opt/shared/openmpi/4.0.5-intel-2020/lib/pkgconfig
      }
    }
    [openmpi/4.0.5:no-ucx,intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
        libfabric/1.11
      }
      compiled with Intel 2020 compilers (OFI instead of UCX)
      prefix: /opt/shared/openmpi/4.0.5-intel-2020-no-ucx
      standard paths: {
        bin: /opt/shared/openmpi/4.0.5-intel-2020-no-ucx/bin
        lib: /opt/shared/openmpi/4.0.5-intel-2020-no-ucx/lib
        man: /opt/shared/openmpi/4.0.5-intel-2020-no-ucx/share/man
        include: /opt/shared/openmpi/4.0.5-intel-2020-no-ucx/include
        pkgConfig: /opt/shared/openmpi/4.0.5-intel-2020-no-ucx/lib/pkgconfig
      }
    }
    [openmpi/4.1.0] {
      contexts: all
      compiled with system GCC compilers
      prefix: /opt/shared/openmpi/4.1.0
      standard paths: {
        bin: /opt/shared/openmpi/4.1.0/bin
        lib: /opt/shared/openmpi/4.1.0/lib
        man: /opt/shared/openmpi/4.1.0/share/man
        include: /opt/shared/openmpi/4.1.0/include
        pkgConfig: /opt/shared/openmpi/4.1.0/lib/pkgconfig
      }
    }
    [openmpi/4.1.0:gcc-10.1.0] {
      contexts: all
      dependencies: {
        gcc/10.1.0
      }
      compiled with GCC 10.1.0 compilers
      prefix: /opt/shared/openmpi/4.1.0-gcc-10.1.0
      standard paths: {
        bin: /opt/shared/openmpi/4.1.0-gcc-10.1.0/bin
        lib: /opt/shared/openmpi/4.1.0-gcc-10.1.0/lib
        man: /opt/shared/openmpi/4.1.0-gcc-10.1.0/share/man
        include: /opt/shared/openmpi/4.1.0-gcc-10.1.0/include
        pkgConfig: /opt/shared/openmpi/4.1.0-gcc-10.1.0/lib/pkgconfig
      }
    }
    [openmpi/4.1.0:intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
      }
      compiled with Intel 2020 compilers
      prefix: /opt/shared/openmpi/4.1.0-intel-2020
      standard paths: {
        bin: /opt/shared/openmpi/4.1.0-intel-2020/bin
        lib: /opt/shared/openmpi/4.1.0-intel-2020/lib
        man: /opt/shared/openmpi/4.1.0-intel-2020/share/man
        include: /opt/shared/openmpi/4.1.0-intel-2020/include
        pkgConfig: /opt/shared/openmpi/4.1.0-intel-2020/lib/pkgconfig
      }
    }
    [openmpi/4.1.0:no-ucx,intel-2020] {
      contexts: all
      dependencies: {
        intel/==2020
        libfabric/1.11
      }
      compiled with Intel 2020 compilers (OFI instead of UCX)
      prefix: /opt/shared/openmpi/4.1.0-intel-2020-no-ucx
      standard paths: {
        bin: /opt/shared/openmpi/4.1.0-intel-2020-no-ucx/bin
        lib: /opt/shared/openmpi/4.1.0-intel-2020-no-ucx/lib
        man: /opt/shared/openmpi/4.1.0-intel-2020-no-ucx/share/man
        include: /opt/shared/openmpi/4.1.0-intel-2020-no-ucx/include
        pkgConfig: /opt/shared/openmpi/4.1.0-intel-2020-no-ucx/lib/pkgconfig
      }
    }
    [openmpi/4.1.2] {
      contexts: all
      compiled with system GCC compilers
      prefix: /opt/shared/openmpi/4.1.2
      standard paths: {
        bin: /opt/shared/openmpi/4.1.2/bin
        lib: /opt/shared/openmpi/4.1.2/lib
        man: /opt/shared/openmpi/4.1.2/share/man
        include: /opt/shared/openmpi/4.1.2/include
        pkgConfig: /opt/shared/openmpi/4.1.2/lib/pkgconfig
      }
    }
    [openmpi/4.1.2:nvidia-hpc-sdk-2022] {
      contexts: all
      dependencies: {
        nvidia-hpc-sdk/2022.221:nompi
      }
      compiled with NVIDIA HPC SDK 2022 compilers
      prefix: /opt/shared/openmpi/4.1.2-nvidia-hpc-sdk-2022
      standard paths: {
        bin: /opt/shared/openmpi/4.1.2-nvidia-hpc-sdk-2022/bin
        lib: /opt/shared/openmpi/4.1.2-nvidia-hpc-sdk-2022/lib
        man: /opt/shared/openmpi/4.1.2-nvidia-hpc-sdk-2022/share/man
        include: /opt/shared/openmpi/4.1.2-nvidia-hpc-sdk-2022/include
        pkgConfig: /opt/shared/openmpi/4.1.2-nvidia-hpc-sdk-2022/lib/pkgconfig
      }
    }
    [openmpi/4.1.4:intel-2020] {
      contexts: all
      dependencies: {
        intel/=>=2020
        ucx/1.13.1
      }
      compiled with Intel 2020 compilers, UCX 1.13.1
      prefix: /opt/shared/openmpi/4.1.4-intel-2020
      standard paths: {
        bin: /opt/shared/openmpi/4.1.4-intel-2020/bin
        lib: /opt/shared/openmpi/4.1.4-intel-2020/lib
        man: /opt/shared/openmpi/4.1.4-intel-2020/share/man
        include: /opt/shared/openmpi/4.1.4-intel-2020/include
        pkgConfig: /opt/shared/openmpi/4.1.4-intel-2020/lib/pkgconfig
      }
    }
    [openmpi/4.1.4:intel-oneapi-2022] {
      contexts: all
      dependencies: {
        intel-oneapi/==2022
        ucx/1.13.1
      }
      compiled with Intel oneAPI 2022 compilers, UCX 1.13.1
      prefix: /opt/shared/openmpi/4.1.4-intel-oneapi-2022
      standard paths: {
        bin: /opt/shared/openmpi/4.1.4-intel-oneapi-2022/bin
        lib: /opt/shared/openmpi/4.1.4-intel-oneapi-2022/lib
        man: /opt/shared/openmpi/4.1.4-intel-oneapi-2022/share/man
        include: /opt/shared/openmpi/4.1.4-intel-oneapi-2022/include
        pkgConfig: /opt/shared/openmpi/4.1.4-intel-oneapi-2022/lib/pkgconfig
      }
    }
    [openmpi/4.1.5] {
      contexts: all
      dependencies: {
        ucx/1.13.1
      }
      compiled with system GCC compilers, UCX 1.13.1
      prefix: /opt/shared/openmpi/4.1.5
      standard paths: {
        bin: /opt/shared/openmpi/4.1.5/bin
        lib: /opt/shared/openmpi/4.1.5/lib
        man: /opt/shared/openmpi/4.1.5/share/man
        include: /opt/shared/openmpi/4.1.5/include
        pkgConfig: /opt/shared/openmpi/4.1.5/lib/pkgconfig
      }
    }
    [openmpi/4.1.5:gcc-12.2] {
      contexts: all
      dependencies: {
        gcc/12.2
        ucx/1.13.1
      }
      compiled with GCC 12.2 compilers, UCX 1.13.1
      prefix: /opt/shared/openmpi/4.1.5-gcc-12.2
      standard paths: {
        bin: /opt/shared/openmpi/4.1.5-gcc-12.2/bin
        lib: /opt/shared/openmpi/4.1.5-gcc-12.2/lib
        man: /opt/shared/openmpi/4.1.5-gcc-12.2/share/man
        include: /opt/shared/openmpi/4.1.5-gcc-12.2/include
        pkgConfig: /opt/shared/openmpi/4.1.5-gcc-12.2/lib/pkgconfig
      }
    }
    [openmpi/4.1.5:intel-2020] {
      contexts: all
      dependencies: {
        intel/=>=2020
        ucx/1.13.1
      }
      compiled with Intel 2020 compilers, UCX 1.13.1
      prefix: /opt/shared/openmpi/4.1.5-intel-2020
      standard paths: {
        bin: /opt/shared/openmpi/4.1.5-intel-2020/bin
        lib: /opt/shared/openmpi/4.1.5-intel-2020/lib
        man: /opt/shared/openmpi/4.1.5-intel-2020/share/man
        include: /opt/shared/openmpi/4.1.5-intel-2020/include
        pkgConfig: /opt/shared/openmpi/4.1.5-intel-2020/lib/pkgconfig
      }
    }
    [openmpi/4.1.5:intel-oneapi-2022] {
      contexts: all
      dependencies: {
        intel-oneapi/==2022
        ucx/1.13.1
      }
      compiled with Intel oneAPI 2022 compilers, UCX 1.13.1
      prefix: /opt/shared/openmpi/4.1.5-intel-oneapi-2022
      standard paths: {
        bin: /opt/shared/openmpi/4.1.5-intel-oneapi-2022/bin
        lib: /opt/shared/openmpi/4.1.5-intel-oneapi-2022/lib
        man: /opt/shared/openmpi/4.1.5-intel-oneapi-2022/share/man
        include: /opt/shared/openmpi/4.1.5-intel-oneapi-2022/include
        pkgConfig: /opt/shared/openmpi/4.1.5-intel-oneapi-2022/lib/pkgconfig
      }
    }
    [openmpi/4.1.5:intel-oneapi-2023] {
      contexts: all
      dependencies: {
        intel-oneapi/==2023
        ucx/1.13.1
      }
      compiled with Intel oneAPI 2023 compilers, UCX 1.13.1
      prefix: /opt/shared/openmpi/4.1.5-intel-oneapi-2023
      standard paths: {
        bin: /opt/shared/openmpi/4.1.5-intel-oneapi-2023/bin
        lib: /opt/shared/openmpi/4.1.5-intel-oneapi-2023/lib
        man: /opt/shared/openmpi/4.1.5-intel-oneapi-2023/share/man
        include: /opt/shared/openmpi/4.1.5-intel-oneapi-2023/include
        pkgConfig: /opt/shared/openmpi/4.1.5-intel-oneapi-2023/lib/pkgconfig
      }
    }
    [openmpi/4.1.5:nvidia-hpc-sdk-2022] {
      contexts: all
      dependencies: {
        nvidia-hpc-sdk/2022.2211:nompi
        ucx/1.13.1
      }
      compiled with NVIDIA HPC SDK 2022, UCX 1.13.1
      prefix: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2022
      standard paths: {
        bin: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2022/bin
        lib: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2022/lib
        man: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2022/share/man
        include: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2022/include
        pkgConfig: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2022/lib/pkgconfig
      }
    }
    [openmpi/4.1.5:nvidia-hpc-sdk-2023] {
      contexts: all
      dependencies: {
        nvidia-hpc-sdk/2023.237:nompi
        ucx/1.13.1
      }
      compiled with NVIDIA HPC SDK 2023, UCX 1.13.1
      prefix: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2023
      standard paths: {
        bin: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2023/bin
        lib: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2023/lib
        man: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2023/share/man
        include: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2023/include
        pkgConfig: /opt/shared/openmpi/4.1.5-nvidia-hpc-sdk-2023/lib/pkgconfig
      }
    }
  }
}

[papi] {
  contexts: all
  actions: {
    PAPI_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://icl.utk.edu/papi/
  Performance Application Programming Interface
  prefix: /opt/shared/papi
  source file: /opt/shared/valet/2.1/etc/papi.vpkg_yaml
  default version: papi/system
  versions: {
    [papi/7.0.0] {
      contexts: all
      compiled with OS tools
      prefix: /opt/shared/papi/7.0.0
      standard paths: {
        bin: /opt/shared/papi/7.0.0/bin
        lib: /opt/shared/papi/7.0.0/lib
        man: /opt/shared/papi/7.0.0/share/man
        include: /opt/shared/papi/7.0.0/include
        pkgConfig: /opt/shared/papi/7.0.0/lib/pkgconfig
      }
    }
    [papi/7.0.1] {
      contexts: all
      compiled with OS tools
      prefix: /opt/shared/papi/7.0.1
      standard paths: {
        bin: /opt/shared/papi/7.0.1/bin
        lib: /opt/shared/papi/7.0.1/lib
        man: /opt/shared/papi/7.0.1/share/man
        include: /opt/shared/papi/7.0.1/include
        pkgConfig: /opt/shared/papi/7.0.1/lib/pkgconfig
      }
    }
    [papi/system] {
      contexts: all
      provided with OS
      prefix: /dummy/path
    }
  }
}

[paraview] {
  contexts: all
  actions: {
    PARAVIEW_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.paraview.org/
  ParaView - Open Source Scientific Visualization
  prefix: /opt/shared/paraview
  source file: /opt/shared/valet/2.1/etc/paraview.vpkg_yaml
  default version: paraview/5.8.0
  versions: {
    [paraview/5.8.0] {
      contexts: all
      actions: {
        MESA_GL_VERSION_OVERRIDE=3.2 (contexts: all)
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-python.sh
        } (contexts: all)
      }
      dependencies: {
        openmpi/4.1.2
        intel-python/2021
      }
      Local build with Qt5, Open MPI, various extensions
      prefix: /opt/shared/paraview/5.8.0
      standard paths: {
        bin: /opt/shared/paraview/5.8.0/bin
        lib: /opt/shared/paraview/5.8.0/lib
        man: /opt/shared/paraview/5.8.0/share/man
        info: /opt/shared/paraview/5.8.0/share/info
        include: /opt/shared/paraview/5.8.0/include
        pkgConfig: /opt/shared/paraview/5.8.0/lib/pkgconfig
      }
    }
    [paraview/5.10.1] {
      contexts: all
      actions: {
        MESA_GL_VERSION_OVERRIDE=3.2 (contexts: all)
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/intel-python.sh
        } (contexts: all)
      }
      dependencies: {
        openmpi/4.1.2
        gcc/11.2
        intel-python/2021
      }
      Local build with Qt5, Open MPI, various extensions
      prefix: /opt/shared/paraview/5.10.1
      standard paths: {
        bin: /opt/shared/paraview/5.10.1/bin
        lib: /opt/shared/paraview/5.10.1/lib
        man: /opt/shared/paraview/5.10.1/share/man
        info: /opt/shared/paraview/5.10.1/share/info
        include: /opt/shared/paraview/5.10.1/include
        pkgConfig: /opt/shared/paraview/5.10.1/lib/pkgconfig
      }
    }
  }
}

[pdt] {
  contexts: all
  actions: {
    PDT_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.cs.uoregon.edu/Research/tau/
  PDT: Program Database Tookit
  prefix: /opt/shared/pdt
  source file: /opt/shared/valet/2.1/etc/pdt.vpkg_yaml
  default version: pdt/3.25.1
  versions: {
    [pdt/3.25.1] {
      contexts: all
      pdt compiled with system compilers
      prefix: /opt/shared/pdt/3.25.1
      standard paths: {
        bin: /opt/shared/pdt/3.25.1/bin
        lib: /opt/shared/pdt/3.25.1/lib
        include: /opt/shared/pdt/3.25.1/include
      }
    }
    [pdt/3.25.1:gcc-12.2.0] {
      contexts: all
      dependencies: {
        gcc/12.2.0
      }
      pdt compiled with GCC 12 compilers
      prefix: /opt/shared/pdt/3.25.1-gcc-12.2.0
      standard paths: {
        bin: /opt/shared/pdt/3.25.1-gcc-12.2.0/bin
        lib: /opt/shared/pdt/3.25.1-gcc-12.2.0/lib
        include: /opt/shared/pdt/3.25.1-gcc-12.2.0/include
      }
    }
  }
}

[pgi] {
  contexts: all
  flags: no-development-env
  actions: {
    PGI=${VALET_PATH_PREFIX} (contexts: all)
    LM_LICENSE_FILE+=[:]${VALET_PATH_PREFIX}/license.dat (contexts: all)
    COMPILER=pgi (contexts: development)
    CC=pgcc (contexts: development)
    CXX=pgc++ (contexts: development)
    FC=pgfortran (contexts: development)
    F77=pgf77 (contexts: development)
    PGI_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.pgroup.com/
  Portland Group Compiler Suite
  prefix: /opt/shared/pgi
  source file: /opt/shared/valet/2.1/etc/pgi.vpkg_yaml
  default version: pgi/20
  versions: {
    [pgi/17] {
      contexts: all
      alias-to: pgi/17.10
    }
    [pgi/17.10] {
      contexts: all
      dependencies: {
        gcc/7.3.0
      }
      2017 (17.10 w/ Accelerator)
      prefix: /opt/shared/pgi/17.10/linux86-64/17.10
      standard paths: {
        bin: /opt/shared/pgi/17.10/linux86-64/17.10/bin
        lib: /opt/shared/pgi/17.10/linux86-64/17.10/lib
        man: /opt/shared/pgi/17.10/linux86-64/17.10/man
        include: /opt/shared/pgi/17.10/linux86-64/17.10/include
      }
    }
    [pgi/18] {
      contexts: all
      alias-to: pgi/18.10
    }
    [pgi/18.10] {
      contexts: all
      dependencies: {
        gcc/7.3.0
      }
      2018 (18.10 w/ Accelerator)
      prefix: /opt/shared/pgi/18.10/linux86-64/18.10
      standard paths: {
        bin: /opt/shared/pgi/18.10/linux86-64/18.10/bin
        lib: /opt/shared/pgi/18.10/linux86-64/18.10/lib
        man: /opt/shared/pgi/18.10/linux86-64/18.10/man
        include: /opt/shared/pgi/18.10/linux86-64/18.10/include
      }
    }
    [pgi/18.10:llvm] {
      contexts: all
      dependencies: {
        gcc/7.3.0
      }
      2018 (18.10 w/ Accelerator, LLVM variant)
      prefix: /opt/shared/pgi/18.10/linux86-64-llvm/18.10
      standard paths: {
        bin: /opt/shared/pgi/18.10/linux86-64-llvm/18.10/bin
        lib: /opt/shared/pgi/18.10/linux86-64-llvm/18.10/lib
        man: /opt/shared/pgi/18.10/linux86-64-llvm/18.10/man
        include: /opt/shared/pgi/18.10/linux86-64-llvm/18.10/include
      }
    }
    [pgi/19] {
      contexts: all
      alias-to: pgi/19.10
    }
    [pgi/19.10] {
      contexts: all
      dependencies: {
        gcc/7.3.0
      }
      2019 (19.10 w/ Accelerator)
      prefix: /opt/shared/pgi/19.10/linux86-64-nollvm/19.10
      standard paths: {
        bin: /opt/shared/pgi/19.10/linux86-64-nollvm/19.10/bin
        lib: /opt/shared/pgi/19.10/linux86-64-nollvm/19.10/lib
        man: /opt/shared/pgi/19.10/linux86-64-nollvm/19.10/man
        include: /opt/shared/pgi/19.10/linux86-64-nollvm/19.10/include
      }
    }
    [pgi/19.10:llvm] {
      contexts: all
      dependencies: {
        gcc/7.3.0
      }
      2019 (19.10 w/ Accelerator, LLVM variant)
      prefix: /opt/shared/pgi/19.10/linux86-64-llvm/19.10
      standard paths: {
        bin: /opt/shared/pgi/19.10/linux86-64-llvm/19.10/bin
        lib: /opt/shared/pgi/19.10/linux86-64-llvm/19.10/lib
        man: /opt/shared/pgi/19.10/linux86-64-llvm/19.10/man
        include: /opt/shared/pgi/19.10/linux86-64-llvm/19.10/include
      }
    }
    [pgi/20] {
      contexts: all
      alias-to: pgi/20.4
    }
    [pgi/20.4] {
      contexts: all
      dependencies: {
        gcc/7.3.0
      }
      2020 (20.4 w/ Accelerator)
      prefix: /opt/shared/pgi/20.4/linux86-64-nollvm/20.4
      standard paths: {
        bin: /opt/shared/pgi/20.4/linux86-64-nollvm/20.4/bin
        lib: /opt/shared/pgi/20.4/linux86-64-nollvm/20.4/lib
        include: /opt/shared/pgi/20.4/linux86-64-nollvm/20.4/include
      }
    }
    [pgi/20.4:llvm] {
      contexts: all
      dependencies: {
        gcc/7.3.0
      }
      2020 (20.4 w/ Accelerator, LLVM variant)
      prefix: /opt/shared/pgi/20.4/linux86-64-llvm/20.4
      standard paths: {
        bin: /opt/shared/pgi/20.4/linux86-64-llvm/20.4/bin
        lib: /opt/shared/pgi/20.4/linux86-64-llvm/20.4/lib
        man: /opt/shared/pgi/20.4/linux86-64-llvm/20.4/man
        include: /opt/shared/pgi/20.4/linux86-64-llvm/20.4/include
      }
    }
  }
}

[pmix] {
  contexts: all
  actions: {
    PMIX_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://github.com/pmix/pmix-standard
  PMIx is an application programming interface (API) standard to provide High Performance Computing (HPC) libraries and programming models with portable and well-defined access to commonly available distributed computing system services.
  prefix: /opt/shared/pmix
  source file: /opt/shared/valet/2.1/etc/pmix.vpkg_yaml
  default version: pmix/3
  versions: {
    [pmix/3] {
      contexts: all
      alias-to: pmix/3.2.1
    }
    [pmix/3.2.1] {
      contexts: all
      system compilers, Slurm
      prefix: /opt/shared/pmix/3.2.1
      standard paths: {
        bin: /opt/shared/pmix/3.2.1/bin
        lib: /opt/shared/pmix/3.2.1/lib
        include: /opt/shared/pmix/3.2.1/include
        pkgConfig: /opt/shared/pmix/3.2.1/lib/pkgconfig
      }
    }
    [pmix/4] {
      contexts: all
      alias-to: pmix/4.1.2
    }
    [pmix/4.1.2] {
      contexts: all
      system compilers, Lustre, Omni-path, Slurm
      prefix: /opt/shared/pmix/4.1.2
      standard paths: {
        bin: /opt/shared/pmix/4.1.2/bin
        lib: /opt/shared/pmix/4.1.2/lib
        man: /opt/shared/pmix/4.1.2/share/man
        include: /opt/shared/pmix/4.1.2/include
        pkgConfig: /opt/shared/pmix/4.1.2/lib/pkgconfig
      }
    }
  }
}

[pnetcdf] {
  contexts: all
  actions: {
    PNETCDF_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://cucis.ece.northwestern.edu/projects/PnetCDF/
  PnetCDF: Parallel netCDF
  prefix: /opt/shared/pnetcdf
  source file: /opt/shared/valet/2.1/etc/pnetcdf.vpkg_yaml
  default version: pnetcdf/1.12.1:openmpi
  versions: {
    [pnetcdf/1.12.1] {
      contexts: all
      alias-to: pnetcdf/1.12.1:openmpi
    }
    [pnetcdf/1.12.1:openmpi] {
      contexts: all
      dependencies: {
        openmpi/4.0.5
      }
      PnetCDF with MPI-IO + system compilers
      prefix: /opt/shared/pnetcdf/1.12.1-openmpi
      standard paths: {
        bin: /opt/shared/pnetcdf/1.12.1-openmpi/bin
        lib: /opt/shared/pnetcdf/1.12.1-openmpi/lib
        man: /opt/shared/pnetcdf/1.12.1-openmpi/share/man
        include: /opt/shared/pnetcdf/1.12.1-openmpi/include
        pkgConfig: /opt/shared/pnetcdf/1.12.1-openmpi/lib/pkgconfig
      }
    }
    [pnetcdf/1.12.1:openmpi,intel] {
      contexts: all
      alias-to: pnetcdf/1.12.1:openmpi,intel-2020
    }
    [pnetcdf/1.12.1:openmpi,intel-2020] {
      contexts: all
      dependencies: {
        openmpi/4.0.5:intel-2020
      }
      PnetCDF with MPI-IO + Intel 2020 compilers
      prefix: /opt/shared/pnetcdf/1.12.1-intel-2020-openmpi
      standard paths: {
        bin: /opt/shared/pnetcdf/1.12.1-intel-2020-openmpi/bin
        lib: /opt/shared/pnetcdf/1.12.1-intel-2020-openmpi/lib
        man: /opt/shared/pnetcdf/1.12.1-intel-2020-openmpi/share/man
        include: /opt/shared/pnetcdf/1.12.1-intel-2020-openmpi/include
        pkgConfig: /opt/shared/pnetcdf/1.12.1-intel-2020-openmpi/lib/pkgconfig
      }
    }
    [pnetcdf/1.12.3] {
      contexts: all
      alias-to: pnetcdf/1.12.3:openmpi
    }
    [pnetcdf/1.12.3:intel-oneapi,openmpi] {
      contexts: all
      alias-to: pnetcdf/1.12.3:intel-oneapi-2023,openmpi
    }
    [pnetcdf/1.12.3:intel-oneapi-2022,openmpi] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:intel-oneapi-2022
      }
      PnetCDF with MPI-IO + Intel oneAPI 2022 compilers
      prefix: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2022-openmpi
      standard paths: {
        bin: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2022-openmpi/bin
        lib: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2022-openmpi/lib
        man: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2022-openmpi/share/man
        include: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2022-openmpi/include
        pkgConfig: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2022-openmpi/lib/pkgconfig
      }
    }
    [pnetcdf/1.12.3:intel-oneapi-2023,openmpi] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:intel-oneapi-2023
      }
      PnetCDF with MPI-IO + Intel oneAPI 2023 compilers
      prefix: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2023-openmpi
      standard paths: {
        bin: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2023-openmpi/bin
        lib: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2023-openmpi/lib
        man: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2023-openmpi/share/man
        include: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2023-openmpi/include
        pkgConfig: /opt/shared/pnetcdf/1.12.3-intel-oneapi-2023-openmpi/lib/pkgconfig
      }
    }
    [pnetcdf/1.12.3:openmpi] {
      contexts: all
      dependencies: {
        openmpi/4.1.5
      }
      PnetCDF with MPI-IO + system compilers
      prefix: /opt/shared/pnetcdf/1.12.3-openmpi
      standard paths: {
        bin: /opt/shared/pnetcdf/1.12.3-openmpi/bin
        lib: /opt/shared/pnetcdf/1.12.3-openmpi/lib
        man: /opt/shared/pnetcdf/1.12.3-openmpi/share/man
        include: /opt/shared/pnetcdf/1.12.3-openmpi/include
        pkgConfig: /opt/shared/pnetcdf/1.12.3-openmpi/lib/pkgconfig
      }
    }
    [pnetcdf/1.12.3:openmpi,gcc-12.2] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:gcc-12.2
      }
      PnetCDF with MPI-IO + GCC 12.2 compilers
      prefix: /opt/shared/pnetcdf/1.12.3-gcc-12.2-openmpi
      standard paths: {
        bin: /opt/shared/pnetcdf/1.12.3-gcc-12.2-openmpi/bin
        lib: /opt/shared/pnetcdf/1.12.3-gcc-12.2-openmpi/lib
        man: /opt/shared/pnetcdf/1.12.3-gcc-12.2-openmpi/share/man
        include: /opt/shared/pnetcdf/1.12.3-gcc-12.2-openmpi/include
        pkgConfig: /opt/shared/pnetcdf/1.12.3-gcc-12.2-openmpi/lib/pkgconfig
      }
    }
    [pnetcdf/1.12.3:openmpi,intel] {
      contexts: all
      alias-to: pnetcdf/1.12.3:openmpi,intel-2020
    }
    [pnetcdf/1.12.3:openmpi,intel-2020] {
      contexts: all
      dependencies: {
        openmpi/4.1.5:intel-2020
      }
      PnetCDF with MPI-IO + Intel 2020 compilers
      prefix: /opt/shared/pnetcdf/1.12.3-intel-2020-openmpi
      standard paths: {
        bin: /opt/shared/pnetcdf/1.12.3-intel-2020-openmpi/bin
        lib: /opt/shared/pnetcdf/1.12.3-intel-2020-openmpi/lib
        man: /opt/shared/pnetcdf/1.12.3-intel-2020-openmpi/share/man
        include: /opt/shared/pnetcdf/1.12.3-intel-2020-openmpi/include
        pkgConfig: /opt/shared/pnetcdf/1.12.3-intel-2020-openmpi/lib/pkgconfig
      }
    }
  }
}

[proj] {
  contexts: all
  actions: {
    PROJ_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://trac.osgeo.org/proj/
  Cartographic Projections Library
  prefix: /opt/shared/proj
  source file: /opt/shared/valet/2.1/etc/proj.vpkg_yaml
  default version: proj/6.3.2
  versions: {
    [proj/4.9] {
      contexts: all
      alias-to: proj/4.9.3
    }
    [proj/4.9.3] {
      contexts: all
      PROJ4 compiled with system compilers
      prefix: /opt/shared/proj/4.9.3
      standard paths: {
        bin: /opt/shared/proj/4.9.3/bin
        lib: /opt/shared/proj/4.9.3/lib
        man: /opt/shared/proj/4.9.3/share/man
        include: /opt/shared/proj/4.9.3/include
        pkgConfig: /opt/shared/proj/4.9.3/lib/pkgconfig
      }
    }
    [proj/6.3.2] {
      contexts: all
      PROJ compiled with system compilers
      prefix: /opt/shared/proj/6.3.2
      standard paths: {
        bin: /opt/shared/proj/6.3.2/bin
        lib: /opt/shared/proj/6.3.2/lib
        man: /opt/shared/proj/6.3.2/share/man
        include: /opt/shared/proj/6.3.2/include
        pkgConfig: /opt/shared/proj/6.3.2/lib/pkgconfig
      }
    }
  }
}

[python] {
  contexts: all
  actions: {
    PYTHON_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.python.org/
  Python Programming Language
  prefix: /opt/shared/python
  source file: /opt/shared/valet/2.1/etc/python.vpkg_yaml
  default version: python/3.8.6
  versions: {
    [python/2] {
      contexts: all
      alias-to: python/2.7.18
    }
    [python/2.7.18] {
      contexts: all
      actions: {
        PYTHON_VERSION_LONG=2.7.18 (contexts: all)
        PYTHON_VERSION_SHORT=2.7 (contexts: all)
        PYTHON=python2 (contexts: all)
        PYTHON_SITE_PACKAGES=lib/python${PYTHON_VERSION_SHORT}/site-packages (contexts: all)
        LDFLAGS=+[ ]-lpython${PYTHON_VERSION_SHORT} (contexts: development)
      }
      Python 2 with 200+ common add-on modules
      prefix: /opt/shared/python/2.7.18
      standard paths: {
        bin: /opt/shared/python/2.7.18/bin
        lib: /opt/shared/python/2.7.18/lib
        man: /opt/shared/python/2.7.18/man, /opt/shared/python/2.7.18/share/man
        include: /opt/shared/python/2.7.18/include
        pkgConfig: /opt/shared/python/2.7.18/lib/pkgconfig
      }
    }
    [python/3] {
      contexts: all
      alias-to: python/3.8.6
    }
    [python/3.8.6] {
      contexts: all
      actions: {
        PYTHON_VERSION_LONG=3.8.6 (contexts: all)
        PYTHON_VERSION_SHORT=3.8 (contexts: all)
        PYTHON=python3 (contexts: all)
        PYTHON_SITE_PACKAGES=lib/python${PYTHON_VERSION_SHORT}/site-packages (contexts: all)
        LDFLAGS=+[ ]-lpython${PYTHON_VERSION_SHORT}m (contexts: development)
      }
      Python 3 with 200+ common add-on modules
      prefix: /opt/shared/python/3.8.6
      standard paths: {
        bin: /opt/shared/python/3.8.6/bin
        lib: /opt/shared/python/3.8.6/lib
        man: /opt/shared/python/3.8.6/man, /opt/shared/python/3.8.6/share/man
        include: /opt/shared/python/3.8.6/include
        pkgConfig: /opt/shared/python/3.8.6/lib/pkgconfig
      }
    }
  }
}

[r] {
  contexts: all
  actions: {
    executable(source, succeedThenFail, success=0) {
      sh : /opt/shared/valet/2.1/libexec/r.sh
    } (contexts: all)
    R_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.r-project.org/
  The R Project for Statistical Computing
  prefix: /opt/shared/r
  source file: /opt/shared/valet/2.1/etc/r.vpkg_yaml
  default version: r/3.6.3
  versions: {
    [r/3.6] {
      contexts: all
      alias-to: r/3.6.3
    }
    [r/3.6.3] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/atlas (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/atlas (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/atlas (contexts: development)
        R_BLAS_VARIANT=atlas (contexts: all)
      }
      dependencies: {
        gcc/10.1.0
        atlas/3.10.3
      }
      R 3.6.3 with GCC 10.1, ATLAS
      prefix: /opt/shared/r/3.6.3
      standard paths: {
        bin: /opt/shared/r/3.6.3/bin
        lib: /opt/shared/r/3.6.3/lib64
        man: /opt/shared/r/3.6.3/share/man
      }
    }
    [r/3.6.3:mkl-seq] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/seq (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/mkl/seq (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/seq (contexts: development)
        R_BLAS_VARIANT=mkl/seq (contexts: all)
      }
      dependencies: {
        gcc/10.1.0
        intel/2020
      }
      R 3.6.3 with GCC 10.1, MKL (sequential)
      prefix: /opt/shared/r/3.6.3
      standard paths: {
        bin: /opt/shared/r/3.6.3/bin
        lib: /opt/shared/r/3.6.3/lib64
        man: /opt/shared/r/3.6.3/share/man
      }
    }
    [r/3.6.3:mkl-thr] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/thr (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/mkl/thr (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/thr (contexts: development)
        R_BLAS_VARIANT=mkl/thr (contexts: all)
      }
      dependencies: {
        gcc/10.1.0
        intel/2020
      }
      R 3.6.3 with GCC 10.1, MKL (threaded)
      prefix: /opt/shared/r/3.6.3
      standard paths: {
        bin: /opt/shared/r/3.6.3/bin
        lib: /opt/shared/r/3.6.3/lib64
        man: /opt/shared/r/3.6.3/share/man
      }
    }
    [r/3.6.3:rblas] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/rblas (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/rblas (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/rblas (contexts: development)
        R_BLAS_VARIANT=rblas (contexts: all)
      }
      dependencies: {
        gcc/10.1.0
      }
      R 3.6.3 with GCC 10.1, R reference BLAS/LAPACK
      prefix: /opt/shared/r/3.6.3
      standard paths: {
        bin: /opt/shared/r/3.6.3/bin
        lib: /opt/shared/r/3.6.3/lib64
        man: /opt/shared/r/3.6.3/share/man
      }
    }
    [r/4.1] {
      contexts: all
      alias-to: r/4.1.1
    }
    [r/4.1.1] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/atlas (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/atlas (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/atlas (contexts: development)
        R_BLAS_VARIANT=atlas (contexts: all)
      }
      dependencies: {
        gcc/10.1.0
        atlas/3.10.3
      }
      R 4.1.1 with system compilers, ATLAS
      prefix: /opt/shared/r/4.1.1
      standard paths: {
        bin: /opt/shared/r/4.1.1/bin
        lib: /opt/shared/r/4.1.1/lib64
        man: /opt/shared/r/4.1.1/share/man
      }
    }
    [r/4.1.1:mkl-seq] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/seq (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/mkl/seq (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/seq (contexts: development)
        R_BLAS_VARIANT=mkl/seq (contexts: all)
      }
      dependencies: {
        gcc/10.1.0
        intel/2020
      }
      R 4.1.1 with GCC 10.1, MKL (sequential)
      prefix: /opt/shared/r/4.1.1
      standard paths: {
        bin: /opt/shared/r/4.1.1/bin
        lib: /opt/shared/r/4.1.1/lib64
        man: /opt/shared/r/4.1.1/share/man
      }
    }
    [r/4.1.1:mkl-thr] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/thr (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/mkl/thr (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/thr (contexts: development)
        R_BLAS_VARIANT=mkl/thr (contexts: all)
      }
      dependencies: {
        gcc/10.1.0
        intel/2020
      }
      R 4.1.1 with GCC 10.1, MKL (threaded)
      prefix: /opt/shared/r/4.1.1
      standard paths: {
        bin: /opt/shared/r/4.1.1/bin
        lib: /opt/shared/r/4.1.1/lib64
        man: /opt/shared/r/4.1.1/share/man
      }
    }
    [r/4.1.1:rblas] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/rblas (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/rblas (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/rblas (contexts: development)
        R_BLAS_VARIANT=rblas (contexts: all)
      }
      dependencies: {
        gcc/10.1.0
      }
      R 4.1.1 with GCC 10.1, R reference BLAS/LAPACK
      prefix: /opt/shared/r/4.1.1
      standard paths: {
        bin: /opt/shared/r/4.1.1/bin
        lib: /opt/shared/r/4.1.1/lib64
        man: /opt/shared/r/4.1.1/share/man
      }
    }
    [r/4.1.3] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/atlas (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/atlas (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/atlas (contexts: development)
        R_BLAS_VARIANT=atlas (contexts: all)
      }
      dependencies: {
        gcc/11.2.0
        atlas/3.10.3
      }
      R 4.1.3 with system compilers, ATLAS
      prefix: /opt/shared/r/4.1.3
      standard paths: {
        bin: /opt/shared/r/4.1.3/bin
        lib: /opt/shared/r/4.1.3/lib64
        man: /opt/shared/r/4.1.3/share/man
        include: /opt/shared/r/4.1.3/include
      }
    }
    [r/4.1.3:mkl-seq] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/seq (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/mkl/seq (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/seq (contexts: development)
        R_BLAS_VARIANT=mkl/seq (contexts: all)
      }
      dependencies: {
        gcc/11.2.0
        intel/2020
      }
      R 4.1.3 with GCC 10.1, MKL (sequential)
      prefix: /opt/shared/r/4.1.3
      standard paths: {
        bin: /opt/shared/r/4.1.3/bin
        lib: /opt/shared/r/4.1.3/lib64
        man: /opt/shared/r/4.1.3/share/man
        include: /opt/shared/r/4.1.3/include
      }
    }
    [r/4.1.3:mkl-thr] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/thr (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/mkl/thr (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/mkl/thr (contexts: development)
        R_BLAS_VARIANT=mkl/thr (contexts: all)
      }
      dependencies: {
        gcc/11.2.0
        intel/2020
      }
      R 4.1.3 with GCC 10.1, MKL (threaded)
      prefix: /opt/shared/r/4.1.3
      standard paths: {
        bin: /opt/shared/r/4.1.3/bin
        lib: /opt/shared/r/4.1.3/lib64
        man: /opt/shared/r/4.1.3/share/man
        include: /opt/shared/r/4.1.3/include
      }
    }
    [r/4.1.3:rblas] {
      contexts: all
      actions: {
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib (contexts: development)
        CPPFLAGS=+[ ]-I${VALET_PATH_PREFIX}/lib64/R/include (contexts: development)
        LD_LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/rblas (contexts: all)
        LDFLAGS=+[ ]-L${VALET_PATH_PREFIX}/lib64/R/lib/rblas (contexts: development)
        LIBRARY_PATH+=[:]${VALET_PATH_PREFIX}/lib64/R/lib/rblas (contexts: development)
        R_BLAS_VARIANT=rblas (contexts: all)
      }
      dependencies: {
        gcc/11.2.0
      }
      R 4.1.3 with GCC 10.1, R reference BLAS/LAPACK
      prefix: /opt/shared/r/4.1.3
      standard paths: {
        bin: /opt/shared/r/4.1.3/bin
        lib: /opt/shared/r/4.1.3/lib64
        man: /opt/shared/r/4.1.3/share/man
        include: /opt/shared/r/4.1.3/include
      }
    }
  }
}

[r-bioc] {
  contexts: all
  flags: no-development-env
  actions: {
    R_LIBS+=[:]${VALET_PATH_PREFIX} (contexts: all)
    R_DASH_BIOC_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.bioconductor.org/
  R Bioconductor and related CRAN modules
  prefix: /opt/shared/r/add-ons
  source file: /opt/shared/valet/2.1/etc/r-bioc.vpkg_yaml
  default version: r-bioc/4.1.3:202207
  versions: {
    [r-bioc/4.1.3:202207] {
      contexts: all
      dependencies: {
        r-cran/4.1.3:20220517
      }
      snapshot 2022-07 for R 4.1.3
      prefix: /opt/shared/r/add-ons/r4.1.3/bioc/202207
    }
  }
}

[r-cran] {
  contexts: all
  flags: no-development-env
  actions: {
    R_LIBS+=[:]${VALET_PATH_PREFIX} (contexts: all)
    R_DASH_CRAN_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://cran.us.r-project.org/
  The Comprehensive R Archive Network
  prefix: /opt/shared/r/add-ons
  source file: /opt/shared/valet/2.1/etc/r-cran.vpkg_yaml
  default version: r-cran/3.6.3:20201217
  versions: {
    [r-cran/3.6.3:20201217] {
      contexts: all
      dependencies: {
        r/3.6.3
      }
      CRAN snapshot from 12/16/2019, includes 13,846 R modules
      prefix: /opt/shared/r/add-ons/r3.6.3/cran/20191217
    }
    [r-cran/4.1.3:20220517] {
      contexts: all
      dependencies: {
        r/4.1.3
        gsl/2.6
        gdal/3.2.0
        tcltk/8.6.10
        proj/6.3.2
        geos/3.9.1
      }
      CRAN snapshot from 2022/05/17, includes 16,990 R modules
      prefix: /opt/shared/r/add-ons/r4.1.3/cran/20220517
    }
  }
}

[r-studio-server] {
  contexts: all
  actions: {
    R_DASH_STUDIO_DASH_SERVER_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://rocker-project.org/use/singularity.html
  RStudio Server containerized application
  prefix: /opt/shared/singularity/prebuilt/r-studio-server
  source file: /opt/shared/valet/2.1/etc/r-studio-server.vpkg_yaml
  default version: r-studio-server/4.2.1
  versions: {
    [r-studio-server/4.2] {
      contexts: all
      actions: {
        RSTUDIO_SERVER_VERSION=4.2 (contexts: all)
        SINGULARITY_IMAGE=${VALET_PATH_PREFIX}/4.2.sif (contexts: all)
      }
      dependencies: {
        singularity/default
      }
      container release 4.2
      prefix: /opt/shared/singularity/prebuilt/r-studio-server/.
    }
    [r-studio-server/4.2.1] {
      contexts: all
      actions: {
        RSTUDIO_SERVER_VERSION=4.2.1 (contexts: all)
        SINGULARITY_IMAGE=${VALET_PATH_PREFIX}/4.2.1.sif (contexts: all)
      }
      dependencies: {
        singularity/default
      }
      container release 4.2.1
      prefix: /opt/shared/singularity/prebuilt/r-studio-server/.
    }
  }
}

[rclone] {
  contexts: all
  actions: {
    RCLONE_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://rclone.org
  a command line program to manage files on cloud storage
  prefix: /opt/shared/rclone
  source file: /opt/shared/valet/2.1/etc/rclone.vpkg_yaml
  default version: rclone/1.54.1
  versions: {
    [rclone/1.54.1] {
      contexts: all
      official release 1.54.1
      prefix: /opt/shared/rclone/1.54.1
      standard paths: {
        bin: /opt/shared/rclone/1.54.1/bin
        man: /opt/shared/rclone/1.54.1/man
      }
    }
  }
}

[scalapack] {
  contexts: all
  actions: {
    SCALAPACK_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.netlib.org/scalapack/
  ScaLAPACK - Scalable Linear Algebra PACKage
  prefix: /opt/shared/scalapack
  source file: /opt/shared/valet/2.1/etc/scalapack.vpkg_yaml
  default version: scalapack/2.1.0
  versions: {
    [scalapack/2.1.0] {
      contexts: all
      dependencies: {
        lapack/3.9.0
      }
      ScaLAPACK compiled with system compilers
      prefix: /opt/shared/scalapack/2.1.0
      standard paths: {
        lib: /opt/shared/scalapack/2.1.0/lib
        pkgConfig: /opt/shared/scalapack/2.1.0/lib/pkgconfig
      }
    }
    [scalapack/2.1.0:intel-2020] {
      contexts: all
      dependencies: {
        lapack/3.9.0:intel-2020
      }
      ScaLAPACK compiled with Intel 2020 compilers
      prefix: /opt/shared/scalapack/2.1.0-intel-2020
      standard paths: {
        lib: /opt/shared/scalapack/2.1.0-intel-2020/lib
        pkgConfig: /opt/shared/scalapack/2.1.0-intel-2020/lib/pkgconfig
      }
    }
  }
}

[scons] {
  contexts: all
  actions: {
    SCONS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://scons.org
  SCons: A software construction tool
  prefix: /opt/shared/scons
  source file: /opt/shared/valet/2.1/etc/scons.vpkg_yaml
  default version: scons/4.0.1
  versions: {
    [scons/3.1.2] {
      contexts: all
      uses OS Python release
      prefix: /opt/shared/scons/3.1.2
      standard paths: {
        bin: /opt/shared/scons/3.1.2/bin
        lib: /opt/shared/scons/3.1.2/lib
        man: /opt/shared/scons/3.1.2/man
      }
    }
    [scons/4.0.1] {
      contexts: all
      actions: {
        PYTHONPATH+=[:]${VALET_PATH_PREFIX}/lib/python3.6/site-packages (contexts: all)
      }
      uses OS Python 3 release
      prefix: /opt/shared/scons/4.0.1
      standard paths: {
        bin: /opt/shared/scons/4.0.1/bin
        lib: /opt/shared/scons/4.0.1/lib
      }
    }
  }
}

[singularity] {
  contexts: all
  actions: {
    PATH+=[:]/opt/shared/singularity/utils/bin (contexts: all)
    PATH+=[:]/opt/shared/singularity/utils/sbin (contexts: all)
    SINGULARITY_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://singularity.lbl.gov/
  Singularity containers can be used to package entire scientific workflows, software and libraries, and even data.
  prefix: /opt/shared/singularity
  source file: /opt/shared/valet/2.1/etc/singularity.vpkg_yaml
  default version: singularity/3.11.1
  versions: {
    [singularity/3.7.1] {
      contexts: all
      alias-to: singularity/current
    }
    [singularity/3.7.3] {
      contexts: all
      alias-to: singularity/current
    }
    [singularity/3.9.1] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          any : /opt/shared/valet/2.1/libexec/singularity_opts_v3.sh
        } (contexts: all)
      }
      dependencies: {
        squashfs-tools/4.5.1
      }
      built with GO 1.17
      prefix: /opt/shared/singularity/3.9.1
      standard paths: {
        bin: /opt/shared/singularity/3.9.1/bin
      }
    }
    [singularity/3.10.0] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          any : /opt/shared/valet/2.1/libexec/singularity_opts_v3.sh
        } (contexts: all)
      }
      dependencies: {
        squashfs-tools/4.5.1
      }
      built with GO 1.17
      prefix: /opt/shared/singularity/3.10.0
      standard paths: {
        bin: /opt/shared/singularity/3.10.0/bin
        man: /opt/shared/singularity/3.10.0/share/man
      }
    }
    [singularity/3.11.1] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          any : /opt/shared/valet/2.1/libexec/singularity_opts_v3.sh
        } (contexts: all)
      }
      dependencies: {
        squashfs-tools/4.5.1
      }
      built with GO 1.20
      prefix: /opt/shared/singularity/3.11.1
      standard paths: {
        bin: /opt/shared/singularity/3.11.1/bin
        man: /opt/shared/singularity/3.11.1/share/man
      }
    }
    [singularity/current] {
      contexts: all
      alias-to: singularity/3.10.0
    }
  }
}

[squashfs-tools] {
  contexts: all
  actions: {
    SQUASHFS_DASH_TOOLS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://github.com/plougher/squashfs-tools
  compressed read-only file system for Linux
  prefix: /opt/shared/squashfs-tools
  source file: /opt/shared/valet/2.1/etc/squashfs-tools.vpkg_yaml
  default version: squashfs-tools/system
  versions: {
    [squashfs-tools/4.5.1] {
      contexts: all
      GZIP, LZO, XZ support
      prefix: /opt/shared/squashfs-tools/4.5.1
      standard paths: {
        bin: /opt/shared/squashfs-tools/4.5.1/bin
        man: /opt/shared/squashfs-tools/4.5.1/man
      }
    }
    [squashfs-tools/system] {
      contexts: all
      OS-native tools
      prefix: /opt/shared/squashfs-tools/system
    }
  }
}

[stata] {
  contexts: all
  flags: no-standard-paths
  actions: {
    PATH+=[:]${VALET_PATH_PREFIX} (contexts: all)
    STATA_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.stata.com/
  STATA - Statistics/Data Analysis
  prefix: /opt/shared/stata
  source file: /opt/shared/valet/2.1/etc/stata.vpkg_yaml
  default version: stata/16
  versions: {
    [stata/16] {
      contexts: all
      version 16 for Linux 64-bit (legacy)
      prefix: /opt/shared/stata/16
    }
  }
}

[szip] {
  contexts: all
  actions: {
    SZIP_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://support.hdfgroup.org/doc_resource/SZIP/
  Szip Compression in HDF Products
  prefix: /opt/shared/szip
  source file: /opt/shared/valet/2.1/etc/szip.vpkg_yaml
  default version: szip/2.1.1
  versions: {
    [szip/2.1.1] {
      contexts: all
      SZIP compiled with system compilers
      prefix: /opt/shared/szip/2.1.1
      standard paths: {
        lib: /opt/shared/szip/2.1.1/lib
        include: /opt/shared/szip/2.1.1/include
      }
    }
  }
}

[tau] {
  contexts: all
  actions: {
    TAU_LIB=${VALET_PATH_PREFIX}/x86_64/lib (contexts: all)
    TAU_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.cs.uoregon.edu/research/tau/home.php
  TAU: Tuning and Analysis Utilities
  prefix: /opt/shared/tau
  source file: /opt/shared/valet/2.1/etc/tau.vpkg_yaml
  default version: tau/2.27.2
  versions: {
    [tau/2.27.2] {
      contexts: all
      actions: {
        TAU_MAKEFILE=${VALET_PATH_PREFIX}/x86_64/lib/Makefile.tau-pthread-pdt (contexts: all)
      }
      dependencies: {
        pdt/3.25.1
      }
      tau compiled with system compilers
      prefix: /opt/shared/tau/2.27.2
      standard paths: {
        bin: /opt/shared/tau/2.27.2/bin
        lib: /opt/shared/tau/2.27.2/lib
        man: /opt/shared/tau/2.27.2/man
        include: /opt/shared/tau/2.27.2/include
      }
    }
    [tau/2.33:gcc-12.2.0] {
      contexts: all
      actions: {
        TAU_MAKEFILE=${VALET_PATH_PREFIX}/x86_64/lib/Makefile.tau-pthread-pdt (contexts: all)
      }
      dependencies: {
        pdt/3.25.1:gcc-12.2.0
      }
      tau compiled with GCC 12 compilers
      prefix: /opt/shared/tau/2.33-gcc-12.2.0
      standard paths: {
        bin: /opt/shared/tau/2.33-gcc-12.2.0/bin
        lib: /opt/shared/tau/2.33-gcc-12.2.0/lib
        man: /opt/shared/tau/2.33-gcc-12.2.0/man
        include: /opt/shared/tau/2.33-gcc-12.2.0/include
      }
    }
    [tau/2.33:gcc-12.2.0,papi] {
      contexts: all
      actions: {
        TAU_MAKEFILE=${VALET_PATH_PREFIX}/x86_64/lib/Makefile.tau-papi-pthread-pdt (contexts: all)
      }
      dependencies: {
        pdt/3.25.1:gcc-12.2.0
        papi/7.0.0
      }
      tau compiled with GCC 12 compilers + PAPI threads
      prefix: /opt/shared/tau/2.33-gcc-12.2.0-papi
      standard paths: {
        bin: /opt/shared/tau/2.33-gcc-12.2.0-papi/bin
        lib: /opt/shared/tau/2.33-gcc-12.2.0-papi/lib
        man: /opt/shared/tau/2.33-gcc-12.2.0-papi/man
        include: /opt/shared/tau/2.33-gcc-12.2.0-papi/include
      }
    }
    [tau/2.33:openmpi] {
      contexts: all
      actions: {
        TAU_MAKEFILE=${VALET_PATH_PREFIX}/x86_64/lib/Makefile.tau-mpi-pthread-pdt (contexts: all)
      }
      dependencies: {
        pdt/3.25.1:gcc-12.2.0
        openmpi/4.1.5:gcc-12.2
      }
      tau compiled with MPI +  GCC 12 compilers
      prefix: /opt/shared/tau/2.33-openmpi
      standard paths: {
        bin: /opt/shared/tau/2.33-openmpi/bin
        lib: /opt/shared/tau/2.33-openmpi/lib
        man: /opt/shared/tau/2.33-openmpi/man
        include: /opt/shared/tau/2.33-openmpi/include
      }
    }
  }
}

[tcltk] {
  contexts: all
  actions: {
    TCLTK_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://www.tcl.tk/
  TCL & Tk
  prefix: /opt/shared/tcltk
  source file: /opt/shared/valet/2.1/etc/tcltk.vpkg_yaml
  default version: tcltk/8.6.10
  versions: {
    [tcltk/8.6.10] {
      contexts: all
      TCL & Tk with system compiler
      prefix: /opt/shared/tcltk/8.6.10
      standard paths: {
        bin: /opt/shared/tcltk/8.6.10/bin
        lib: /opt/shared/tcltk/8.6.10/lib
        man: /opt/shared/tcltk/8.6.10/man, /opt/shared/tcltk/8.6.10/share/man
        include: /opt/shared/tcltk/8.6.10/include
        pkgConfig: /opt/shared/tcltk/8.6.10/lib/pkgconfig
      }
    }
  }
}

[tensorflow] {
  contexts: all
  actions: {
    SINGULARITY_IMAGE=${VALET_PATH_PREFIX}/tensorflow.sif (contexts: all)
    TENSORFLOW_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  dependencies: {
    singularity/default
  }
  https://hub.docker.com/r/rocm/tensorflow
  official TensorFlow containers
  prefix: /opt/shared/singularity/images/tensorflow
  source file: /opt/shared/valet/2.1/etc/tensorflow.vpkg_yaml
  default version: tensorflow/2.9:rocm
  versions: {
    [tensorflow/2.3:rocm] {
      contexts: all
      TF 2.3 with ROCM 4.2 AMD GPU support
      prefix: /opt/shared/singularity/images/tensorflow/2.3-rocm
    }
    [tensorflow/2.8:rocm] {
      contexts: all
      TF 2.8 with ROCM 5.2.0 AMD GPU support
      prefix: /opt/shared/singularity/images/tensorflow/2.8-rocm
    }
    [tensorflow/2.9:rocm] {
      contexts: all
      TF 2.9 with ROCM 5.2.0 AMD GPU support
      prefix: /opt/shared/singularity/images/tensorflow/2.9-rocm
    }
  }
}

[ucx] {
  contexts: all
  actions: {
    UCX_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://openucx.org
  an open-source, production-grade communication framework for data-centric and high-performance applications
  prefix: /opt/shared/ucx
  source file: /opt/shared/valet/2.1/etc/ucx.vpkg_yaml
  default version: ucx/1.13.1
  versions: {
    [ucx/1.13.1] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/ucx/1.13.1
      standard paths: {
        bin: /opt/shared/ucx/1.13.1/bin
        lib: /opt/shared/ucx/1.13.1/lib
        include: /opt/shared/ucx/1.13.1/include
        pkgConfig: /opt/shared/ucx/1.13.1/lib/pkgconfig
      }
    }
  }
}

[udbuild] {
  contexts: all
  flags: no-development-env,no-standard-paths
  actions: {
    UDBUILD_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://docs.hpc.udel.edu/software/valet/start
  Setup sysadmin environment to deploy software to cluster
  prefix: /opt/shared
  source file: /opt/shared/valet/2.1/etc/udbuild.vpkg_json
  default version: udbuild/2
  versions: {
    [udbuild/2] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/udbuild2.sh
        } (contexts: all)
      }
      Setup Environment (version 2)
      prefix: /opt/shared/
    }
    [udbuild/3] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/udbuild3.sh
        } (contexts: all)
      }
      Setup Environment (version 3)
      prefix: /opt/shared/
    }
  }
}

[udbuild] {
  contexts: all
  flags: no-development-env,no-standard-paths
  actions: {
    UDBUILD_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://docs.hpc.udel.edu/software/valet/start
  Setup sysadmin environment to deploy software to cluster
  prefix: /opt/shared
  source file: /opt/shared/valet/2.1/etc/udbuild.vpkg_yaml
  default version: udbuild/2
  versions: {
    [udbuild/2] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/valet/2.1/libexec/udbuild2.sh
        } (contexts: all)
      }
      Software build environment (version 2)
      prefix: /opt/shared/
    }
  }
}

[udunits] {
  contexts: all
  actions: {
    UDUNITS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.unidata.ucar.edu/software/udunits/
  Conversion of numeric values between compatible units
  prefix: /opt/shared/udunits
  source file: /opt/shared/valet/2.1/etc/udunits.vpkg_yaml
  default version: udunits/2.2.28
  versions: {
    [udunits/2.2] {
      contexts: all
      alias-to: udunits/2.2.28
    }
    [udunits/2.2.28] {
      contexts: all
      udunits compiled with system compilers
      prefix: /opt/shared/udunits/2.2.28
      standard paths: {
        bin: /opt/shared/udunits/2.2.28/bin
        lib: /opt/shared/udunits/2.2.28/lib
        info: /opt/shared/udunits/2.2.28/share/info
        include: /opt/shared/udunits/2.2.28/include
      }
    }
  }
}

[valgrind] {
  contexts: all
  actions: {
    VALGRIND_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://valgrind.org
  An instrumentation framework for building dynamic analysis tools
  prefix: /opt/shared/valgrind
  source file: /opt/shared/valet/2.1/etc/valgrind.vpkg_yaml
  default version: valgrind/3.22.0
  versions: {
    [valgrind/3.22.0] {
      contexts: all
      compiled with system compilers
      prefix: /opt/shared/valgrind/3.22.0
      standard paths: {
        bin: /opt/shared/valgrind/3.22.0/bin
        lib: /opt/shared/valgrind/3.22.0/lib
        man: /opt/shared/valgrind/3.22.0/share/man
        include: /opt/shared/valgrind/3.22.0/include
        pkgConfig: /opt/shared/valgrind/3.22.0/lib/pkgconfig
      }
    }
  }
}

[visit] {
  contexts: all
  flags: no-development-env
  actions: {
    VISIT_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://wci.llnl.gov/codes/visit/home.html
  VisIt: Interactive Visualization
  prefix: /opt/shared/visit
  source file: /opt/shared/valet/2.1/etc/visit.vpkg_yaml
  default version: visit/3.2.1
  versions: {
    [visit/3.2.1] {
      contexts: all
      dependencies: {
        libfabric/1.11.2
        openmpi/4.1.0:gcc-10.1.0
        intel-mkl/2020u4
      }
      Version 3.2.1 (local build, all options, Mesa graphics)
      prefix: /opt/shared/visit/3.2.1
      standard paths: {
        bin: /opt/shared/visit/3.2.1/bin
      }
    }
  }
}

[vmd] {
  contexts: all
  actions: {
    VMD_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  http://www.ks.uiuc.edu/Research/vmd/
  Visualization and analysis of biological systems
  prefix: /opt/shared/vmd
  source file: /opt/shared/valet/2.1/etc/vmd.vpkg_yaml
  default version: vmd/1.9.3
  versions: {
    [vmd/1.9.3] {
      contexts: all
      Version 1.9.3 (Linux 64-bit x86_64)
      prefix: /opt/shared/vmd/1.9.3
      standard paths: {
        bin: /opt/shared/vmd/1.9.3/bin
        lib: /opt/shared/vmd/1.9.3/lib
      }
    }
  }
}

[vtune] {
  contexts: all
  flags: no-development-env,no-standard-paths
  actions: {
    VTUNE_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/vtune-profiler.html
  Intel VTune Profiler
  prefix: /opt/shared/vtune
  source file: /opt/shared/valet/2.1/etc/vtune.vpkg_yaml
  default version: vtune/2021
  versions: {
    [vtune/2021] {
      contexts: all
      alias-to: vtune/2021u2
    }
    [vtune/2021u2] {
      contexts: all
      actions: {
        executable(source, succeedThenFail, success=0) {
          sh : /opt/shared/vtune/2021u2/vtune/2021.2.0/vtune-vars.sh
        } (contexts: all)
      }
      Version 2021, Update 2 (2021.2.0)
      prefix: /opt/shared/vtune/2021u2
    }
  }
}

[wgss] {
  contexts: all
  actions: {
    VALET_PATH=${VALET_PATH_PREFIX}/valet (contexts: all)
    WGSS_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://docs.hpc.udel.edu/technical/developer/wgss
  WorkGroup-Sponsored Software
  prefix: /opt/shared/wgss
  source file: /opt/shared/valet/2.1/etc/wgss.vpkg_yaml
  default version: wgss/nil
  versions: {
    [wgss/nil] {
      contexts: all
      non-existent stand-in wgss entity
      prefix: /opt/shared/wgss/nil
    }
  }
}

[xdinfo] {
  contexts: all
  actions: {
    XDINFO_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  dependencies: {
    xdresourceid
  }
  https://software.xsede.org/packaged-software/xsede-information-cli-xdinfo
  XSEDE Information CLI
  prefix: /opt/shared/xsede/xdinfo
  source file: /opt/shared/valet/2.1/etc/xdinfo.vpkg_yaml
  default version: xdinfo/1.5-1
  versions: {
    [xdinfo/1.5-1] {
      contexts: all
      version 1.5-1
      prefix: /opt/shared/xsede/xdinfo/1.5-1
      standard paths: {
        bin: /opt/shared/xsede/xdinfo/1.5-1/bin, /opt/shared/xsede/xdinfo/1.5-1/sbin
      }
    }
  }
}

[xdresourceid] {
  contexts: all
  actions: {
    XDRESOURCEID_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://software.xsede.org/packaged-software/xsede-resource-identity
  XSEDE Resource Identity
  prefix: /opt/shared/xsede/xdresourceid
  source file: /opt/shared/valet/2.1/etc/xdresourceid.vpkg_yaml
  default version: xdresourceid/1.0-2
  versions: {
    [xdresourceid/1.0-2] {
      contexts: all
      version 1.0-2
      prefix: /opt/shared/xsede/xdresourceid/1.0-2
      standard paths: {
        bin: /opt/shared/xsede/xdresourceid/1.0-2/bin, /opt/shared/xsede/xdresourceid/1.0-2/sbin
      }
    }
  }
}

[xdusage] {
  contexts: all
  actions: {
    XDUSAGE_PREFIX=${VALET_PATH_PREFIX} (contexts: development)
  }
  https://software.xsede.org/packaged-software/xsede-usage-xdusage
  XSEDE Usage
  prefix: /opt/shared/xsede/xdusage
  source file: /opt/shared/valet/2.1/etc/xdusage.vpkg_yaml
  default version: xdusage/2.1-1
  versions: {
    [xdusage/2.1-1] {
      contexts: all
      current version of xdusage for XSEDE allocation usage lookup
      prefix: /opt/shared/xsede/xdusage/2.1-1
      standard paths: {
        bin: /opt/shared/xsede/xdusage/2.1-1/bin, /opt/shared/xsede/xdusage/2.1-1/sbin
      }
    }
  }
}

usage: vpkg_info [-h] [--verbose] [--context <context-list>] [--parent]
                 <pkgId|versPkgId> [<pkgId|versPkgId> ...]
vpkg_info: error: too few arguments
